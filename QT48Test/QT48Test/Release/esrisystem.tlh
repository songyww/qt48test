// Created by Microsoft (R) C/C++ Compiler Version 10.00.30319.01 (c479186c).
//
// e:\vsproject\qt48test\qt48test\release\esrisystem.tlh
//
// C++ source equivalent of Win32 type library esrisystem.olb
// compiler-generated file created 12/01/16 at 15:39:09 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

//
// Forward references and typedefs
//

struct __declspec(uuid("5e1f7bc3-67c5-4aee-8ec6-c4b73aac42ed"))
/* LIBID */ __esriSystem;
enum esriDrawOp;
enum esriByteSwapDataType;
enum esriArcGISVersion;
struct __declspec(uuid("cba26148-cd2c-44ac-bbf5-b228b55a198d"))
/* interface */ IClassifyGEN;
struct __declspec(uuid("1714d59b-fb22-11d1-94a2-080009eebecb"))
/* dual interface */ IUID;
struct __declspec(uuid("e718734d-d494-4e44-92c8-e2212b4a2f8d"))
/* interface */ IByteSwapStreamIO;
enum esriLicenseProductCode;
enum esriLicenseExtensionCode;
enum esriLicenseStatus;
enum esriProductInstalled;
enum esriServerMessageCodeEnum;
enum esriSystemMessageCodeEnum;
struct __declspec(uuid("673b47dc-3cdf-4131-ba1b-5261cd171ef7"))
/* interface */ IProductInstalled;
struct __declspec(uuid("9ab6a638-aca8-4820-830c-463ea11c8722"))
/* interface */ IAoInitialize;
struct __declspec(uuid("46ebbb64-19b8-437a-8df4-4378d88f6731"))
/* interface */ IAuthorizeLicense;
struct __declspec(uuid("a681b61d-d891-474c-9e45-9b24c6677db6"))
/* interface */ ILicenseInfoEnum;
struct __declspec(uuid("ebe6bd5b-2f03-48f0-b68b-6de8c4bdef32"))
/* interface */ ILicenseInformation;
struct __declspec(uuid("76be2722-b1f7-4fe4-b358-bfd2198cda62"))
/* interface */ IVariantStreamIO;
enum esriDrawPhase;
struct __declspec(uuid("67a4d650-69e0-11d2-8500-0000f875b9c6"))
/* interface */ IVariantStream;
struct __declspec(uuid("67a4d651-69e0-11d2-8500-0000f875b9c6"))
/* interface */ IPersistVariant;
struct __declspec(uuid("bb75da81-8dfe-4122-a9c2-86f07c539ad5"))
/* interface */ IDocumentVersionSupportGEN;
struct __declspec(uuid("33848e02-983b-11d1-8463-0000f875b9c6"))
/* interface */ ISet;
struct __declspec(uuid("aafb54d9-aaf8-11d2-87f3-0000f8751720"))
/* interface */ IArray;
struct __declspec(uuid("9bff8aeb-e415-11d0-943c-080009eebecb"))
/* interface */ IClone;
struct __declspec(uuid("8a11ad55-2f4f-11d3-9fa0-00c04f6bc6a5"))
/* interface */ IPropertySupport;
struct __declspec(uuid("18a45ba8-1266-11d1-86ad-0000f8751720"))
/* interface */ IEnumBSTR;
struct __declspec(uuid("51959a4b-d4a5-11d1-8771-0000f8751720"))
/* interface */ IEnumNamedID;
struct __declspec(uuid("0f0a3d86-8690-4d41-9df7-efefe99c4ec5"))
/* interface */ IEnumVariantSimple;
struct __declspec(uuid("3141f2f1-38e2-11d1-8809-080009ec732a"))
/* interface */ IProgressor;
struct __declspec(uuid("66353c17-df5d-11d3-9fa0-00c04f6bdf0c"))
/* interface */ IErrorCollection;
struct __declspec(uuid("ccdad2c7-8ebc-11d1-8732-0000f8751720"))
/* interface */ IStepProgressor;
struct __declspec(uuid("80cb7e35-85e4-11d1-872c-0000f8751720"))
/* interface */ IAnimationProgressor;
enum esriAnimations;
struct __declspec(uuid("828100c1-cc80-11d0-8380-080009b996cc"))
/* interface */ IStatusBar;
struct __declspec(uuid("34c20005-4d3c-11d0-92d8-00805f7c28b0"))
/* interface */ ITrackCancel;
struct __declspec(uuid("73f93cba-5d93-4d2d-b27e-30eeb4ca3b64"))
/* interface */ ITrackCancel2;
struct __declspec(uuid("bde22c32-1113-11d2-a272-080009b6f22b"))
/* interface */ ICheckProgressor;
struct __declspec(uuid("f6ed3377-94f5-11d1-9ab0-080009ec734b"))
/* interface */ IFileNames;
struct __declspec(uuid("1f1197e3-b3bb-4d9c-b530-923e39efce11"))
/* interface */ IFileNames2;
struct __declspec(uuid("d9b58741-322d-11d2-a29a-080009b6f22b"))
/* interface */ IComponentCategoryManager;
struct __declspec(uuid("cd5f0f7d-38ee-4de5-8efd-41fdb542b501"))
/* interface */ IEnumUID;
struct __declspec(uuid("c5185fd4-557c-4e07-9a75-abf060f2ef41"))
/* interface */ IComponentCategoryInfo;
struct __declspec(uuid("a8253eb0-9381-11d2-8521-0000f875b9c6"))
/* interface */ ICategoryFactory;
enum esriUnits;
enum esriAreaUnits;
enum esriCaseAppearance;
enum esriDirectionType;
enum esriDirectionUnits;
struct __declspec(uuid("1f3fbca9-6611-4567-88e4-e0fa8b6fb26d"))
/* interface */ IUnitConverter;
struct __declspec(uuid("1b64b6b4-1434-4172-8666-bbf83e5c467b"))
/* interface */ IAngularConverter;
struct __declspec(uuid("95674ba9-3cd5-429d-a5ac-9d105a099cf7"))
/* interface */ IAngularConverter2;
struct __declspec(uuid("7e4f470d-8e54-11d2-aad8-000000000000"))
/* interface */ INumberFormat;
enum esriScaleFormat;
struct __declspec(uuid("ae9eda31-a9f0-4687-b3a5-8c061c92d3eb"))
/* interface */ IScaleFormat;
struct __declspec(uuid("b9c43589-78b8-11d2-ae60-080009ec732a"))
/* interface */ IGenerateStatistics;
struct __declspec(uuid("b9c4358a-78b8-11d2-ae60-080009ec732a"))
/* interface */ IStatisticsResults;
struct __declspec(uuid("b9c4358b-78b8-11d2-ae60-080009ec732a"))
/* interface */ IFrequencyStatistics;
enum esriFilePermission;
enum esriLockMgrType;
struct __declspec(uuid("381d1aa2-c06f-11d2-9f82-00c04f8ed211"))
/* interface */ IFile;
enum esriProductCode;
struct __declspec(uuid("fcf1e388-5c7e-4bf3-af4b-155d93f8297f"))
/* interface */ IESRILicenseInfo;
struct __declspec(uuid("4ba33331-d55f-11d1-8882-0000f877762d"))
/* interface */ IName;
struct __declspec(uuid("ef237a51-cb69-11d2-9f26-00c04f6bc69e"))
/* interface */ IEnumName;
struct __declspec(uuid("fdafad91-67fe-11d4-8155-00c04f686238"))
/* interface */ IEnumNameEdit;
struct __declspec(uuid("51ad0a33-c607-11d2-9f23-00c04f6bc69e"))
/* interface */ INameFactory;
struct __declspec(uuid("db1eccbf-c6c6-11d2-9f24-00c04f6bc69e"))
/* interface */ IParseNameString;
struct __declspec(uuid("53da75e0-d01a-11d2-9f27-00c04f6bc69e"))
/* interface */ IFileName;
struct __declspec(uuid("7f657ec9-dbf1-11d2-9f2f-00c04f6bc69e"))
/* interface */ IExtension;
struct __declspec(uuid("35d9879a-db68-4a2f-87cc-7206f0060b71"))
/* interface */ IExtensionAccelerators;
enum esriExtensionState;
struct __declspec(uuid("12a4c258-cc9d-4ca7-9f29-79ded88dd45f"))
/* interface */ IExtensionConfig;
struct __declspec(uuid("d3ae4638-5c68-4f1b-aadf-8bec8deb4f8b"))
/* interface */ IParentExtension;
struct __declspec(uuid("1d45017c-2a13-4cdf-afc7-59f9d0c17c71"))
/* interface */ IChildExtension;
struct __declspec(uuid("8a1a05f8-1521-435c-9b0e-1f2b148e0ae4"))
/* interface */ IParentLicenseExtension;
struct __declspec(uuid("a5009874-e58f-42df-be62-873a7661ecdf"))
/* interface */ IAutoExtension;
enum esriCoreErrorReturnCodes;
struct __declspec(uuid("05c71634-d9d5-4d6f-b68e-d7661142fa06"))
/* interface */ IExtensionManager;
struct __declspec(uuid("262c00f9-114d-45f8-bc9d-a0dd208dc9e1"))
/* interface */ IExtensionManagerAdmin;
struct __declspec(uuid("c4b2bfc5-eb46-4909-801c-c32a6ede120d"))
/* interface */ IArray2;
struct __declspec(uuid("f0ba6abc-8e9f-11d0-b4ab-0000f8037368"))
/* interface */ IPropertySet;
struct __declspec(uuid("613c41d5-3325-11d4-8141-00c04f686238"))
/* interface */ IPropertySet2;
struct __declspec(uuid("68f0ab65-e2b7-40d8-aa3b-3b7764607dd3"))
/* interface */ IMemoryBlobStreamVariant;
struct __declspec(uuid("54f9ffb6-e91f-11d2-9f81-00c04f8ece27"))
/* interface */ ILongArray;
struct __declspec(uuid("60c06ca6-e09e-11d2-9f7b-00c04f8ece27"))
/* interface */ IDoubleArray;
struct __declspec(uuid("206216c9-7253-4a4d-92dd-60329fd9d792"))
/* interface */ IStringArray;
struct __declspec(uuid("3a10189d-0377-4ddf-8c05-a2672af6a403"))
/* interface */ IVariantArray;
struct __declspec(uuid("93fc737f-8c92-4c92-b0d7-75e71fd753c9"))
/* interface */ IPropertySetArray;
struct __declspec(uuid("30fa4757-a2f3-4d11-b944-059aad5c3991"))
/* interface */ IObjectConstruct;
struct __declspec(uuid("55446beb-10ca-40a4-9f40-261ca4a7f35a"))
/* interface */ IObjectValidate;
struct __declspec(uuid("e3b78022-143e-4e61-9099-ed319ec061e7"))
/* interface */ IObjectActivate;
struct __declspec(uuid("d641f414-1004-4e73-9386-f6ea543e2d95"))
/* interface */ IObjectUpdate;
struct __declspec(uuid("6f39c621-470b-4e6d-9033-a8598e286cab"))
/* interface */ ILog;
struct __declspec(uuid("44f1fe1d-ccc4-4a5f-977a-233c25a45625"))
/* interface */ ILog2;
enum esriJobMessageType;
struct __declspec(uuid("b611d33a-01a3-47e3-ae7d-44076c727abc"))
/* interface */ IJobMessage;
struct __declspec(uuid("e95e6c90-0029-47e6-b0ea-5c6aa6642968"))
/* interface */ IJobTracker;
struct __declspec(uuid("3551eb0b-ae83-40a3-a048-02ab9ffbee0d"))
/* interface */ IEnvironmentManager;
struct __declspec(uuid("32d4c328-e473-4615-922c-63c108f55e60"))
/* interface */ IServerEnvironment;
struct __declspec(uuid("dcee6bd6-395a-49ab-ae32-0559125c1daf"))
/* interface */ IServerUserInfo;
struct __declspec(uuid("8037ee78-6197-4b8e-8f8b-52c744e42a31"))
/* interface */ IServerEnvironment2;
struct __declspec(uuid("9940e0cd-d279-468a-b0ea-c546da5c3d0c"))
/* interface */ IServerEnvironment3;
struct __declspec(uuid("4f6ee3e2-25d7-4957-b008-3a5e9ce28180"))
/* interface */ ILogSupport;
struct __declspec(uuid("9c3673ea-bc0a-11d5-a9df-00104bb6fc1c"))
/* interface */ IObjectCopy;
struct __declspec(uuid("e2015546-27b9-4ac4-bb8b-64b429513d44"))
/* interface */ IXMLPersistedObject;
struct __declspec(uuid("0e3b4663-4ca5-4638-aa4a-7d89878209e5"))
/* interface */ IJITExtensionManager;
struct __declspec(uuid("848e0e84-e280-4883-ba8c-320864c3d42e"))
/* interface */ ISystemBridge;
struct __declspec(uuid("6b61d022-cae6-41a9-bd13-6dac82cffefd"))
/* interface */ ITestConnection;
struct __declspec(uuid("1074568c-cc5f-48b4-9316-015cad473359"))
/* interface */ IRectHolder;
struct __declspec(uuid("e29b3c76-e7b2-458e-8732-e929391da234"))
/* interface */ IShortcutName;
struct __declspec(uuid("69467533-f25b-4ef3-b680-229b4dc6087b"))
/* interface */ IArcGISLocale;
struct __declspec(uuid("52620d38-e275-4725-a976-65bcdd2c93fd"))
/* interface */ IInputDeviceManager;
struct /* coclass */ InputDeviceManager;
struct /* coclass */ Set;
struct /* coclass */ Array;
struct __declspec(uuid("c8545045-6615-48e3-af27-52a0e5fc35e2"))
/* interface */ IXMLSerialize;
struct __declspec(uuid("5bb4a18d-43bc-41c5-987a-2206fd15488f"))
/* interface */ IXMLSerializeData;
struct /* coclass */ ObjectStream;
struct __declspec(uuid("18a45ba7-1266-11d1-86ad-0000f8751720"))
/* interface */ IObjectStream;
struct __declspec(uuid("ecc43c55-0148-4ec1-bf87-b9a183c5dc98"))
/* interface */ IDocumentVersion;
struct /* coclass */ ByteSwapStreamIO;
struct /* coclass */ VariantStreamIO;
struct /* coclass */ UID;
struct /* coclass */ ComponentCategoryManager;
struct /* coclass */ CategoryFactory;
struct /* coclass */ BaseStatistics;
struct /* coclass */ FileStream;
struct __declspec(uuid("bc92995e-e736-11d0-9a93-080009ec734b"))
/* interface */ IBlobStream;
struct /* coclass */ NameFactory;
struct /* coclass */ FileName;
struct /* coclass */ MemoryBlobStream;
struct __declspec(uuid("bc92995f-e736-11d0-9a93-080009ec734b"))
/* interface */ IMemoryBlobStream;
struct __declspec(uuid("5ce09f2c-9c93-4a3b-83ad-e12fb6a67ad4"))
/* interface */ IMemoryBlobStream2;
struct /* coclass */ ESRILicenseInfo;
struct /* coclass */ ExtensionManager;
struct /* coclass */ FileNames;
struct /* coclass */ PropertySet;
struct /* coclass */ EnvironmentManager;
struct /* coclass */ DoubleArray;
struct /* coclass */ LongArray;
struct /* coclass */ StrArray;
struct /* coclass */ VarArray;
struct /* coclass */ PropertySetArray;
struct __declspec(uuid("72ca65b9-13de-48b7-8443-717b69b72a99"))
/* interface */ IXMLVersionSupport;
struct /* coclass */ UnitConverter;
struct /* coclass */ AngularConverter;
struct /* coclass */ ScaleFormat;
struct /* coclass */ AoInitialize;
struct /* coclass */ ProductInstalled;
struct /* coclass */ LicenseInfoEnum;
struct /* coclass */ AoAuthorizeLicense;
struct /* coclass */ ObjectCopy;
struct /* coclass */ XMLPersistedObject;
struct /* coclass */ SystemHelper;
struct /* coclass */ ShortcutName;
struct /* coclass */ ArcGISLocale;
struct _WKSPoint;
struct _WKSPointZ;
struct _WKSEnvelope;
struct _WKSEnvelopeZ;
struct _esriPointAttributes;
struct _esriPointAttributesEx;
struct _esriSegmentModifier;
enum esriLicenseServerEdition;
struct __declspec(uuid("9f9650f1-5f49-4041-ba0f-d10baff1d7bc"))
/* interface */ IClassID;
struct __declspec(uuid("d5c7a525-dfb8-11d1-aaad-00c04fa334b3"))
/* interface */ IClassify;
struct __declspec(uuid("ac6c5899-241b-11d3-9f50-00c04f6bc709"))
/* interface */ IClassifyMinMax;
struct __declspec(uuid("b42e7156-f8a5-415b-abb4-230ca421f4b2"))
/* interface */ IClassifyMinMax2;
struct __declspec(uuid("62144be6-e05e-11d1-aaae-00c04fa334b3"))
/* interface */ IIntervalRange;
struct __declspec(uuid("29697055-d00b-45ab-91bf-1543d4438086"))
/* interface */ IIntervalRange2;
struct __declspec(uuid("62144be7-e05e-11d1-aaae-00c04fa334b3"))
/* interface */ IDeviationInterval;
struct /* coclass */ EqualInterval;
struct /* coclass */ Quantile;
struct /* coclass */ DefinedInterval;
struct /* coclass */ NaturalBreaks;
struct /* coclass */ StandardDeviation;
struct /* coclass */ GeometricalInterval;
enum esriRoundingOptionEnum;
enum esriNumericAlignmentEnum;
enum esriDirectionFormatEnum;
struct __declspec(uuid("7e4f4710-8e54-11d2-aad8-000000000000"))
/* interface */ INumericFormat;
struct __declspec(uuid("7e4f4711-8e54-11d2-aad8-000000000000"))
/* interface */ IPercentageFormat;
enum esriFractionOptionEnum;
struct __declspec(uuid("7e4f4713-8e54-11d2-aad8-000000000000"))
/* interface */ IFractionFormat;
struct __declspec(uuid("7e4f4714-8e54-11d2-aad8-000000000000"))
/* interface */ ILatLonFormat;
struct __declspec(uuid("127b0952-e8b4-428c-ac39-58de4d1f17de"))
/* interface */ ILatLonFormat2;
struct __declspec(uuid("7e4f4716-8e54-11d2-aad8-000000000000"))
/* interface */ IAngleFormat;
struct __declspec(uuid("11d7b4c8-dbdf-4b98-ac6d-8c419efd2c24"))
/* interface */ IDirectionFormat;
struct __declspec(uuid("7e4f4717-8e54-11d2-aad8-000000000000"))
/* interface */ IRateFormat;
struct __declspec(uuid("7e4f4718-8e54-11d2-aad8-000000000000"))
/* interface */ ICustomNumberFormat;
struct __declspec(uuid("d4f5c355-76b8-11d3-9fc3-00c04f6bc78e"))
/* interface */ IScientificNumberFormat;
struct __declspec(uuid("5ef43b7e-3bc1-4b25-a5c0-08218c75be06"))
/* interface */ INumberFormatOperations;
struct /* coclass */ NumericFormat;
struct /* coclass */ CurrencyFormat;
struct /* coclass */ PercentageFormat;
struct /* coclass */ FractionFormat;
struct /* coclass */ LatLonFormat;
struct /* coclass */ AngleFormat;
struct /* coclass */ DirectionFormat;
struct /* coclass */ ScientificFormat;
struct /* coclass */ RateFormat;
struct /* coclass */ CustomNumberFormat;
struct __declspec(uuid("a9a5de92-e3c9-4940-b0f4-6d93cdf2602b"))
/* interface */ IXMLTypeMapper;
struct __declspec(uuid("3e23a49e-9f66-42d5-9982-5e3e5c0821e0"))
/* interface */ IXMLAttributes;
struct __declspec(uuid("032b72dc-e0fb-4bb1-8626-1797e25a72a0"))
/* interface */ IXMLNamespaces;
struct __declspec(uuid("d405f844-8057-4df4-b2da-df25dedebf4c"))
/* interface */ IXMLReader;
struct __declspec(uuid("5f50e520-1278-4c7a-937c-ae5874548431"))
/* interface */ IXMLWriter;
struct __declspec(uuid("647f4c09-3699-4868-a74c-108122a968dc"))
/* interface */ IXMLFlags;
struct __declspec(uuid("dea199d0-371c-4955-844c-b67705e1edb2"))
/* interface */ IXMLSerializer;
struct __declspec(uuid("4deb2c9d-2162-4443-908e-25b6cb7fb6df"))
/* interface */ IXMLSerializerAlt;
struct __declspec(uuid("77d57dda-e1e3-459a-91d1-192126bc344a"))
/* interface */ IXMLObjectElement;
struct __declspec(uuid("498a5f91-65d1-4a25-ad2b-462e7df8b358"))
/* interface */ IXMLStream;
struct /* coclass */ XMLStream;
struct /* coclass */ XMLReader;
struct /* coclass */ XMLWriter;
struct /* coclass */ XMLAttributes;
struct /* coclass */ XMLNamespaces;
struct /* coclass */ XMLTypeMapper;
struct /* coclass */ XMLSerializer;
struct /* coclass */ XMLSerializerAlt;
struct /* coclass */ XMLFlags;
struct __declspec(uuid("408cd30c-b7a6-4793-a07c-4181035c66e7"))
/* interface */ IJSONWriter;
struct __declspec(uuid("e760e960-f144-4b30-930b-5f8056e4e305"))
/* interface */ IExternalSerializer;
struct __declspec(uuid("09134de8-4147-4564-82bd-6cc18414c389"))
/* interface */ IExternalDeserializer;
struct __declspec(uuid("ab718cdf-0c06-4d18-9aa4-a6c54b2bc28c"))
/* interface */ IJSONSerializer;
struct __declspec(uuid("3eb8c519-d125-48d4-aeb6-608074316ad4"))
/* interface */ IAMFWriter;
struct __declspec(uuid("8f6f56fc-a942-44f5-af7d-5312fdf0c0c6"))
/* interface */ IAMFSerializer;
enum JSONTokenType;
struct __declspec(uuid("48105a80-e0dc-4d69-bb61-3df74cafa52c"))
/* interface */ IJSONReader;
struct __declspec(uuid("1e6dc0eb-5c8a-4401-a8af-bb5602ddfb7e"))
/* interface */ IJSONDeserializer;
struct __declspec(uuid("eea70515-fa6b-4dee-ab79-d7935bf3a838"))
/* interface */ IJSONObject;
struct __declspec(uuid("4abe3bc0-6d3c-4fba-9c55-c9ac7c32d9b1"))
/* interface */ IJSONArray;
struct __declspec(uuid("677fcbb1-c272-4616-b476-2ca3dce8d292"))
/* interface */ IJSONWriter2;
struct __declspec(uuid("2c573605-c449-47e3-a483-f441192840fa"))
/* interface */ IJSONReader2;
struct /* coclass */ JSONArray;
struct /* coclass */ JSONObject;
struct /* coclass */ JSONWriter;
struct /* coclass */ AMFWriter;
struct /* coclass */ JSONReader;
enum xmlSerializeError;
struct __declspec(uuid("f6cba4a3-bc48-47bc-9f15-2a561b9e6c71"))
/* interface */ ITimeReference;
struct __declspec(uuid("0f8fd6ab-ce6d-4bb2-a5ef-2f6035e304c5"))
/* interface */ ITimeZoneInfo;
struct __declspec(uuid("2cbfdcb1-c991-4f68-b5b1-919b1b1e6a25"))
/* interface */ ITimeZoneRule;
struct _TimeZoneTransitionTime;
struct __declspec(uuid("66810d21-8de0-44ee-b26e-465ac09f161f"))
/* interface */ ITime;
struct __declspec(uuid("953dc994-aa0d-4193-9c1f-469b60d61711"))
/* interface */ ITimeDuration;
struct _WKSTimeDuration;
enum esriTimeStringFormat;
enum esriTimeLocaleFormat;
enum esriIntegerTimeFormat;
struct _WKSDateTime;
enum esriTimeUnits;
enum esriTimeRelation;
struct __declspec(uuid("30eae8e1-26b2-4e57-a3f2-8ae7c7db2455"))
/* interface */ ITime2;
struct __declspec(uuid("53325bda-65fa-4de0-901e-2b23fffb8764"))
/* interface */ ILocaleInfo;
struct __declspec(uuid("4ce86e17-e819-4c72-bd98-e55ae59b0317"))
/* interface */ ITimeValue;
struct __declspec(uuid("bd724b95-018f-4367-9883-9560d92293a7"))
/* interface */ ITimeExtent;
struct __declspec(uuid("81899ee9-2e12-4e6c-94f1-2ba31d3cdbc5"))
/* interface */ ITimeInstant;
struct __declspec(uuid("1b4768dd-508e-4946-ab04-e042dfceb29f"))
/* interface */ ITimeZoneFactory;
struct __declspec(uuid("4caa06be-7199-40b3-adb6-78bae35d5227"))
/* interface */ ITimeZoneFactory2;
struct __declspec(uuid("7cbbb8ea-7708-464a-a6c8-96db06521b3a"))
/* interface */ ITimeOffsetOperator;
struct __declspec(uuid("7cffa76a-6552-4516-8599-98225065249e"))
/* interface */ ITimeRelationalOperator;
struct /* coclass */ Time;
struct /* coclass */ TimeDuration;
struct /* coclass */ TimeInstant;
struct /* coclass */ TimeExtent;
struct /* coclass */ TimeZoneRule;
struct /* coclass */ TimeZoneInfo;
struct /* coclass */ LocaleInfo;
struct /* coclass */ TimeReference;
struct /* coclass */ TimeZoneFactory;
enum messageSupportError;
enum esriAGSInternetMessageFormat;
enum esriTransportType;
struct __declspec(uuid("46a0e2ea-3b64-4a46-bd78-88a1660f35bb"))
/* interface */ IRequestHandler;
struct __declspec(uuid("8319e7d0-8ad1-48ed-aa99-03f9d0c93ba8"))
/* interface */ IRequestHandler2;
enum esriHttpMethod;
enum esriWebResponseDataType;
struct __declspec(uuid("d1da21f3-9ec1-40bc-b8a2-cd29a1ebed8d"))
/* interface */ IWebRequestHandler;
struct __declspec(uuid("9d66a418-d54a-48ed-88bd-043a25fa9c83"))
/* interface */ IRESTRequestHandler;
struct __declspec(uuid("2853ca57-ae88-4b5d-ada3-4cf6f938a0e0"))
/* interface */ IRESTOperation;
struct __declspec(uuid("b5561ea3-2950-4e21-9e4f-b1003b2a1baf"))
/* interface */ IRESTResource;
struct __declspec(uuid("7502c3ec-249d-4616-babb-da81f7b5c71e"))
/* interface */ IEnumRESTResource;
struct __declspec(uuid("daf01fbe-a62e-4924-86b3-e257006a92ed"))
/* interface */ IEnumRESTOperation;
struct __declspec(uuid("5d203d0e-d444-4201-ba8f-4f60fe0e4998"))
/* interface */ IRESTCallback;
struct __declspec(uuid("1538e2dc-8192-412e-a801-2b8655492aae"))
/* interface */ IRESTDispatcher;
struct /* coclass */ CoRESTResource;
struct /* coclass */ CoRESTOperation;
struct /* coclass */ CoRESTDispatcher;
struct __declspec(uuid("fc221ff0-1240-43a0-8d76-3e917d029ce6"))
/* interface */ IProxyServerInfo;
struct __declspec(uuid("e724e8b4-f2fb-40ea-bf7e-eb296db6acda"))
/* interface */ IProxyServerInfo2;
struct __declspec(uuid("0dbcfafe-4724-416c-a4cd-c0eed8ca7d87"))
/* interface */ ISSLInfo;
struct __declspec(uuid("e4e5591d-c47e-4a2d-856e-8a1847547a97"))
/* interface */ IMessage;
struct /* coclass */ ProxyServerInfo;
struct /* coclass */ SSLInfo;
struct /* coclass */ Message;
enum esriTextureCompressionType;
struct __declspec(uuid("55df03ae-b4f8-4387-b8b5-6fb22b15ddac"))
/* interface */ IZipArchive;
struct __declspec(uuid("f088433d-0167-4866-a846-55cab2fb76b0"))
/* interface */ IZipArchiveEx;
struct /* coclass */ ZipArchive;
struct __declspec(uuid("fee4d81c-25d9-4389-a20c-16821ec90719"))
/* interface */ IZlibCompression;
struct __declspec(uuid("b5f3860a-fce1-4e71-8f12-bc5c6bb0f280"))
/* interface */ ITextureCompression;
struct __declspec(uuid("650fc137-7869-4414-a511-f7e176d3301e"))
/* interface */ IGlobeCompression;
struct __declspec(uuid("c24f654b-b929-443b-9fa1-a2a83bbce14b"))
/* interface */ IJobDefinition;
struct __declspec(uuid("4d919e2d-f6c1-47ba-ba1f-6f2c29a86e22"))
/* interface */ IJobResults;
struct __declspec(uuid("08125e66-7bf8-4618-87f2-77d9e364f35a"))
/* interface */ IJobMessages;
struct __declspec(uuid("4a106e7e-d1e7-420f-aecf-cbc867a7ff17"))
/* interface */ IJobInfo;
struct __declspec(uuid("72ad9072-face-4ec8-a7fd-23b41e58e2b7"))
/* interface */ IJob;
enum esriJobStatus;
struct __declspec(uuid("5c395aac-ebbc-4ffd-bb1e-c99858e168e0"))
/* interface */ IJobCatalog;
struct __declspec(uuid("e65c015e-e176-4419-96bf-4c0e45b3db7d"))
/* interface */ IJobRegistry;
struct __declspec(uuid("2c2d291a-51fd-4bfd-99a5-db889fcee9f2"))
/* interface */ IJobFilter;
struct /* coclass */ JobMessage;
struct /* coclass */ JobMessages;
struct __declspec(uuid("52b13a57-aa06-49be-a4d0-3cddac943ebe"))
/* interface */ IESRIScriptEngine;
enum scriptEngineError;
struct /* coclass */ ESRIScriptEngine;
typedef struct _WKSPoint WKSPoint;
typedef struct _WKSPointZ WKSPointZ;
typedef struct _WKSEnvelope WKSEnvelope;
typedef struct _WKSEnvelopeZ WKSEnvelopeZ;
typedef struct _esriPointAttributes esriPointAttributes;
typedef struct _esriPointAttributesEx esriPointAttributesEx;
typedef struct _esriSegmentModifier esriSegmentModifier;
typedef struct _TimeZoneTransitionTime TimeZoneTransitionTime;
typedef struct _WKSTimeDuration WKSTimeDuration;
typedef struct _WKSDateTime WKSDateTime;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IUID, __uuidof(IUID));
_COM_SMARTPTR_TYPEDEF(IClassifyGEN, __uuidof(IClassifyGEN));
_COM_SMARTPTR_TYPEDEF(IByteSwapStreamIO, __uuidof(IByteSwapStreamIO));
_COM_SMARTPTR_TYPEDEF(IProductInstalled, __uuidof(IProductInstalled));
_COM_SMARTPTR_TYPEDEF(IAoInitialize, __uuidof(IAoInitialize));
_COM_SMARTPTR_TYPEDEF(IAuthorizeLicense, __uuidof(IAuthorizeLicense));
_COM_SMARTPTR_TYPEDEF(ILicenseInfoEnum, __uuidof(ILicenseInfoEnum));
_COM_SMARTPTR_TYPEDEF(ILicenseInformation, __uuidof(ILicenseInformation));
_COM_SMARTPTR_TYPEDEF(IVariantStreamIO, __uuidof(IVariantStreamIO));
_COM_SMARTPTR_TYPEDEF(IVariantStream, __uuidof(IVariantStream));
_COM_SMARTPTR_TYPEDEF(IPersistVariant, __uuidof(IPersistVariant));
_COM_SMARTPTR_TYPEDEF(IDocumentVersionSupportGEN, __uuidof(IDocumentVersionSupportGEN));
_COM_SMARTPTR_TYPEDEF(ISet, __uuidof(ISet));
_COM_SMARTPTR_TYPEDEF(IArray, __uuidof(IArray));
_COM_SMARTPTR_TYPEDEF(IClone, __uuidof(IClone));
_COM_SMARTPTR_TYPEDEF(IPropertySupport, __uuidof(IPropertySupport));
_COM_SMARTPTR_TYPEDEF(IEnumBSTR, __uuidof(IEnumBSTR));
_COM_SMARTPTR_TYPEDEF(IEnumNamedID, __uuidof(IEnumNamedID));
_COM_SMARTPTR_TYPEDEF(IEnumVariantSimple, __uuidof(IEnumVariantSimple));
_COM_SMARTPTR_TYPEDEF(IProgressor, __uuidof(IProgressor));
_COM_SMARTPTR_TYPEDEF(IErrorCollection, __uuidof(IErrorCollection));
_COM_SMARTPTR_TYPEDEF(IStepProgressor, __uuidof(IStepProgressor));
_COM_SMARTPTR_TYPEDEF(IAnimationProgressor, __uuidof(IAnimationProgressor));
_COM_SMARTPTR_TYPEDEF(IStatusBar, __uuidof(IStatusBar));
_COM_SMARTPTR_TYPEDEF(ITrackCancel, __uuidof(ITrackCancel));
_COM_SMARTPTR_TYPEDEF(ITrackCancel2, __uuidof(ITrackCancel2));
_COM_SMARTPTR_TYPEDEF(ICheckProgressor, __uuidof(ICheckProgressor));
_COM_SMARTPTR_TYPEDEF(IFileNames, __uuidof(IFileNames));
_COM_SMARTPTR_TYPEDEF(IFileNames2, __uuidof(IFileNames2));
_COM_SMARTPTR_TYPEDEF(IComponentCategoryManager, __uuidof(IComponentCategoryManager));
_COM_SMARTPTR_TYPEDEF(IEnumUID, __uuidof(IEnumUID));
_COM_SMARTPTR_TYPEDEF(IComponentCategoryInfo, __uuidof(IComponentCategoryInfo));
_COM_SMARTPTR_TYPEDEF(ICategoryFactory, __uuidof(ICategoryFactory));
_COM_SMARTPTR_TYPEDEF(IUnitConverter, __uuidof(IUnitConverter));
_COM_SMARTPTR_TYPEDEF(IAngularConverter, __uuidof(IAngularConverter));
_COM_SMARTPTR_TYPEDEF(IAngularConverter2, __uuidof(IAngularConverter2));
_COM_SMARTPTR_TYPEDEF(INumberFormat, __uuidof(INumberFormat));
_COM_SMARTPTR_TYPEDEF(IScaleFormat, __uuidof(IScaleFormat));
_COM_SMARTPTR_TYPEDEF(IGenerateStatistics, __uuidof(IGenerateStatistics));
_COM_SMARTPTR_TYPEDEF(IStatisticsResults, __uuidof(IStatisticsResults));
_COM_SMARTPTR_TYPEDEF(IFrequencyStatistics, __uuidof(IFrequencyStatistics));
_COM_SMARTPTR_TYPEDEF(IFile, __uuidof(IFile));
_COM_SMARTPTR_TYPEDEF(IESRILicenseInfo, __uuidof(IESRILicenseInfo));
_COM_SMARTPTR_TYPEDEF(IName, __uuidof(IName));
_COM_SMARTPTR_TYPEDEF(IEnumName, __uuidof(IEnumName));
_COM_SMARTPTR_TYPEDEF(IEnumNameEdit, __uuidof(IEnumNameEdit));
_COM_SMARTPTR_TYPEDEF(INameFactory, __uuidof(INameFactory));
_COM_SMARTPTR_TYPEDEF(IParseNameString, __uuidof(IParseNameString));
_COM_SMARTPTR_TYPEDEF(IFileName, __uuidof(IFileName));
_COM_SMARTPTR_TYPEDEF(IExtension, __uuidof(IExtension));
_COM_SMARTPTR_TYPEDEF(IExtensionAccelerators, __uuidof(IExtensionAccelerators));
_COM_SMARTPTR_TYPEDEF(IExtensionConfig, __uuidof(IExtensionConfig));
_COM_SMARTPTR_TYPEDEF(IParentExtension, __uuidof(IParentExtension));
_COM_SMARTPTR_TYPEDEF(IChildExtension, __uuidof(IChildExtension));
_COM_SMARTPTR_TYPEDEF(IParentLicenseExtension, __uuidof(IParentLicenseExtension));
_COM_SMARTPTR_TYPEDEF(IAutoExtension, __uuidof(IAutoExtension));
_COM_SMARTPTR_TYPEDEF(IExtensionManager, __uuidof(IExtensionManager));
_COM_SMARTPTR_TYPEDEF(IExtensionManagerAdmin, __uuidof(IExtensionManagerAdmin));
_COM_SMARTPTR_TYPEDEF(IArray2, __uuidof(IArray2));
_COM_SMARTPTR_TYPEDEF(IPropertySet, __uuidof(IPropertySet));
_COM_SMARTPTR_TYPEDEF(IPropertySet2, __uuidof(IPropertySet2));
_COM_SMARTPTR_TYPEDEF(IMemoryBlobStreamVariant, __uuidof(IMemoryBlobStreamVariant));
_COM_SMARTPTR_TYPEDEF(ILongArray, __uuidof(ILongArray));
_COM_SMARTPTR_TYPEDEF(IDoubleArray, __uuidof(IDoubleArray));
_COM_SMARTPTR_TYPEDEF(IStringArray, __uuidof(IStringArray));
_COM_SMARTPTR_TYPEDEF(IVariantArray, __uuidof(IVariantArray));
_COM_SMARTPTR_TYPEDEF(IPropertySetArray, __uuidof(IPropertySetArray));
_COM_SMARTPTR_TYPEDEF(IObjectConstruct, __uuidof(IObjectConstruct));
_COM_SMARTPTR_TYPEDEF(IObjectValidate, __uuidof(IObjectValidate));
_COM_SMARTPTR_TYPEDEF(IObjectActivate, __uuidof(IObjectActivate));
_COM_SMARTPTR_TYPEDEF(IObjectUpdate, __uuidof(IObjectUpdate));
_COM_SMARTPTR_TYPEDEF(ILog, __uuidof(ILog));
_COM_SMARTPTR_TYPEDEF(ILog2, __uuidof(ILog2));
_COM_SMARTPTR_TYPEDEF(IJobMessage, __uuidof(IJobMessage));
_COM_SMARTPTR_TYPEDEF(IJobTracker, __uuidof(IJobTracker));
_COM_SMARTPTR_TYPEDEF(IEnvironmentManager, __uuidof(IEnvironmentManager));
_COM_SMARTPTR_TYPEDEF(IServerEnvironment, __uuidof(IServerEnvironment));
_COM_SMARTPTR_TYPEDEF(IServerUserInfo, __uuidof(IServerUserInfo));
_COM_SMARTPTR_TYPEDEF(IServerEnvironment2, __uuidof(IServerEnvironment2));
_COM_SMARTPTR_TYPEDEF(IServerEnvironment3, __uuidof(IServerEnvironment3));
_COM_SMARTPTR_TYPEDEF(ILogSupport, __uuidof(ILogSupport));
_COM_SMARTPTR_TYPEDEF(IObjectCopy, __uuidof(IObjectCopy));
_COM_SMARTPTR_TYPEDEF(IXMLPersistedObject, __uuidof(IXMLPersistedObject));
_COM_SMARTPTR_TYPEDEF(IJITExtensionManager, __uuidof(IJITExtensionManager));
_COM_SMARTPTR_TYPEDEF(ISystemBridge, __uuidof(ISystemBridge));
_COM_SMARTPTR_TYPEDEF(ITestConnection, __uuidof(ITestConnection));
_COM_SMARTPTR_TYPEDEF(IRectHolder, __uuidof(IRectHolder));
_COM_SMARTPTR_TYPEDEF(IShortcutName, __uuidof(IShortcutName));
_COM_SMARTPTR_TYPEDEF(IArcGISLocale, __uuidof(IArcGISLocale));
_COM_SMARTPTR_TYPEDEF(IInputDeviceManager, __uuidof(IInputDeviceManager));
_COM_SMARTPTR_TYPEDEF(IXMLSerializeData, __uuidof(IXMLSerializeData));
_COM_SMARTPTR_TYPEDEF(IXMLSerialize, __uuidof(IXMLSerialize));
_COM_SMARTPTR_TYPEDEF(IObjectStream, __uuidof(IObjectStream));
_COM_SMARTPTR_TYPEDEF(IDocumentVersion, __uuidof(IDocumentVersion));
_COM_SMARTPTR_TYPEDEF(IBlobStream, __uuidof(IBlobStream));
_COM_SMARTPTR_TYPEDEF(IMemoryBlobStream, __uuidof(IMemoryBlobStream));
_COM_SMARTPTR_TYPEDEF(IMemoryBlobStream2, __uuidof(IMemoryBlobStream2));
_COM_SMARTPTR_TYPEDEF(IXMLVersionSupport, __uuidof(IXMLVersionSupport));
_COM_SMARTPTR_TYPEDEF(IClassID, __uuidof(IClassID));
_COM_SMARTPTR_TYPEDEF(IClassify, __uuidof(IClassify));
_COM_SMARTPTR_TYPEDEF(IClassifyMinMax, __uuidof(IClassifyMinMax));
_COM_SMARTPTR_TYPEDEF(IClassifyMinMax2, __uuidof(IClassifyMinMax2));
_COM_SMARTPTR_TYPEDEF(IIntervalRange, __uuidof(IIntervalRange));
_COM_SMARTPTR_TYPEDEF(IIntervalRange2, __uuidof(IIntervalRange2));
_COM_SMARTPTR_TYPEDEF(IDeviationInterval, __uuidof(IDeviationInterval));
_COM_SMARTPTR_TYPEDEF(INumericFormat, __uuidof(INumericFormat));
_COM_SMARTPTR_TYPEDEF(IPercentageFormat, __uuidof(IPercentageFormat));
_COM_SMARTPTR_TYPEDEF(IFractionFormat, __uuidof(IFractionFormat));
_COM_SMARTPTR_TYPEDEF(ILatLonFormat, __uuidof(ILatLonFormat));
_COM_SMARTPTR_TYPEDEF(ILatLonFormat2, __uuidof(ILatLonFormat2));
_COM_SMARTPTR_TYPEDEF(IAngleFormat, __uuidof(IAngleFormat));
_COM_SMARTPTR_TYPEDEF(IDirectionFormat, __uuidof(IDirectionFormat));
_COM_SMARTPTR_TYPEDEF(IRateFormat, __uuidof(IRateFormat));
_COM_SMARTPTR_TYPEDEF(ICustomNumberFormat, __uuidof(ICustomNumberFormat));
_COM_SMARTPTR_TYPEDEF(IScientificNumberFormat, __uuidof(IScientificNumberFormat));
_COM_SMARTPTR_TYPEDEF(INumberFormatOperations, __uuidof(INumberFormatOperations));
_COM_SMARTPTR_TYPEDEF(IXMLTypeMapper, __uuidof(IXMLTypeMapper));
_COM_SMARTPTR_TYPEDEF(IXMLAttributes, __uuidof(IXMLAttributes));
_COM_SMARTPTR_TYPEDEF(IXMLNamespaces, __uuidof(IXMLNamespaces));
_COM_SMARTPTR_TYPEDEF(IXMLReader, __uuidof(IXMLReader));
_COM_SMARTPTR_TYPEDEF(IXMLWriter, __uuidof(IXMLWriter));
_COM_SMARTPTR_TYPEDEF(IXMLFlags, __uuidof(IXMLFlags));
_COM_SMARTPTR_TYPEDEF(IXMLSerializer, __uuidof(IXMLSerializer));
_COM_SMARTPTR_TYPEDEF(IXMLSerializerAlt, __uuidof(IXMLSerializerAlt));
_COM_SMARTPTR_TYPEDEF(IXMLObjectElement, __uuidof(IXMLObjectElement));
_COM_SMARTPTR_TYPEDEF(IXMLStream, __uuidof(IXMLStream));
_COM_SMARTPTR_TYPEDEF(IJSONWriter, __uuidof(IJSONWriter));
_COM_SMARTPTR_TYPEDEF(IExternalSerializer, __uuidof(IExternalSerializer));
_COM_SMARTPTR_TYPEDEF(IExternalDeserializer, __uuidof(IExternalDeserializer));
_COM_SMARTPTR_TYPEDEF(IJSONSerializer, __uuidof(IJSONSerializer));
_COM_SMARTPTR_TYPEDEF(IAMFWriter, __uuidof(IAMFWriter));
_COM_SMARTPTR_TYPEDEF(IAMFSerializer, __uuidof(IAMFSerializer));
_COM_SMARTPTR_TYPEDEF(IJSONReader, __uuidof(IJSONReader));
_COM_SMARTPTR_TYPEDEF(IJSONDeserializer, __uuidof(IJSONDeserializer));
_COM_SMARTPTR_TYPEDEF(IJSONWriter2, __uuidof(IJSONWriter2));
_COM_SMARTPTR_TYPEDEF(IJSONReader2, __uuidof(IJSONReader2));
_COM_SMARTPTR_TYPEDEF(ITimeZoneRule, __uuidof(ITimeZoneRule));
_COM_SMARTPTR_TYPEDEF(ITimeZoneInfo, __uuidof(ITimeZoneInfo));
_COM_SMARTPTR_TYPEDEF(ITimeDuration, __uuidof(ITimeDuration));
_COM_SMARTPTR_TYPEDEF(ILocaleInfo, __uuidof(ILocaleInfo));
_COM_SMARTPTR_TYPEDEF(ITimeOffsetOperator, __uuidof(ITimeOffsetOperator));
_COM_SMARTPTR_TYPEDEF(IRequestHandler, __uuidof(IRequestHandler));
_COM_SMARTPTR_TYPEDEF(IRequestHandler2, __uuidof(IRequestHandler2));
_COM_SMARTPTR_TYPEDEF(IWebRequestHandler, __uuidof(IWebRequestHandler));
_COM_SMARTPTR_TYPEDEF(IRESTRequestHandler, __uuidof(IRESTRequestHandler));
_COM_SMARTPTR_TYPEDEF(IProxyServerInfo, __uuidof(IProxyServerInfo));
_COM_SMARTPTR_TYPEDEF(IProxyServerInfo2, __uuidof(IProxyServerInfo2));
_COM_SMARTPTR_TYPEDEF(ISSLInfo, __uuidof(ISSLInfo));
_COM_SMARTPTR_TYPEDEF(IMessage, __uuidof(IMessage));
_COM_SMARTPTR_TYPEDEF(IZipArchive, __uuidof(IZipArchive));
_COM_SMARTPTR_TYPEDEF(IZipArchiveEx, __uuidof(IZipArchiveEx));
_COM_SMARTPTR_TYPEDEF(IZlibCompression, __uuidof(IZlibCompression));
_COM_SMARTPTR_TYPEDEF(ITextureCompression, __uuidof(ITextureCompression));
_COM_SMARTPTR_TYPEDEF(IGlobeCompression, __uuidof(IGlobeCompression));
_COM_SMARTPTR_TYPEDEF(IJobDefinition, __uuidof(IJobDefinition));
_COM_SMARTPTR_TYPEDEF(IJobResults, __uuidof(IJobResults));
_COM_SMARTPTR_TYPEDEF(IJobMessages, __uuidof(IJobMessages));
_COM_SMARTPTR_TYPEDEF(IJobInfo, __uuidof(IJobInfo));
_COM_SMARTPTR_TYPEDEF(IJob, __uuidof(IJob));
_COM_SMARTPTR_TYPEDEF(IJobRegistry, __uuidof(IJobRegistry));
_COM_SMARTPTR_TYPEDEF(IJobFilter, __uuidof(IJobFilter));
_COM_SMARTPTR_TYPEDEF(IJobCatalog, __uuidof(IJobCatalog));
_COM_SMARTPTR_TYPEDEF(IESRIScriptEngine, __uuidof(IESRIScriptEngine));
_COM_SMARTPTR_TYPEDEF(IJSONObject, __uuidof(IJSONObject));
_COM_SMARTPTR_TYPEDEF(IJSONArray, __uuidof(IJSONArray));
_COM_SMARTPTR_TYPEDEF(IRESTOperation, __uuidof(IRESTOperation));
_COM_SMARTPTR_TYPEDEF(IEnumRESTOperation, __uuidof(IEnumRESTOperation));
_COM_SMARTPTR_TYPEDEF(IRESTCallback, __uuidof(IRESTCallback));
_COM_SMARTPTR_TYPEDEF(ITimeReference, __uuidof(ITimeReference));
_COM_SMARTPTR_TYPEDEF(ITime, __uuidof(ITime));
_COM_SMARTPTR_TYPEDEF(ITime2, __uuidof(ITime2));
_COM_SMARTPTR_TYPEDEF(ITimeValue, __uuidof(ITimeValue));
_COM_SMARTPTR_TYPEDEF(ITimeExtent, __uuidof(ITimeExtent));
_COM_SMARTPTR_TYPEDEF(ITimeInstant, __uuidof(ITimeInstant));
_COM_SMARTPTR_TYPEDEF(ITimeZoneFactory, __uuidof(ITimeZoneFactory));
_COM_SMARTPTR_TYPEDEF(ITimeZoneFactory2, __uuidof(ITimeZoneFactory2));
_COM_SMARTPTR_TYPEDEF(ITimeRelationalOperator, __uuidof(ITimeRelationalOperator));
_COM_SMARTPTR_TYPEDEF(IRESTResource, __uuidof(IRESTResource));
_COM_SMARTPTR_TYPEDEF(IEnumRESTResource, __uuidof(IEnumRESTResource));
_COM_SMARTPTR_TYPEDEF(IRESTDispatcher, __uuidof(IRESTDispatcher));

//
// Type library items
//

enum __declspec(uuid("f0a4b2a6-8871-11d1-b97f-080009ee4e51"))
esriDrawOp
{
    esriDrawPolyPolyline = 0,
    esriDrawPolyPolygon = 1,
    esriDrawPolyline = 2,
    esriDrawPolygon = 3,
    esriDrawBeginPath = 4,
    esriDrawEndPath = 5,
    esriDrawArcCW = 6,
    esriDrawArcCCW = 7,
    esriDrawPolyBezier = 8,
    esriDrawRectangle = 9,
    esriDrawCircle = 10,
    esriDrawMoveTo = 11,
    esriDrawMultipoint = 12,
    esriDrawStop = 13,
    esriDrawTrapezoids = 14,
    esriDrawPolygonNoBorder = 15,
    esriDrawPolyPolygonNoBorder = 16
};

enum __declspec(uuid("667051c0-552f-4903-8d1a-9ff8af5a5460"))
esriByteSwapDataType
{
    esriBSDTchar = 0,
    esriBSDTbool = 1,
    esriBSDTunsignedint = 2,
    esriBSDTBYTE = 3,
    esriBSDTBOOLU = 4,
    esriBSDTUSHORT = 5,
    esriBSDTSHORT = 6,
    esriBSDTULONG = 7,
    esriBSDTLONG = 8,
    esriBSDTULONGLONG = 9,
    esriBSDTLONGLONG = 10,
    esriBSDTFLOAT = 11,
    esriBSDTDOUBLE = 12,
    esriBSDTGUID = 13,
    esriBSDTWCHAR = 14
};

enum __declspec(uuid("73abea55-3bc9-47d4-95c1-defa1924de26"))
esriArcGISVersion
{
    esriArcGISVersion83 = 0,
    esriArcGISVersion90 = 1,
    esriArcGISVersion92 = 2,
    esriArcGISVersion93 = 3,
    esriArcGISVersion10 = 4,
    esriArcGISVersion101 = 5,
    esriArcGISVersionCurrent = 5
};

struct __declspec(uuid("1714d59b-fb22-11d1-94a2-080009eebecb"))
IUID : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * guidAsString ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT guidAsString ) = 0;
      virtual HRESULT __stdcall Generate ( ) = 0;
      virtual HRESULT __stdcall get_SubType (
        /*[out,retval]*/ long * SubType ) = 0;
      virtual HRESULT __stdcall put_SubType (
        /*[in]*/ long SubType ) = 0;
      virtual HRESULT __stdcall Compare (
        /*[in]*/ struct IUID * otherID,
        /*[out,retval]*/ VARIANT_BOOL * bEqual ) = 0;
};

struct __declspec(uuid("cba26148-cd2c-44ac-bbf5-b228b55a198d"))
IClassifyGEN : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Classify (
        /*[in]*/ VARIANT doubleArrayValues,
        /*[in]*/ VARIANT longArrayFrequencies,
        /*[in,out]*/ long * numClasses ) = 0;
      virtual HRESULT __stdcall get_ClassBreaks (
        /*[out,retval]*/ VARIANT * doubleArrayBreaks ) = 0;
      virtual HRESULT __stdcall get_MethodName (
        /*[out,retval]*/ BSTR * txt ) = 0;
      virtual HRESULT __stdcall get_ClassID (
        /*[out,retval]*/ struct IUID * * clsid ) = 0;
};

struct __declspec(uuid("e718734d-d494-4e44-92c8-e2212b4a2f8d"))
IByteSwapStreamIO : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall putref_Stream (
        /*[in]*/ struct IStream * ppStream ) = 0;
      virtual HRESULT __stdcall get_Stream (
        /*[out,retval]*/ struct IStream * * ppStream ) = 0;
      virtual HRESULT __stdcall Read (
        /*[in]*/ enum esriByteSwapDataType dataType,
        /*[out]*/ void * pv,
        /*[in]*/ unsigned long cb,
        /*[out]*/ unsigned long * pcbRead ) = 0;
      virtual HRESULT __stdcall Write (
        /*[in]*/ enum esriByteSwapDataType dataType,
        /*[in]*/ void * pv,
        /*[in]*/ unsigned long cb,
        /*[out]*/ unsigned long * pcbWritten ) = 0;
};

enum __declspec(uuid("06870014-a87e-48f0-81e4-41eb502e7470"))
esriLicenseProductCode
{
    esriLicenseProductCodeEngine = 10,
    esriLicenseProductCodeEngineGeoDB = 20,
    esriLicenseProductCodeArcServer = 30,
    esriLicenseProductCodeBasic = 40,
    esriLicenseProductCodeStandard = 50,
    esriLicenseProductCodeAdvanced = 60
};

enum __declspec(uuid("85fd4280-5401-4984-8bf2-bb41859ca2ba"))
esriLicenseExtensionCode
{
    esriLicenseExtensionCodeArcPress = 4,
    esriLicenseExtensionCodeTIFFLZW = 5,
    esriLicenseExtensionCodeGeoStats = 6,
    esriLicenseExtensionCodeMrSID = 7,
    esriLicenseExtensionCodeNetwork = 8,
    esriLicenseExtensionCode3DAnalyst = 9,
    esriLicenseExtensionCodeSpatialAnalyst = 10,
    esriLicenseExtensionCodeStreetMap = 12,
    esriLicenseExtensionCodeCOGO = 13,
    esriLicenseExtensionCodeMLE = 14,
    esriLicenseExtensionCodePublisher = 15,
    esriLicenseExtensionCodeArcMapServer = 31,
    esriLicenseExtensionCodeTracking = 32,
    esriLicenseExtensionCodeBusinessStandard = 33,
    esriLicenseExtensionCodeArcScan = 34,
    esriLicenseExtensionCodeBusiness = 35,
    esriLicenseExtensionCodeSchematics = 36,
    esriLicenseExtensionCodeSchematicsSDK = 37,
    esriLicenseExtensionCodeVirtualEarthEng = 38,
    esriLicenseExtensionCodeVBAExtension = 39,
    esriLicenseExtensionCodeWorkflowManager = 40,
    esriLicenseExtensionCodeDesigner = 43,
    esriLicenseExtensionCodeVector = 44,
    esriLicenseExtensionCodeDataInteroperability = 45,
    esriLicenseExtensionCodeProductionMapping = 46,
    esriLicenseExtensionCodeDataReViewer = 47,
    esriLicenseExtensionCodeMPSAtlas = 48,
    esriLicenseExtensionCodeDefense = 49,
    esriLicenseExtensionCodeNautical = 50,
    esriLicenseExtensionCodeIntelAgency = 51,
    esriLicenseExtensionCodeMappingAgency = 52,
    esriLicenseExtensionCodeAeronautical = 53,
    esriLicenseExtensionCodeVirtualEarth = 54,
    esriLicenseExtensionCodeServerStandardEdition = 55,
    esriLicenseExtensionCodeServerAdvancedEdition = 56,
    esriLicenseExtensionCodeServerEnterprise = 57,
    esriLicenseExtensionCodeImageExt = 58,
    esriLicenseExtensionCodeBingMaps = 59,
    esriLicenseExtensionCodeBingMapsEng = 60,
    esriLicenseExtensionCodeDefenseUS = 61,
    esriLicenseExtensionCodeDefenseINTL = 62,
    esriLicenseExtensionCodeAGINSPIRE = 63,
    esriLicenseExtensionCodeRuntimeBasic = 64,
    esriLicenseExtensionCodeRuntimeStandard = 65,
    esriLicenseExtensionCodeRuntimeAdvanced = 66,
    esriLicenseExtensionCodeHighways = 67,
    esriLicenseExtensionCodeVideo = 68,
    esriLicenseExtensionCodeBathymetry = 69,
    esriLicenseExtensionCodeAirports = 70
};

enum __declspec(uuid("a5c6d87f-15ce-4ccf-82a1-c9ebc599e3dc"))
esriLicenseStatus
{
    esriLicenseAvailable = 10,
    esriLicenseNotLicensed = 20,
    esriLicenseUnavailable = 30,
    esriLicenseFailure = 40,
    esriLicenseAlreadyInitialized = 50,
    esriLicenseNotInitialized = 60,
    esriLicenseCheckedOut = 70,
    esriLicenseCheckedIn = 80,
    esriLicenseUntrusted = 90
};

enum __declspec(uuid("a15a388c-0841-479a-99d9-b7b8a653a9f2"))
esriProductInstalled
{
    esriProductsInstalledDesktop = 10,
    esriProductsInstalledEngineRuntime = 20,
    esriProductsInstalledReader = 30,
    esriProductsInstalledServerNET = 40,
    esriProductsInstalledServerJAVA = 50
};

enum __declspec(uuid("f0c4087a-2cd3-4eba-9e8c-cd48b85fa22a"))
esriServerMessageCodeEnum
{
    esriSystemMessageCode_Debug = 100000,
    esriSystemMessageCode_StringRequestReceived = 100001,
    esriSystemMessageCode_StringResponseSent = 100002,
    esriSystemMessageCode_BinaryRequestReceived = 100003,
    esriSystemMessageCode_BinaryResponseSent = 100004,
    esriSystemMessageCode_RequestFailed = 100005,
    esriSystemMessageCode_ErrorLoadFromString = 100006,
    esriSystemMessageCode_ErrorReadXml = 100007,
    esriSystemMessageCode_ErrorWriteXml = 100008,
    esriSystemMessageCode_ErrorSaveToString = 100009,
    esriSystemMessageCode_ErrorImportFromMem = 100010,
    esriSystemMessageCode_ErrorLoadBinaryStream = 100011,
    esriSystemMessageCode_SetResponseStreamVersion = 100012,
    esriSystemMessageCode_ErrorWriteBinaryResponse = 100013
};

enum __declspec(uuid("670b6a21-2933-4735-adfb-f52b1d36a397"))
esriSystemMessageCodeEnum
{
    esriSystemMessageCode_XMLTypeMappingFailed = 100100,
    esriSystemMessageCode_HTTPConnectionFailed = 100101,
    esriSystemMessageCode_CertFailed = 100102,
    esriSystemMessageCode_AuthFailed = 100103
};

struct __declspec(uuid("673b47dc-3cdf-4131-ba1b-5261cd171ef7"))
IProductInstalled : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall IsProductInstalled (
        /*[in]*/ enum esriProductInstalled ProductInstalled,
        /*[out,retval]*/ VARIANT_BOOL * bInstalled ) = 0;
};

struct __declspec(uuid("9ab6a638-aca8-4820-830c-463ea11c8722"))
IAoInitialize : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall IsProductCodeAvailable (
        /*[in]*/ enum esriLicenseProductCode ProductCode,
        /*[out,retval]*/ enum esriLicenseStatus * licenseStatus ) = 0;
      virtual HRESULT __stdcall IsExtensionCodeAvailable (
        /*[in]*/ enum esriLicenseProductCode ProductCode,
        /*[in]*/ enum esriLicenseExtensionCode extensionCode,
        /*[out,retval]*/ enum esriLicenseStatus * licenseStatus ) = 0;
      virtual HRESULT __stdcall Initialize (
        /*[in]*/ enum esriLicenseProductCode ProductCode,
        /*[out,retval]*/ enum esriLicenseStatus * licenseStatus ) = 0;
      virtual HRESULT __stdcall CheckOutExtension (
        /*[in]*/ enum esriLicenseExtensionCode extensionCode,
        /*[out,retval]*/ enum esriLicenseStatus * licenseStatus ) = 0;
      virtual HRESULT __stdcall CheckInExtension (
        /*[in]*/ enum esriLicenseExtensionCode extensionCode,
        /*[out,retval]*/ enum esriLicenseStatus * licenseStatus ) = 0;
      virtual HRESULT __stdcall Shutdown ( ) = 0;
      virtual HRESULT __stdcall InitializedProduct (
        /*[out,retval]*/ enum esriLicenseProductCode * ProductCode ) = 0;
      virtual HRESULT __stdcall IsExtensionCheckedOut (
        /*[in]*/ enum esriLicenseExtensionCode extensionCode,
        /*[out,retval]*/ VARIANT_BOOL * checkedOut ) = 0;
};

struct __declspec(uuid("46ebbb64-19b8-437a-8df4-4378d88f6731"))
IAuthorizeLicense : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_LastError (
        /*[out]*/ BSTR * LastError,
        /*[out,retval]*/ int * lastErrorCode ) = 0;
      virtual HRESULT __stdcall get_FeaturesAdded (
        /*[out,retval]*/ BSTR * FeaturesAdded ) = 0;
      virtual HRESULT __stdcall AuthorizeASR (
        /*[in]*/ BSTR strAsr,
        /*[in]*/ BSTR Password ) = 0;
      virtual HRESULT __stdcall AuthorizeASRFromFile (
        /*[in]*/ BSTR FileName,
        /*[in]*/ BSTR Password ) = 0;
      virtual HRESULT __stdcall DeauthorizeASR (
        /*[in]*/ BSTR strAsr,
        /*[in]*/ BSTR Password ) = 0;
      virtual HRESULT __stdcall DeauthorizeASRFromFile (
        /*[in]*/ BSTR FileName,
        /*[in]*/ BSTR Password ) = 0;
      virtual HRESULT __stdcall RepairASR (
        /*[in]*/ BSTR strAsr,
        /*[in]*/ BSTR Password ) = 0;
      virtual HRESULT __stdcall RepairASRFromFile (
        /*[in]*/ BSTR FileName,
        /*[in]*/ BSTR Password ) = 0;
      virtual HRESULT __stdcall CheckASR (
        /*[in]*/ BSTR strAsr,
        /*[in]*/ BSTR Password ) = 0;
      virtual HRESULT __stdcall CheckASRFromFile (
        /*[in]*/ BSTR FileName,
        /*[in]*/ BSTR Password ) = 0;
};

struct __declspec(uuid("a681b61d-d891-474c-9e45-9b24c6677db6"))
ILicenseInfoEnum : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Next (
        /*[out,retval]*/ enum esriLicenseExtensionCode * extensionCode ) = 0;
};

struct __declspec(uuid("ebe6bd5b-2f03-48f0-b68b-6de8c4bdef32"))
ILicenseInformation : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetLicenseProductName (
        /*[in]*/ enum esriLicenseProductCode ProductCode,
        /*[out,retval]*/ BSTR * ProductName ) = 0;
      virtual HRESULT __stdcall GetLicenseExtensionName (
        /*[in]*/ enum esriLicenseExtensionCode extensionCode,
        /*[out,retval]*/ BSTR * extensionName ) = 0;
      virtual HRESULT __stdcall GetProductExtensions (
        /*[in]*/ enum esriLicenseProductCode ProductCode,
        /*[out,retval]*/ struct ILicenseInfoEnum * * extensionName ) = 0;
};

struct __declspec(uuid("76be2722-b1f7-4fe4-b358-bfd2198cda62"))
IVariantStreamIO : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall putref_Stream (
        /*[in]*/ struct IStream * _arg1 ) = 0;
};

enum __declspec(uuid("a092ce35-83d3-11d1-b97e-080009ee4e51"))
esriDrawPhase
{
    esriDPGeography = 1,
    esriDPAnnotation = 2,
    esriDPSelection = 4
};

struct __declspec(uuid("67a4d650-69e0-11d2-8500-0000f875b9c6"))
IVariantStream : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Read (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall Write (
        /*[in]*/ VARIANT Value ) = 0;
};

struct __declspec(uuid("67a4d651-69e0-11d2-8500-0000f875b9c6"))
IPersistVariant : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ struct IUID * * objectID ) = 0;
      virtual HRESULT __stdcall Load (
        /*[in]*/ struct IVariantStream * Stream ) = 0;
      virtual HRESULT __stdcall Save (
        /*[in]*/ struct IVariantStream * Stream ) = 0;
};

struct __declspec(uuid("bb75da81-8dfe-4122-a9c2-86f07c539ad5"))
IDocumentVersionSupportGEN : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall IsSupportedAtVersion (
        /*[in]*/ enum esriArcGISVersion docVersion,
        /*[out,retval]*/ VARIANT_BOOL * supported ) = 0;
      virtual HRESULT __stdcall ConvertToSupportedObject (
        /*[in]*/ enum esriArcGISVersion docVersion,
        /*[out,retval]*/ VARIANT * convertedObject ) = 0;
};

struct __declspec(uuid("33848e02-983b-11d1-8463-0000f875b9c6"))
ISet : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Add (
        /*[in]*/ IUnknown * unk ) = 0;
      virtual HRESULT __stdcall Remove (
        /*[in]*/ IUnknown * unk ) = 0;
      virtual HRESULT __stdcall RemoveAll ( ) = 0;
      virtual HRESULT __stdcall Find (
        /*[in]*/ IUnknown * unk,
        /*[out,retval]*/ VARIANT_BOOL * found ) = 0;
      virtual HRESULT __stdcall Next (
        /*[out,retval]*/ IUnknown * * unk ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
};

struct __declspec(uuid("aafb54d9-aaf8-11d2-87f3-0000f8751720"))
IArray : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Element (
        /*[in]*/ long index,
        /*[out,retval]*/ IUnknown * * unk ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ IUnknown * unk ) = 0;
      virtual HRESULT __stdcall Insert (
        /*[in]*/ long index,
        /*[in]*/ IUnknown * unk ) = 0;
      virtual HRESULT __stdcall Remove (
        /*[in]*/ long index ) = 0;
      virtual HRESULT __stdcall RemoveAll ( ) = 0;
};

struct __declspec(uuid("9bff8aeb-e415-11d0-943c-080009eebecb"))
IClone : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Clone (
        /*[out,retval]*/ struct IClone * * Clone ) = 0;
      virtual HRESULT __stdcall Assign (
        /*[in]*/ struct IClone * src ) = 0;
      virtual HRESULT __stdcall IsEqual (
        /*[in]*/ struct IClone * other,
        /*[out,retval]*/ VARIANT_BOOL * equal ) = 0;
      virtual HRESULT __stdcall IsIdentical (
        /*[in]*/ struct IClone * other,
        /*[out,retval]*/ VARIANT_BOOL * identical ) = 0;
};

struct __declspec(uuid("8a11ad55-2f4f-11d3-9fa0-00c04f6bc6a5"))
IPropertySupport : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Applies (
        /*[in]*/ IUnknown * pUnk,
        /*[out,retval]*/ VARIANT_BOOL * Applies ) = 0;
      virtual HRESULT __stdcall CanApply (
        /*[in]*/ IUnknown * pUnk,
        /*[out,retval]*/ VARIANT_BOOL * CanApply ) = 0;
      virtual HRESULT __stdcall get_Current (
        /*[in]*/ IUnknown * pUnk,
        /*[out,retval]*/ IUnknown * * currentObject ) = 0;
      virtual HRESULT __stdcall Apply (
        /*[in]*/ IUnknown * newObject,
        /*[out,retval]*/ IUnknown * * oldObject ) = 0;
};

struct __declspec(uuid("18a45ba8-1266-11d1-86ad-0000f8751720"))
IEnumBSTR : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Next (
        /*[out,retval]*/ BSTR * pBSTR ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
};

struct __declspec(uuid("51959a4b-d4a5-11d1-8771-0000f8751720"))
IEnumNamedID : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Next (
        /*[out]*/ BSTR * nextName,
        /*[out,retval]*/ long * identifier ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
};

struct __declspec(uuid("0f0a3d86-8690-4d41-9df7-efefe99c4ec5"))
IEnumVariantSimple : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Next (
        /*[out,retval]*/ VARIANT * nextVariant ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
};

struct __declspec(uuid("3141f2f1-38e2-11d1-8809-080009ec732a"))
IProgressor : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_Message (
        /*[in]*/ BSTR Message ) = 0;
      virtual HRESULT __stdcall get_Message (
        /*[out,retval]*/ BSTR * Message ) = 0;
      virtual HRESULT __stdcall Show ( ) = 0;
      virtual HRESULT __stdcall Step ( ) = 0;
      virtual HRESULT __stdcall Hide ( ) = 0;
};

struct __declspec(uuid("66353c17-df5d-11d3-9fa0-00c04f6bdf0c"))
IErrorCollection : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ErrorCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_ErrorDescription (
        /*[in]*/ long index,
        /*[out,retval]*/ BSTR * Description ) = 0;
};

struct __declspec(uuid("ccdad2c7-8ebc-11d1-8732-0000f8751720"))
IStepProgressor : IProgressor
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_MinRange (
        /*[in]*/ long MinRange ) = 0;
      virtual HRESULT __stdcall get_MinRange (
        /*[out,retval]*/ long * MinRange ) = 0;
      virtual HRESULT __stdcall put_MaxRange (
        /*[in]*/ long MaxRange ) = 0;
      virtual HRESULT __stdcall get_MaxRange (
        /*[out,retval]*/ long * MaxRange ) = 0;
      virtual HRESULT __stdcall put_StepValue (
        /*[in]*/ long Step ) = 0;
      virtual HRESULT __stdcall get_StepValue (
        /*[out,retval]*/ long * Step ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ long Position ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ long * Position ) = 0;
      virtual HRESULT __stdcall OffsetPosition (
        /*[in]*/ long offsetValue,
        /*[out,retval]*/ long * prevPos ) = 0;
};

enum __declspec(uuid("76ab7650-913c-11d1-88e1-00805f1525f4"))
esriAnimations
{
    esriAnimationDrawing = 0,
    esriAnimationPrinting = 1,
    esriAnimationOther = 2,
    esriAnimationLast = 3
};

struct __declspec(uuid("80cb7e35-85e4-11d1-872c-0000f8751720"))
IAnimationProgressor : IProgressor
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_Animation (
        /*[in]*/ enum esriAnimations Animation ) = 0;
      virtual HRESULT __stdcall get_Animation (
        /*[out,retval]*/ enum esriAnimations * Animation ) = 0;
      virtual HRESULT __stdcall OpenPath (
        /*[in]*/ BSTR animationPath ) = 0;
      virtual HRESULT __stdcall Play (
        /*[in]*/ long frameFrom,
        /*[in]*/ long frameTo,
        /*[in]*/ long repeat ) = 0;
      virtual HRESULT __stdcall Seek (
        /*[in]*/ long frameTo ) = 0;
      virtual HRESULT __stdcall Stop ( ) = 0;
};

struct __declspec(uuid("828100c1-cc80-11d0-8380-080009b996cc"))
IStatusBar : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_Message (
        /*[in]*/ long pane,
        /*[in]*/ BSTR Message ) = 0;
      virtual HRESULT __stdcall get_Message (
        /*[in]*/ long pane,
        /*[out,retval]*/ BSTR * Message ) = 0;
      virtual HRESULT __stdcall put_Panes (
        /*[in]*/ long Panes ) = 0;
      virtual HRESULT __stdcall get_Panes (
        /*[out,retval]*/ long * Panes ) = 0;
      virtual HRESULT __stdcall get_ProgressBar (
        /*[out,retval]*/ struct IStepProgressor * * ProgressBar ) = 0;
      virtual HRESULT __stdcall get_ProgressAnimation (
        /*[out,retval]*/ struct IAnimationProgressor * * ProgressAnimation ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall ShowProgressBar (
        /*[in]*/ BSTR Message,
        /*[in]*/ long min,
        /*[in]*/ long max,
        /*[in]*/ long Step,
        /*[in]*/ VARIANT_BOOL onePanel ) = 0;
      virtual HRESULT __stdcall StepProgressBar ( ) = 0;
      virtual HRESULT __stdcall HideProgressBar ( ) = 0;
      virtual HRESULT __stdcall ShowProgressAnimation (
        /*[in]*/ BSTR Message,
        /*[in]*/ BSTR animationPath ) = 0;
      virtual HRESULT __stdcall PlayProgressAnimation (
        /*[in]*/ VARIANT_BOOL playAnim ) = 0;
      virtual HRESULT __stdcall HideProgressAnimation ( ) = 0;
};

struct __declspec(uuid("34c20005-4d3c-11d0-92d8-00805f7c28b0"))
ITrackCancel : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_CheckTime (
        /*[in]*/ long Milliseconds ) = 0;
      virtual HRESULT __stdcall get_CheckTime (
        /*[out,retval]*/ long * Milliseconds ) = 0;
      virtual HRESULT __stdcall put_Progressor (
        /*[in]*/ struct IProgressor * Progressor ) = 0;
      virtual HRESULT __stdcall get_Progressor (
        /*[out,retval]*/ struct IProgressor * * Progressor ) = 0;
      virtual HRESULT __stdcall Cancel ( ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Continue (
        /*[out,retval]*/ VARIANT_BOOL * keepGoing ) = 0;
      virtual HRESULT __stdcall put_ProcessMessages (
        /*[in]*/ VARIANT_BOOL ProcessMessages ) = 0;
      virtual HRESULT __stdcall get_ProcessMessages (
        /*[out,retval]*/ VARIANT_BOOL * ProcessMessages ) = 0;
      virtual HRESULT __stdcall StartTimer (
        /*[in]*/ long hWnd,
        /*[in]*/ long Milliseconds ) = 0;
      virtual HRESULT __stdcall get_TimerFired (
        /*[out,retval]*/ VARIANT_BOOL * TimerFired ) = 0;
      virtual HRESULT __stdcall StopTimer ( ) = 0;
      virtual HRESULT __stdcall get_CancelOnClick (
        /*[out,retval]*/ VARIANT_BOOL * pCancelOnClick ) = 0;
      virtual HRESULT __stdcall put_CancelOnClick (
        /*[in]*/ VARIANT_BOOL pCancelOnClick ) = 0;
      virtual HRESULT __stdcall get_CancelOnKeyPress (
        /*[out,retval]*/ VARIANT_BOOL * pCancelOnKeyPress ) = 0;
      virtual HRESULT __stdcall put_CancelOnKeyPress (
        /*[in]*/ VARIANT_BOOL pCancelOnKeyPress ) = 0;
};

struct __declspec(uuid("73f93cba-5d93-4d2d-b27e-30eeb4ca3b64"))
ITrackCancel2 : ITrackCancel
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_Timeout (
        /*[in]*/ long timeoutMS ) = 0;
      virtual HRESULT __stdcall get_Timeout (
        /*[out,retval]*/ long * timeoutMS ) = 0;
      virtual HRESULT __stdcall TrackMouseMove (
        /*[in]*/ VARIANT_BOOL bYesNo ) = 0;
      virtual HRESULT __stdcall TrackNavigationKeys (
        /*[in]*/ VARIANT_BOOL bYesNo ) = 0;
};

struct __declspec(uuid("bde22c32-1113-11d2-a272-080009b6f22b"))
ICheckProgressor : IStepProgressor
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AddCheck (
        /*[in]*/ long index,
        /*[in]*/ BSTR msg ) = 0;
      virtual HRESULT __stdcall ShowCheck (
        /*[in]*/ long index ) = 0;
      virtual HRESULT __stdcall HideCheck (
        /*[in]*/ long index ) = 0;
};

struct __declspec(uuid("f6ed3377-94f5-11d1-9ab0-080009ec734b"))
IFileNames : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall Remove ( ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Next (
        /*[out,retval]*/ BSTR * FileName ) = 0;
      virtual HRESULT __stdcall IsDirectory (
        /*[out,retval]*/ VARIANT_BOOL * IsDirectory ) = 0;
};

struct __declspec(uuid("1f1197e3-b3bb-4d9c-b530-923e39efce11"))
IFileNames2 : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall LoadFromPath (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall GetSubset (
        /*[in]*/ BSTR extSet,
        /*[out,retval]*/ struct IFileNames * * ppFileNames ) = 0;
      virtual HRESULT __stdcall GetContainedExtensions (
        /*[out,retval]*/ BSTR * extSet ) = 0;
      virtual HRESULT __stdcall Find (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * pFound ) = 0;
};

struct __declspec(uuid("d9b58741-322d-11d2-a29a-080009b6f22b"))
IComponentCategoryManager : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Create (
        /*[in]*/ BSTR Name,
        /*[in]*/ struct IUID * category ) = 0;
      virtual HRESULT __stdcall Setup (
        /*[in]*/ BSTR pathname,
        /*[in]*/ struct IUID * objectType,
        /*[in]*/ struct IUID * category,
        /*[in]*/ VARIANT_BOOL install ) = 0;
      virtual HRESULT __stdcall SetupObject (
        /*[in]*/ BSTR pathname,
        /*[in]*/ struct IUID * obj,
        /*[in]*/ struct IUID * category,
        /*[in]*/ VARIANT_BOOL install ) = 0;
};

struct __declspec(uuid("cd5f0f7d-38ee-4de5-8efd-41fdb542b501"))
IEnumUID : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Next (
        /*[out,retval]*/ struct IUID * * pComponentID ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
};

struct __declspec(uuid("c5185fd4-557c-4e07-9a75-abf060f2ef41"))
IComponentCategoryInfo : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetComponentsInCategory (
        /*[in]*/ struct IUID * pCategoryID,
        /*[out,retval]*/ struct IEnumUID * * ppUIDs ) = 0;
};

struct __declspec(uuid("a8253eb0-9381-11d2-8521-0000f875b9c6"))
ICategoryFactory : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_CategoryID (
        /*[in]*/ struct IUID * _arg1 ) = 0;
      virtual HRESULT __stdcall CreateNext (
        /*[out,retval]*/ IUnknown * * nextComponent ) = 0;
};

enum __declspec(uuid("76ab764f-913c-11d1-88e1-00805f1525f4"))
esriUnits
{
    esriUnknownUnits = 0,
    esriInches = 1,
    esriPoints = 2,
    esriFeet = 3,
    esriYards = 4,
    esriMiles = 5,
    esriNauticalMiles = 6,
    esriMillimeters = 7,
    esriCentimeters = 8,
    esriMeters = 9,
    esriKilometers = 10,
    esriDecimalDegrees = 11,
    esriDecimeters = 12,
    esriUnitsLast = 13
};

enum __declspec(uuid("40092eb3-f1b9-438a-894e-bdf488e8218e"))
esriAreaUnits
{
    esriUnknownAreaUnits = 0,
    esriSquareInches = 1,
    esriSquareFeet = 2,
    esriSquareYards = 3,
    esriAcres = 4,
    esriSquareMiles = 5,
    esriSquareMillimeters = 6,
    esriSquareCentimeters = 7,
    esriSquareDecimeters = 8,
    esriSquareMeters = 9,
    esriAres = 10,
    esriHectares = 11,
    esriSquareKilometers = 12,
    esriAreaUnitsLast = 13
};

enum __declspec(uuid("677638c3-24cd-4322-a0ea-33cbd62f04c6"))
esriCaseAppearance
{
    esriCaseAppearanceUnchanged = 0,
    esriCaseAppearanceUpper = 1,
    esriCaseAppearanceLower = 2
};

enum __declspec(uuid("97581537-b22b-4815-ac26-e3823575ab17"))
esriDirectionType
{
    esriDTNorthAzimuth = 1,
    esriDTSouthAzimuth = 2,
    esriDTPolar = 3,
    esriDTQuadrantBearing = 4
};

enum __declspec(uuid("3ff1c5da-bd2a-4f86-a29e-a89089a81bf1"))
esriDirectionUnits
{
    esriDURadians = 9101,
    esriDUDecimalDegrees = 2,
    esriDUDegreesMinutesSeconds = 3,
    esriDUGradians = 9105,
    esriDUGons = 9106
};

struct __declspec(uuid("1f3fbca9-6611-4567-88e4-e0fa8b6fb26d"))
IUnitConverter : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall ConvertUnits (
        /*[in]*/ double dValue,
        /*[in]*/ enum esriUnits inUnits,
        /*[in]*/ enum esriUnits outUnits,
        /*[out,retval]*/ double * outValue ) = 0;
      virtual HRESULT __stdcall EsriUnitsAsString (
        /*[in]*/ enum esriUnits units,
        /*[in]*/ enum esriCaseAppearance appearance,
        /*[in]*/ VARIANT_BOOL bPlural,
        /*[out,retval]*/ BSTR * sUnitString ) = 0;
};

struct __declspec(uuid("1b64b6b4-1434-4172-8666-bbf83e5c467b"))
IAngularConverter : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall SetAngle (
        /*[in]*/ double angle,
        /*[in]*/ enum esriDirectionType dt,
        /*[in]*/ enum esriDirectionUnits du,
        /*[out,retval]*/ VARIANT_BOOL * fail ) = 0;
      virtual HRESULT __stdcall GetAngle (
        /*[in]*/ enum esriDirectionType dt,
        /*[in]*/ enum esriDirectionUnits du,
        /*[out,retval]*/ double * angle ) = 0;
      virtual HRESULT __stdcall SetString (
        /*[in]*/ BSTR angle,
        /*[in]*/ enum esriDirectionType dt,
        /*[in]*/ enum esriDirectionUnits du,
        /*[out,retval]*/ VARIANT_BOOL * bRet ) = 0;
      virtual HRESULT __stdcall GetString (
        /*[in]*/ enum esriDirectionType dt,
        /*[in]*/ enum esriDirectionUnits du,
        /*[in]*/ long precision,
        /*[out,retval]*/ BSTR * angle ) = 0;
};

struct __declspec(uuid("95674ba9-3cd5-429d-a5ac-9d105a099cf7"))
IAngularConverter2 : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_NegativeAngles (
        /*[in]*/ VARIANT_BOOL negAngles ) = 0;
      virtual HRESULT __stdcall get_NegativeAngles (
        /*[out,retval]*/ VARIANT_BOOL * negAngles ) = 0;
};

struct __declspec(uuid("7e4f470d-8e54-11d2-aad8-000000000000"))
INumberFormat : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall ValueToString (
        /*[in]*/ double Value,
        /*[out,retval]*/ BSTR * str ) = 0;
      virtual HRESULT __stdcall StringToValue (
        /*[in]*/ BSTR str,
        /*[out,retval]*/ double * Value ) = 0;
};

enum __declspec(uuid("f5a4d1f0-87a7-47d6-b75a-b7bd15a43929"))
esriScaleFormat
{
    esriAbsoluteScale = 0,
    esriImperialScale = 1,
    esriCustomScale = 2
};

struct __declspec(uuid("ae9eda31-a9f0-4687-b3a5-8c061c92d3eb"))
IScaleFormat : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_Format (
        /*[in]*/ enum esriScaleFormat Format ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ enum esriScaleFormat * Format ) = 0;
      virtual HRESULT __stdcall put_NumberFormat (
        /*[in]*/ struct INumberFormat * Format ) = 0;
      virtual HRESULT __stdcall get_NumberFormat (
        /*[out,retval]*/ struct INumberFormat * * Format ) = 0;
      virtual HRESULT __stdcall put_Separator (
        /*[in]*/ BSTR Separator ) = 0;
      virtual HRESULT __stdcall get_Separator (
        /*[out,retval]*/ BSTR * Separator ) = 0;
      virtual HRESULT __stdcall put_PageUnitValue (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_PageUnitValue (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_PageUnits (
        /*[in]*/ enum esriUnits units ) = 0;
      virtual HRESULT __stdcall get_PageUnits (
        /*[out,retval]*/ enum esriUnits * units ) = 0;
      virtual HRESULT __stdcall put_Equals (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall get_Equals (
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall put_MapUnits (
        /*[in]*/ enum esriUnits units ) = 0;
      virtual HRESULT __stdcall get_MapUnits (
        /*[out,retval]*/ enum esriUnits * units ) = 0;
      virtual HRESULT __stdcall put_CapitolizeUnits (
        /*[in]*/ VARIANT_BOOL flag ) = 0;
      virtual HRESULT __stdcall get_CapitolizeUnits (
        /*[out,retval]*/ VARIANT_BOOL * flag ) = 0;
      virtual HRESULT __stdcall put_AbbreviateUnits (
        /*[in]*/ VARIANT_BOOL flag ) = 0;
      virtual HRESULT __stdcall get_AbbreviateUnits (
        /*[out,retval]*/ VARIANT_BOOL * flag ) = 0;
      virtual HRESULT __stdcall put_ReverseOrder (
        /*[in]*/ VARIANT_BOOL flag ) = 0;
      virtual HRESULT __stdcall get_ReverseOrder (
        /*[out,retval]*/ VARIANT_BOOL * flag ) = 0;
      virtual HRESULT __stdcall put_CustomFormat (
        /*[in]*/ BSTR Format ) = 0;
      virtual HRESULT __stdcall get_CustomFormat (
        /*[out,retval]*/ BSTR * Format ) = 0;
      virtual HRESULT __stdcall CalcMapUnitValue (
        /*[in]*/ double absoluteScale,
        /*[out,retval]*/ double * mapUnitValue ) = 0;
      virtual HRESULT __stdcall ScaleToString (
        /*[in]*/ double Scale,
        /*[out,retval]*/ BSTR * scaleStr ) = 0;
      virtual HRESULT __stdcall StringToScale (
        /*[in]*/ BSTR scaleStr,
        /*[out,retval]*/ double * Scale ) = 0;
      virtual HRESULT __stdcall SaveToRegistry ( ) = 0;
      virtual HRESULT __stdcall LoadFromRegistry ( ) = 0;
};

struct __declspec(uuid("b9c43589-78b8-11d2-ae60-080009ec732a"))
IGenerateStatistics : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_SimpleStats (
        /*[in]*/ VARIANT_BOOL _arg1 ) = 0;
      virtual HRESULT __stdcall put_Sample (
        /*[in]*/ VARIANT_BOOL _arg1 ) = 0;
      virtual HRESULT __stdcall Reset (
        /*[in]*/ VARIANT_BOOL SimpleStats ) = 0;
      virtual HRESULT __stdcall AddValue (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall FinalCompute ( ) = 0;
};

struct __declspec(uuid("b9c4358a-78b8-11d2-ae60-080009ec732a"))
IStatisticsResults : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Minimum (
        /*[out,retval]*/ double * min ) = 0;
      virtual HRESULT __stdcall get_Maximum (
        /*[out,retval]*/ double * max ) = 0;
      virtual HRESULT __stdcall get_Sum (
        /*[out,retval]*/ double * Sum ) = 0;
      virtual HRESULT __stdcall get_Mean (
        /*[out,retval]*/ double * Mean ) = 0;
      virtual HRESULT __stdcall get_StandardDeviation (
        /*[out,retval]*/ double * stdDev ) = 0;
};

struct __declspec(uuid("b9c4358b-78b8-11d2-ae60-080009ec732a"))
IFrequencyStatistics : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_FrequencyIntervalCount (
        /*[out,retval]*/ long * numIntervals ) = 0;
      virtual HRESULT __stdcall put_FrequencyIntervalCount (
        /*[in]*/ long numIntervals ) = 0;
      virtual HRESULT __stdcall ComputeAutoFrequencyIntervals ( ) = 0;
      virtual HRESULT __stdcall get_FrequencyIntervalSize (
        /*[out,retval]*/ double * intervalSize ) = 0;
      virtual HRESULT __stdcall get_FrequencyClassCount (
        /*[in]*/ long intervalIndex,
        /*[out,retval]*/ long * Count ) = 0;
};

enum __declspec(uuid("b8683586-c207-11d2-9f84-00c04f8ed211"))
esriFilePermission
{
    esriReadOnly = 1,
    esriReadWrite = 2
};

enum __declspec(uuid("583257c3-207d-11d3-b7dc-0000f878098d"))
esriLockMgrType
{
    esriLockMgrNone = 0,
    esriLockMgrRead = 1,
    esriLockMgrWrite = 2,
    esriLockMgrEdit = 3,
    esriLockMgrSchemaRead = 4,
    esriLockMgrSchemaWrite = 5
};

struct __declspec(uuid("381d1aa2-c06f-11d2-9f82-00c04f8ed211"))
IFile : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Open (
        /*[in]*/ BSTR FileName,
        /*[in]*/ enum esriFilePermission permission ) = 0;
};

enum __declspec(uuid("addb746f-bf27-44ce-85aa-775d6e1b07f0"))
esriProductCode
{
    esriProductCodeReader = 90,
    esriProductCodeReaderPro = 91,
    esriProductCodeBasic = 100,
    esriProductCodeStandard = 200,
    esriProductCodeAdvanced = 300,
    esriProductCodeArcPress = 4,
    esriProductCodeTIFFLZW = 5,
    esriProductCodeGeoStats = 6,
    esriProductCodeMrSID = 7,
    esriProductCodeNetwork = 8,
    esriProductCodeTIN = 9,
    esriProductCodeGrid = 10,
    esriProductCodeStreetMap = 12,
    esriProductCodeCOGO = 13,
    esriProductCodeMLE = 14,
    esriProductCodePublisher = 15,
    esriProductCodeAllEurope = 16,
    esriProductCodeAustria = 17,
    esriProductCodeBelgium = 18,
    esriProductCodeDenmark = 19,
    esriProductCodeFrance = 20,
    esriProductCodeGermany = 21,
    esriProductCodeItaly = 22,
    esriProductCodeLuxembourg = 23,
    esriProductCodeNetherlands = 24,
    esriProductCodePortugal = 25,
    esriProductCodeSpain = 26,
    esriProductCodeSweden = 27,
    esriProductCodeSwitzerland = 28,
    esriProductCodeUnitedKingdom = 29,
    esriProductPostCodesMajorRoads = 30,
    esriProductCodeArcMapServer = 31,
    esriProductCodeTracking = 32,
    esriProductCodeBusinessStandard = 33,
    esriProductCodeArcScan = 34,
    esriProductCodeBusiness = 35,
    esriProductCodeSchematics = 36,
    esriProductCodeSchematicsSDK = 37,
    esriProductCodeVirtualEarthEng = 38,
    esriProductCodeVBAExtension = 39,
    esriProductCodeWorkflowManager = 40,
    esriProductCodeDesigner = 43,
    esriProductCodeVector = 44,
    esriProductCodeDataInteroperability = 45,
    esriProductCodeProductionMapping = 46,
    esriProductCodeDataReViewer = 47,
    esriProductCodeMPSAtlas = 48,
    esriProductCodeDefense = 49,
    esriProductCodeNautical = 50,
    esriProductCodeIntelAgency = 51,
    esriProductCodeMappingAgency = 52,
    esriProductCodeAeronautical = 53,
    esriProductCodeVirtualEarth = 54,
    esriProductCodeServerStandardEdition = 55,
    esriProductCodeServerAdvancedEdition = 56,
    esriProductCodeServerEnterprise = 57,
    esriProductCodeImageExt = 58,
    esriProductCodeBingMaps = 59,
    esriProductCodeBingMapsEng = 60,
    esriProductCodeDefenseUS = 61,
    esriProductCodeDefenseINTL = 62,
    esriProductCodeAGINSPIRE = 63,
    esriProductCodeRuntimeBasic = 64,
    esriProductCodeRuntimeStandard = 65,
    esriProductCodeRuntimeAdvanced = 66,
    esriProductCodeHighways = 67,
    esriProductCodeVideo = 68,
    esriProductCodeBathymetry = 69,
    esriProductCodeAirports = 70
};

struct __declspec(uuid("fcf1e388-5c7e-4bf3-af4b-155d93f8297f"))
IESRILicenseInfo : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DefaultProduct (
        /*[out,retval]*/ enum esriProductCode * ProductCode ) = 0;
      virtual HRESULT __stdcall IsLicensed (
        /*[in]*/ enum esriProductCode ProductCode,
        /*[out,retval]*/ VARIANT_BOOL * licensed ) = 0;
};

struct __declspec(uuid("4ba33331-d55f-11d1-8882-0000f877762d"))
IName : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_NameString (
        /*[in]*/ BSTR NameString ) = 0;
      virtual HRESULT __stdcall get_NameString (
        /*[out,retval]*/ BSTR * NameString ) = 0;
      virtual HRESULT __stdcall Open (
        /*[out,retval]*/ IUnknown * * unknown ) = 0;
};

struct __declspec(uuid("ef237a51-cb69-11d2-9f26-00c04f6bc69e"))
IEnumName : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Next (
        /*[out,retval]*/ struct IName * * Name ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
};

struct __declspec(uuid("fdafad91-67fe-11d4-8155-00c04f686238"))
IEnumNameEdit : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Add (
        /*[in]*/ struct IName * Name ) = 0;
      virtual HRESULT __stdcall Remove (
        /*[in]*/ struct IName * Name ) = 0;
      virtual HRESULT __stdcall RemoveCurrent ( ) = 0;
};

struct __declspec(uuid("51ad0a33-c607-11d2-9f23-00c04f6bc69e"))
INameFactory : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Create (
        /*[in]*/ BSTR NameString,
        /*[out,retval]*/ struct IName * * Name ) = 0;
      virtual HRESULT __stdcall PackageNames (
        /*[in]*/ struct IEnumName * names,
        /*[out,retval]*/ VARIANT * bytesArray ) = 0;
      virtual HRESULT __stdcall UnpackageNames (
        /*[in]*/ VARIANT * bytesArray,
        /*[out,retval]*/ struct IEnumName * * names ) = 0;
};

struct __declspec(uuid("db1eccbf-c6c6-11d2-9f24-00c04f6bc69e"))
IParseNameString : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall CanParse (
        /*[in]*/ BSTR NameString,
        /*[out,retval]*/ VARIANT_BOOL * CanParse ) = 0;
      virtual HRESULT __stdcall Parse (
        /*[in]*/ BSTR NameString,
        /*[out,retval]*/ struct IName * * Name ) = 0;
};

struct __declspec(uuid("53da75e0-d01a-11d2-9f27-00c04f6bc69e"))
IFileName : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_Path (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * Path ) = 0;
};

struct __declspec(uuid("7f657ec9-dbf1-11d2-9f2f-00c04f6bc69e"))
IExtension : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * extensionName ) = 0;
      virtual HRESULT __stdcall Startup (
        /*[in]*/ VARIANT * initializationData ) = 0;
      virtual HRESULT __stdcall Shutdown ( ) = 0;
};

struct __declspec(uuid("35d9879a-db68-4a2f-87cc-7206f0060b71"))
IExtensionAccelerators : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall CreateAccelerators ( ) = 0;
};

enum __declspec(uuid("fd7d951c-31cd-4e01-b84c-9be82e39043c"))
esriExtensionState
{
    esriESEnabled = 1,
    esriESDisabled = 2,
    esriESUnavailable = 4
};

struct __declspec(uuid("12a4c258-cc9d-4ca7-9f29-79ded88dd45f"))
IExtensionConfig : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ProductName (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * Description ) = 0;
      virtual HRESULT __stdcall get_State (
        /*[out,retval]*/ enum esriExtensionState * State ) = 0;
      virtual HRESULT __stdcall put_State (
        /*[in]*/ enum esriExtensionState State ) = 0;
};

struct __declspec(uuid("d3ae4638-5c68-4f1b-aadf-8bec8deb4f8b"))
IParentExtension : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ChildCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Child (
        /*[in]*/ long index,
        /*[out,retval]*/ struct IExtension * * Child ) = 0;
};

struct __declspec(uuid("1d45017c-2a13-4cdf-afc7-59f9d0c17c71"))
IChildExtension : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IExtension * * Parent ) = 0;
};

struct __declspec(uuid("8a1a05f8-1521-435c-9b0e-1f2b148e0ae4"))
IParentLicenseExtension : IUnknown
{};

struct __declspec(uuid("a5009874-e58f-42df-be62-873a7661ecdf"))
IAutoExtension : IUnknown
{};

enum __declspec(uuid("50c31ac7-ef38-4fd4-aca6-6db36ec1b9bb"))
esriCoreErrorReturnCodes
{
    E_NOTLICENSED = -2147221247,
    E_NO_PRODUCT_LICENSE = -2147221246,
    E_NO_EXTENSION_LICENSE = -2147221245,
    E_REQUIRES_SERVER_STANDARD_EDITION = -2147221244,
    E_REQUIRES_SERVER_ADVANCED_EDITION = -2147221243
};

struct __declspec(uuid("05c71634-d9d5-4d6f-b68e-d7661142fa06"))
IExtensionManager : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ExtensionCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Extension (
        /*[in]*/ long index,
        /*[out,retval]*/ struct IExtension * * Extension ) = 0;
      virtual HRESULT __stdcall get_ExtensionCLSID (
        /*[in]*/ long index,
        /*[out,retval]*/ struct IUID * * ClassID ) = 0;
      virtual HRESULT __stdcall FindExtension (
        /*[in]*/ VARIANT nameOrID,
        /*[out,retval]*/ struct IExtension * * Extension ) = 0;
};

struct __declspec(uuid("262c00f9-114d-45f8-bc9d-a0dd208dc9e1"))
IExtensionManagerAdmin : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall StartupExtensions (
        /*[in]*/ struct IUID * componentCategory,
        /*[in]*/ struct IUID * jitCategory,
        /*[in]*/ VARIANT * initializationData ) = 0;
      virtual HRESULT __stdcall ShutdownExtensions ( ) = 0;
      virtual HRESULT __stdcall AddExtension (
        /*[in]*/ struct IUID * ExtensionCLSID,
        /*[in]*/ VARIANT * initializationData ) = 0;
};

struct __declspec(uuid("c4b2bfc5-eb46-4909-801c-c32a6ede120d"))
IArray2 : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Replace (
        /*[in]*/ long index,
        /*[in]*/ IUnknown * unk ) = 0;
};

struct __declspec(uuid("f0ba6abc-8e9f-11d0-b4ab-0000f8037368"))
IPropertySet : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetProperty (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall GetProperties (
        /*[in]*/ VARIANT names,
        /*[out]*/ VARIANT * values ) = 0;
      virtual HRESULT __stdcall GetAllProperties (
        /*[out]*/ VARIANT * names,
        /*[out]*/ VARIANT * values ) = 0;
      virtual HRESULT __stdcall SetProperty (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall SetProperties (
        /*[in]*/ VARIANT names,
        /*[in]*/ VARIANT values ) = 0;
      virtual HRESULT __stdcall IsEqual (
        /*[in]*/ struct IPropertySet * PropertySet,
        /*[out,retval]*/ VARIANT_BOOL * IsEqual ) = 0;
      virtual HRESULT __stdcall RemoveProperty (
        /*[in]*/ BSTR Name ) = 0;
};

struct __declspec(uuid("613c41d5-3325-11d4-8141-00c04f686238"))
IPropertySet2 : IPropertySet
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall IsEqualNoCase (
        /*[in]*/ struct IPropertySet * PropertySet,
        /*[out,retval]*/ VARIANT_BOOL * IsEqual ) = 0;
};

struct __declspec(uuid("68f0ab65-e2b7-40d8-aa3b-3b7764607dd3"))
IMemoryBlobStreamVariant : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall ExportToVariant (
        /*[out]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall ImportFromVariant (
        /*[in]*/ VARIANT Value ) = 0;
};

struct __declspec(uuid("54f9ffb6-e91f-11d2-9f81-00c04f8ece27"))
ILongArray : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pCount ) = 0;
      virtual HRESULT __stdcall Remove (
        /*[in]*/ long index ) = 0;
      virtual HRESULT __stdcall RemoveAll ( ) = 0;
      virtual HRESULT __stdcall get_Element (
        /*[in]*/ long index,
        /*[out,retval]*/ long * pElement ) = 0;
      virtual HRESULT __stdcall put_Element (
        /*[in]*/ long index,
        /*[in]*/ long pElement ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ long Element ) = 0;
      virtual HRESULT __stdcall Insert (
        /*[in]*/ long index,
        /*[in]*/ long Element ) = 0;
};

struct __declspec(uuid("60c06ca6-e09e-11d2-9f7b-00c04f8ece27"))
IDoubleArray : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pCount ) = 0;
      virtual HRESULT __stdcall Remove (
        /*[in]*/ long index ) = 0;
      virtual HRESULT __stdcall RemoveAll ( ) = 0;
      virtual HRESULT __stdcall get_Element (
        /*[in]*/ long index,
        /*[out,retval]*/ double * pElement ) = 0;
      virtual HRESULT __stdcall put_Element (
        /*[in]*/ long index,
        /*[in]*/ double pElement ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ double Element ) = 0;
      virtual HRESULT __stdcall Insert (
        /*[in]*/ long index,
        /*[in]*/ double Element ) = 0;
};

struct __declspec(uuid("206216c9-7253-4a4d-92dd-60329fd9d792"))
IStringArray : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Element (
        /*[in]*/ long index,
        /*[out,retval]*/ BSTR * Element ) = 0;
      virtual HRESULT __stdcall put_Element (
        /*[in]*/ long index,
        /*[in]*/ BSTR Element ) = 0;
      virtual HRESULT __stdcall Remove (
        /*[in]*/ long index ) = 0;
      virtual HRESULT __stdcall RemoveAll ( ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Element ) = 0;
      virtual HRESULT __stdcall Insert (
        /*[in]*/ long index,
        /*[in]*/ BSTR Element ) = 0;
};

struct __declspec(uuid("3a10189d-0377-4ddf-8c05-a2672af6a403"))
IVariantArray : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Element (
        /*[in]*/ long index,
        /*[out,retval]*/ VARIANT * Element ) = 0;
      virtual HRESULT __stdcall put_Element (
        /*[in]*/ long index,
        /*[in]*/ VARIANT Element ) = 0;
      virtual HRESULT __stdcall Remove (
        /*[in]*/ long index ) = 0;
      virtual HRESULT __stdcall RemoveAll ( ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT Element ) = 0;
      virtual HRESULT __stdcall Insert (
        /*[in]*/ long index,
        /*[in]*/ VARIANT Element ) = 0;
};

struct __declspec(uuid("93fc737f-8c92-4c92-b0d7-75e71fd753c9"))
IPropertySetArray : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Element (
        /*[in]*/ long index,
        /*[out,retval]*/ struct IPropertySet * * ppPropertySet ) = 0;
      virtual HRESULT __stdcall Remove (
        /*[in]*/ long index ) = 0;
      virtual HRESULT __stdcall RemoveAll ( ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ struct IPropertySet * pPropertySet ) = 0;
      virtual HRESULT __stdcall Insert (
        /*[in]*/ long index,
        /*[in]*/ struct IPropertySet * pPropertySet ) = 0;
};

struct __declspec(uuid("30fa4757-a2f3-4d11-b944-059aad5c3991"))
IObjectConstruct : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Construct (
        /*[in]*/ struct IPropertySet * props ) = 0;
};

struct __declspec(uuid("55446beb-10ca-40a4-9f40-261ca4a7f35a"))
IObjectValidate : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Validate (
        /*[in]*/ struct IPropertySet * props ) = 0;
};

struct __declspec(uuid("e3b78022-143e-4e61-9099-ed319ec061e7"))
IObjectActivate : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Activate ( ) = 0;
      virtual HRESULT __stdcall Deactivate ( ) = 0;
};

struct __declspec(uuid("d641f414-1004-4e73-9386-f6ea543e2d95"))
IObjectUpdate : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Update (
        /*[in]*/ struct IPropertySet * props ) = 0;
};

struct __declspec(uuid("6f39c621-470b-4e6d-9033-a8598e286cab"))
ILog : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AddMessage (
        /*[in]*/ long msgType,
        /*[in]*/ long msgCode,
        /*[in]*/ BSTR msg ) = 0;
};

struct __declspec(uuid("44f1fe1d-ccc4-4a5f-977a-233c25a45625"))
ILog2 : ILog
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall WillLog (
        /*[in]*/ long msgType,
        /*[out,retval]*/ VARIANT_BOOL * WillLog ) = 0;
      virtual HRESULT __stdcall AddMessageEx (
        /*[in]*/ long msgType,
        /*[in]*/ BSTR MethodName,
        /*[in]*/ long msgCode,
        /*[in]*/ double elapsed,
        /*[in]*/ BSTR msg ) = 0;
};

enum __declspec(uuid("a4eb5fcd-ab08-49a4-b204-83fdf13d23c0"))
esriJobMessageType
{
    esriJobMessageTypeInformative = 0,
    esriJobMessageTypeWarning = 1,
    esriJobMessageTypeError = 2,
    esriJobMessageTypeEmpty = 3,
    esriJobMessageTypeAbort = 4,
    esriJobMessageTypeProcessStart = 5,
    esriJobMessageTypeProcessStop = 6,
    esriJobMessageTypeProcessDefinition = 7
};

struct __declspec(uuid("b611d33a-01a3-47e3-ae7d-44076c727abc"))
IJobMessage : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_MessageType (
        /*[out,retval]*/ enum esriJobMessageType * pVal ) = 0;
      virtual HRESULT __stdcall put_MessageType (
        /*[in]*/ enum esriJobMessageType pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("e95e6c90-0029-47e6-b0ea-5c6aa6642968"))
IJobTracker : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CanContinue (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_IsStopped (
        /*[in]*/ VARIANT_BOOL _arg1 ) = 0;
      virtual HRESULT __stdcall put_Message (
        /*[in]*/ enum esriJobMessageType type,
        /*[in]*/ BSTR _arg2 ) = 0;
};

struct __declspec(uuid("3551eb0b-ae83-40a3-a048-02ab9ffbee0d"))
IEnvironmentManager : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetEnvironment (
        /*[in]*/ struct IUID * pGuid,
        /*[out,retval]*/ IUnknown * * ppUnk ) = 0;
      virtual HRESULT __stdcall AddEnvironment (
        /*[in]*/ struct IUID * pGuid,
        /*[in]*/ IUnknown * pUnk ) = 0;
};

struct __declspec(uuid("32d4c328-e473-4615-922c-63c108f55e60"))
IServerEnvironment : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Log (
        /*[out,retval]*/ struct ILog * * ppLog ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ struct IPropertySet * * ppProps ) = 0;
      virtual HRESULT __stdcall get_JobTracker (
        /*[out,retval]*/ struct IJobTracker * * ppJT ) = 0;
      virtual HRESULT __stdcall get_JobDirectory (
        /*[in]*/ BSTR JobID,
        /*[out,retval]*/ BSTR * pDirPath ) = 0;
      virtual HRESULT __stdcall get_CurrentJobID (
        /*[out,retval]*/ BSTR * pJobID ) = 0;
};

struct __declspec(uuid("dcee6bd6-395a-49ab-ae32-0559125c1daf"))
IServerUserInfo : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Roles (
        /*[out,retval]*/ struct IEnumBSTR * * ppEnum ) = 0;
};

struct __declspec(uuid("8037ee78-6197-4b8e-8f8b-52c744e42a31"))
IServerEnvironment2 : IServerEnvironment
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UserInfo (
        /*[out,retval]*/ struct IServerUserInfo * * ppInfo ) = 0;
};

struct __declspec(uuid("9940e0cd-d279-468a-b0ea-c546da5c3d0c"))
IServerEnvironment3 : IServerEnvironment2
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_IsRunningAsEngine (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("4f6ee3e2-25d7-4957-b008-3a5e9ce28180"))
ILogSupport : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall InitLogging (
        /*[in]*/ struct ILog * Log ) = 0;
};

struct __declspec(uuid("9c3673ea-bc0a-11d5-a9df-00104bb6fc1c"))
IObjectCopy : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Copy (
        /*[in]*/ IUnknown * pInObject,
        /*[out,retval]*/ IUnknown * * pResult ) = 0;
      virtual HRESULT __stdcall Overwrite (
        /*[in]*/ IUnknown * pInObject,
        /*[in,out]*/ IUnknown * * pOverwriteObject ) = 0;
};

struct __declspec(uuid("e2015546-27b9-4ac4-bb8b-64b429513d44"))
IXMLPersistedObject : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Object (
        /*[out,retval]*/ IUnknown * * ppObject ) = 0;
      virtual HRESULT __stdcall putref_Object (
        /*[in]*/ IUnknown * ppObject ) = 0;
};

struct __declspec(uuid("0e3b4663-4ca5-4638-aa4a-7d89878209e5"))
IJITExtensionManager : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_JITExtensionCount (
        /*[out,retval]*/ long * pCount ) = 0;
      virtual HRESULT __stdcall get_JITExtensionCLSID (
        /*[in]*/ long index,
        /*[out,retval]*/ struct IUID * * ppID ) = 0;
      virtual HRESULT __stdcall IsLoaded (
        /*[in]*/ struct IUID * pID,
        /*[out,retval]*/ VARIANT_BOOL * bLoaded ) = 0;
      virtual HRESULT __stdcall RemoveExtension (
        /*[in]*/ struct IExtension * pExtension ) = 0;
      virtual HRESULT __stdcall InsertExtension (
        /*[in]*/ struct IUID * pExtCLSID,
        /*[in]*/ struct IExtension * pExtension ) = 0;
      virtual HRESULT __stdcall IsExtensionEnabled (
        /*[in]*/ struct IUID * pExtCLSID,
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
};

struct __declspec(uuid("848e0e84-e280-4883-ba8c-320864c3d42e"))
ISystemBridge : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Classify (
        struct IClassifyGEN * pClassify,
        /*[in]*/ SAFEARRAY * * doubleArrayValues,
        /*[in]*/ SAFEARRAY * * longArrayFrequencies,
        /*[in,out]*/ long * numClasses ) = 0;
};

struct __declspec(uuid("6b61d022-cae6-41a9-bd13-6dac82cffefd"))
ITestConnection : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall TestConnection (
        /*[out,retval]*/ VARIANT_BOOL * successful ) = 0;
};

struct __declspec(uuid("1074568c-cc5f-48b4-9316-015cad473359"))
IRectHolder : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Rect (
        /*[in]*/ struct tagRECT * pRect ) = 0;
};

struct __declspec(uuid("e29b3c76-e7b2-458e-8732-e929391da234"))
IShortcutName : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TargetName (
        /*[out,retval]*/ struct IName * * ppTargetName ) = 0;
      virtual HRESULT __stdcall putref_TargetName (
        /*[in]*/ struct IName * ppTargetName ) = 0;
};

struct __declspec(uuid("69467533-f25b-4ef3-b680-229b4dc6087b"))
IArcGISLocale : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_LangID (
        /*[out,retval]*/ long * LangID ) = 0;
      virtual HRESULT __stdcall get_CountryID (
        /*[out,retval]*/ long * CountryID ) = 0;
      virtual HRESULT __stdcall get_Locale (
        /*[out,retval]*/ long * Locale ) = 0;
      virtual HRESULT __stdcall get_UILangID (
        /*[out,retval]*/ long * LangID ) = 0;
      virtual HRESULT __stdcall get_UICountryID (
        /*[out,retval]*/ long * CountryID ) = 0;
      virtual HRESULT __stdcall get_UILocale (
        /*[out,retval]*/ long * Locale ) = 0;
      virtual HRESULT __stdcall get_RightToLeft (
        /*[out,retval]*/ VARIANT_BOOL * IsRightToLeft ) = 0;
      virtual HRESULT __stdcall get_RightToLeftUI (
        /*[out,retval]*/ VARIANT_BOOL * IsRightToLeftUI ) = 0;
      virtual HRESULT __stdcall get_RightToLeftTable (
        /*[out,retval]*/ VARIANT_BOOL * IsRightToLeftTable ) = 0;
      virtual HRESULT __stdcall SetLocale ( ) = 0;
      virtual HRESULT __stdcall SetThreadLocale ( ) = 0;
      virtual HRESULT __stdcall SetThreadUILocale ( ) = 0;
};

struct __declspec(uuid("52620d38-e275-4725-a976-65bcdd2c93fd"))
IInputDeviceManager : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall StartupDevices (
        /*[in]*/ VARIANT * initializationData ) = 0;
      virtual HRESULT __stdcall ShutdownDevices ( ) = 0;
      virtual HRESULT __stdcall AddDevice (
        /*[in]*/ struct IUID * pDeviceCLSID,
        /*[in]*/ VARIANT * initializationData ) = 0;
      virtual HRESULT __stdcall get_DeviceCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Device (
        /*[in]*/ long index,
        /*[out,retval]*/ struct IExtension * * Extension ) = 0;
      virtual HRESULT __stdcall get_DeviceCLSID (
        /*[in]*/ long index,
        /*[out,retval]*/ struct IUID * * ClassID ) = 0;
      virtual HRESULT __stdcall FindDevice (
        /*[in]*/ VARIANT nameOrID,
        /*[out,retval]*/ struct IExtension * * Extension ) = 0;
};

struct __declspec(uuid("71d66954-d2bf-4fdd-86c6-68b062402780"))
InputDeviceManager;
    // [ default ] interface IUnknown
    // interface IInputDeviceManager

struct __declspec(uuid("33848e03-983b-11d1-8463-0000f875b9c6"))
Set;
    // [ default ] interface IUnknown
    // interface ISet

struct __declspec(uuid("8f2b6061-ab00-11d2-87f4-0000f8751720"))
Array;
    // [ default ] interface IUnknown
    // interface IArray
    // interface IArray2
    // interface IXMLSerialize

struct __declspec(uuid("5bb4a18d-43bc-41c5-987a-2206fd15488f"))
IXMLSerializeData : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TypeName (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_TypeNamespaceURI (
        /*[out,retval]*/ BSTR * ns ) = 0;
      virtual HRESULT __stdcall put_TypeName (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall put_TypeNamespaceURI (
        /*[in]*/ BSTR ns ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ struct IPropertySet * * props ) = 0;
      virtual HRESULT __stdcall putref_Properties (
        /*[in]*/ struct IPropertySet * props ) = 0;
      virtual HRESULT __stdcall Find (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ long * index ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetString (
        /*[in]*/ long index,
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall GetBoolean (
        /*[in]*/ long index,
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall GetByte (
        /*[in]*/ long index,
        /*[out,retval]*/ unsigned char * Value ) = 0;
      virtual HRESULT __stdcall GetShort (
        /*[in]*/ long index,
        /*[out,retval]*/ short * Value ) = 0;
      virtual HRESULT __stdcall GetInteger (
        /*[in]*/ long index,
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall GetFloat (
        /*[in]*/ long index,
        /*[out,retval]*/ float * Value ) = 0;
      virtual HRESULT __stdcall GetDouble (
        /*[in]*/ long index,
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall GetDate (
        /*[in]*/ long index,
        /*[out,retval]*/ DATE * Value ) = 0;
      virtual HRESULT __stdcall GetObject (
        /*[in]*/ long index,
        /*[in]*/ BSTR typeNamespace,
        /*[in]*/ BSTR TypeName,
        /*[out,retval]*/ IUnknown * * Value ) = 0;
      virtual HRESULT __stdcall GetBinary (
        /*[in]*/ long index,
        /*[out,retval]*/ SAFEARRAY * * Value ) = 0;
      virtual HRESULT __stdcall GetVariant (
        /*[in]*/ long index,
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall AddString (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall AddBoolean (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall AddByte (
        /*[in]*/ BSTR Name,
        /*[in]*/ unsigned char Value ) = 0;
      virtual HRESULT __stdcall AddShort (
        /*[in]*/ BSTR Name,
        /*[in]*/ short Value ) = 0;
      virtual HRESULT __stdcall AddInteger (
        /*[in]*/ BSTR Name,
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall AddFloat (
        /*[in]*/ BSTR Name,
        /*[in]*/ float Value ) = 0;
      virtual HRESULT __stdcall AddDouble (
        /*[in]*/ BSTR Name,
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall AddDate (
        /*[in]*/ BSTR Name,
        /*[in]*/ DATE Value ) = 0;
      virtual HRESULT __stdcall AddObject (
        /*[in]*/ BSTR Name,
        /*[in]*/ IUnknown * Value ) = 0;
      virtual HRESULT __stdcall AddBinary (
        /*[in]*/ BSTR Name,
        /*[in]*/ SAFEARRAY * * Value ) = 0;
      virtual HRESULT __stdcall AddVariant (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall SetFlag (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT_BOOL FlagValue ) = 0;
      virtual HRESULT __stdcall GetFlag (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * FlagValue ) = 0;
};

struct __declspec(uuid("c8545045-6615-48e3-af27-52a0e5fc35e2"))
IXMLSerialize : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Serialize (
        /*[in]*/ struct IXMLSerializeData * data ) = 0;
      virtual HRESULT __stdcall Deserialize (
        /*[in]*/ struct IXMLSerializeData * data ) = 0;
};

struct __declspec(uuid("043731d0-a7cf-11d1-8bd1-080009ee4e41"))
ObjectStream;
    // [ default ] interface IUnknown
    // interface IObjectStream
    // interface IDocumentVersion

struct __declspec(uuid("18a45ba7-1266-11d1-86ad-0000f8751720"))
IObjectStream : IStream
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall putref_Stream (
        /*[in]*/ struct IStream * ppStream ) = 0;
      virtual HRESULT __stdcall get_Stream (
        /*[out,retval]*/ struct IStream * * ppStream ) = 0;
      virtual HRESULT __stdcall SaveObject (
        /*[in]*/ IUnknown * pUnk ) = 0;
      virtual HRESULT __stdcall LoadObject (
        /*[in]*/ GUID * riid,
        /*[in]*/ IUnknown * pUnkOuter,
        /*[out,retval]*/ IUnknown * * ppUnk ) = 0;
      virtual HRESULT __stdcall ReplaceObject (
        /*[in]*/ IUnknown * unknown ) = 0;
      virtual HRESULT __stdcall put_Version (
        /*[in]*/ BSTR versionSpecifier ) = 0;
      virtual HRESULT __stdcall get_Version (
        /*[out,retval]*/ BSTR * versionSpecifier ) = 0;
};

struct __declspec(uuid("ecc43c55-0148-4ec1-bf87-b9a183c5dc98"))
IDocumentVersion : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_DocumentVersion (
        /*[in]*/ enum esriArcGISVersion docVersion ) = 0;
      virtual HRESULT __stdcall get_DocumentVersion (
        /*[out,retval]*/ enum esriArcGISVersion * docVersion ) = 0;
};

struct __declspec(uuid("74d3b3a0-e54f-46d2-b9e8-4167a0b21f87"))
ByteSwapStreamIO;
    // [ default ] interface IUnknown
    // interface IByteSwapStreamIO

struct __declspec(uuid("12dadd0e-4d96-4599-b4ba-f9246a8ad312"))
VariantStreamIO;
    // [ default ] interface IUnknown
    // interface IVariantStreamIO
    // interface IVariantStream
    // interface IDocumentVersion

struct __declspec(uuid("78ff7fa1-fb2f-11d1-94a2-080009eebecb"))
UID;
    // [ default ] interface IUID
    // interface IPersist
    // interface IPersistStream
    // interface IXMLSerialize

struct __declspec(uuid("d9b58742-322d-11d2-a29a-080009b6f22b"))
ComponentCategoryManager;
    // [ default ] interface IUnknown
    // interface IComponentCategoryManager
    // interface IComponentCategoryInfo

struct __declspec(uuid("a8253eb1-9381-11d2-8521-0000f875b9c6"))
CategoryFactory;
    // [ default ] interface IUnknown
    // interface ICategoryFactory

struct __declspec(uuid("b9c4358c-78b8-11d2-ae60-080009ec732a"))
BaseStatistics;
    // [ default ] interface IUnknown
    // interface IGenerateStatistics
    // interface IStatisticsResults
    // interface IFrequencyStatistics

struct __declspec(uuid("381d1aa1-c06f-11d2-9f82-00c04f8ed211"))
FileStream;
    // [ default ] interface IUnknown
    // interface IBlobStream
    // interface IFile
    // interface IDocumentVersion

struct __declspec(uuid("bc92995e-e736-11d0-9a93-080009ec734b"))
IBlobStream : IStream
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ unsigned long * Size ) = 0;
      virtual HRESULT __stdcall put_Size (
        /*[in]*/ unsigned long Size ) = 0;
      virtual HRESULT __stdcall SaveToFile (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall LoadFromFile (
        /*[in]*/ BSTR FileName ) = 0;
};

struct __declspec(uuid("db1eccc0-c6c6-11d2-9f24-00c04f6bc69e"))
NameFactory;
    // [ default ] interface IUnknown
    // interface INameFactory

struct __declspec(uuid("53da75df-d01a-11d2-9f27-00c04f6bc69e"))
FileName;
    // [ default ] interface IUnknown
    // interface IName
    // interface IFileName
    // interface IPersistStream

struct __declspec(uuid("bc929960-e736-11d0-9a93-080009ec734b"))
MemoryBlobStream;
    // [ default ] interface IUnknown
    // interface IMemoryBlobStream
    // interface IMemoryBlobStream2
    // interface IMemoryBlobStreamVariant
    // interface IDocumentVersion
    // interface ISupportErrorInfo

struct __declspec(uuid("bc92995f-e736-11d0-9a93-080009ec734b"))
IMemoryBlobStream : IBlobStream
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AttachToMemory (
        /*[in]*/ unsigned char * blobMemory,
        unsigned long Size,
        long transferOwnership ) = 0;
      virtual HRESULT __stdcall ImportFromMemory (
        /*[in]*/ unsigned char * blobMemory,
        unsigned long Size ) = 0;
      virtual HRESULT __stdcall get_Memory (
        /*[out]*/ unsigned char * * blobMemory,
        /*[out]*/ unsigned long * Size ) = 0;
};

struct __declspec(uuid("5ce09f2c-9c93-4a3b-83ad-e12fb6a67ad4"))
IMemoryBlobStream2 : IMemoryBlobStream
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AllocSize (
        /*[out,retval]*/ unsigned long * Size ) = 0;
      virtual HRESULT __stdcall put_AllocSize (
        /*[in]*/ unsigned long Size ) = 0;
      virtual HRESULT __stdcall get_PaddingSize (
        /*[out,retval]*/ unsigned long * Size ) = 0;
      virtual HRESULT __stdcall put_PaddingSize (
        /*[in]*/ unsigned long Size ) = 0;
};

struct __declspec(uuid("2cca83e3-efe4-4cba-9852-6c0c7521ad8e"))
ESRILicenseInfo;
    // [ default ] interface IUnknown
    // interface IESRILicenseInfo

struct __declspec(uuid("6120bc0a-3d90-4274-97ca-713c41f1faff"))
ExtensionManager;
    // [ default ] interface IUnknown
    // interface IExtensionManager
    // interface IExtensionManagerAdmin
    // interface ISupportErrorInfo
    // interface IJITExtensionManager

struct __declspec(uuid("a3dcea3a-ebd5-11d4-a656-0008c711c8c1"))
FileNames;
    // [ default ] interface IUnknown
    // interface IFileNames
    // interface IFileNames2

struct __declspec(uuid("588e5a11-d09b-11d1-aa7c-00c04fa33a15"))
PropertySet;
    // [ default ] interface IUnknown
    // interface IPropertySet
    // interface IPropertySet2
    // interface IXMLSerialize
    // interface IPersist
    // interface IPersistStream
    // interface IClone

struct __declspec(uuid("8a626d49-5f5e-47d9-9463-0b802e9c4167"))
EnvironmentManager;
    // [ default ] interface IUnknown
    // interface IEnvironmentManager

struct __declspec(uuid("60c06ca7-e09e-11d2-9f7b-00c04f8ece27"))
DoubleArray;
    // [ default ] interface IUnknown
    // interface IDoubleArray
    // interface IXMLSerialize
    // interface IPersist
    // interface IPersistStream

struct __declspec(uuid("98bfb808-e91f-11d2-9f81-00c04f8ece27"))
LongArray;
    // [ default ] interface IUnknown
    // interface ILongArray
    // interface IXMLSerialize
    // interface IPersist
    // interface IPersistStream

struct __declspec(uuid("a7f92065-36ce-47b6-a463-4763da947cc2"))
StrArray;
    // [ default ] interface IUnknown
    // interface IStringArray
    // interface IXMLSerialize
    // interface IPersist
    // interface IPersistStream

struct __declspec(uuid("762f0474-eca2-475b-99f4-26678d79436e"))
VarArray;
    // [ default ] interface IUnknown
    // interface IVariantArray
    // interface IXMLSerialize
    // interface IPersist
    // interface IPersistStream

struct __declspec(uuid("c94bbd8a-ec33-4921-8ec3-6ad4b33232c3"))
PropertySetArray;
    // [ default ] interface IUnknown
    // interface IPropertySetArray
    // interface IXMLSerialize
    // interface IPersistStream
    // interface IPersist
    // interface IXMLVersionSupport

struct __declspec(uuid("72ca65b9-13de-48b7-8443-717b69b72a99"))
IXMLVersionSupport : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_MinNamespaceSupported (
        /*[out,retval]*/ BSTR * NamespaceURI ) = 0;
};

struct __declspec(uuid("2f65c2f2-701b-4e11-9157-fc4a3d0b6069"))
UnitConverter;
    // [ default ] interface IUnknown
    // interface IUnitConverter

struct __declspec(uuid("4d380153-9b16-41ac-8f9f-a23d9c2ddfe4"))
AngularConverter;
    // [ default ] interface IUnknown
    // interface IAngularConverter
    // interface IAngularConverter2

struct __declspec(uuid("7b759b6d-df88-4aed-add7-6f53105b47a4"))
ScaleFormat;
    // [ default ] interface IUnknown
    // interface IScaleFormat
    // interface IPersistStream
    // interface IPersist
    // interface IClone
    // interface IDocumentVersionSupportGEN

struct __declspec(uuid("e01be902-cc85-4b13-a828-02e789e0dda9"))
AoInitialize;
    // [ default ] interface IUnknown
    // interface IAoInitialize
    // interface ISupportErrorInfo
    // interface ILicenseInformation

struct __declspec(uuid("872135d9-837d-48d6-8d25-81e874d8ae82"))
ProductInstalled;
    // [ default ] interface IUnknown
    // interface IProductInstalled

struct __declspec(uuid("e495e958-5244-4f9b-bf02-42c276964953"))
LicenseInfoEnum;
    // [ default ] interface IUnknown
    // interface ILicenseInfoEnum

struct __declspec(uuid("6dbe8bf8-6000-4734-b1a8-c81c69651c06"))
AoAuthorizeLicense;
    // [ default ] interface IUnknown
    // interface IAuthorizeLicense

struct __declspec(uuid("9c3673eb-bc0a-11d5-a9df-00104bb6fc1c"))
ObjectCopy;
    // [ default ] interface IUnknown
    // interface IObjectCopy

struct __declspec(uuid("c0d4ad6b-adb3-4b98-8927-1f0ec039bb5e"))
XMLPersistedObject;
    // [ default ] interface IUnknown
    // interface IXMLPersistedObject
    // interface IXMLSerialize

struct __declspec(uuid("be49d696-3c46-4b81-960b-f67d1bbd238d"))
SystemHelper;
    // [ default ] interface IUnknown
    // interface ISystemBridge

struct __declspec(uuid("3beb09e4-3941-4a07-9d1a-ec2b43ba7d50"))
ShortcutName;
    // [ default ] interface IUnknown
    // interface IName
    // interface IFileName
    // interface IShortcutName
    // interface IPersistStream

struct __declspec(uuid("495ec746-46d4-4a6e-bd06-3a08c38465ca"))
ArcGISLocale;
    // [ default ] interface IUnknown
    // interface IArcGISLocale

#pragma pack(push, 8)

struct _WKSPoint
{
    double X;
    double Y;
};

#pragma pack(pop)

#pragma pack(push, 8)

struct _WKSPointZ
{
    double X;
    double Y;
    double Z;
};

#pragma pack(pop)

#pragma pack(push, 8)

struct _WKSEnvelope
{
    double XMin;
    double YMin;
    double XMax;
    double YMax;
};

#pragma pack(pop)

#pragma pack(push, 8)

struct _WKSEnvelopeZ
{
    double XMin;
    double YMin;
    double ZMin;
    double XMax;
    double YMax;
    double ZMax;
};

#pragma pack(pop)

#pragma pack(push, 8)

struct _esriPointAttributes
{
    double pointZ;
    double pointM;
    long pointID;
    char awarenessInfo;
};

#pragma pack(pop)

#pragma pack(push, 4)

struct _esriPointAttributesEx
{
    long awarenessInfo;
    long arraySize;
    unsigned char * attributeArray;
};

#pragma pack(pop)

#pragma pack(push, 4)

struct _esriSegmentModifier
{
    long FromPoint;
    long SegmentType;
    unsigned char SegmentInfo[1];
};

#pragma pack(pop)

enum __declspec(uuid("624514fe-2e84-4840-91fc-f7d28cd831e3"))
esriLicenseServerEdition
{
    esriLicenseServerEditionBasic = 100,
    esriLicenseServerEditionStandard = 200,
    esriLicenseServerEditionAdvanced = 300
};

struct __declspec(uuid("9f9650f1-5f49-4041-ba0f-d10baff1d7bc"))
IClassID : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetCLSID (
        /*[out,retval]*/ GUID * pCLSID ) = 0;
      virtual HRESULT __stdcall GetProgID (
        /*[out,retval]*/ BSTR * pProgID ) = 0;
};

struct __declspec(uuid("d5c7a525-dfb8-11d1-aaad-00c04fa334b3"))
IClassify : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall SetHistogramData (
        /*[in]*/ VARIANT doubleArrayValues,
        /*[in]*/ VARIANT longArrayFrequencies ) = 0;
      virtual HRESULT __stdcall Classify (
        /*[in,out]*/ int * numClasses ) = 0;
      virtual HRESULT __stdcall get_ClassBreaks (
        /*[out,retval]*/ VARIANT * doubleArrayBreaks ) = 0;
      virtual HRESULT __stdcall get_MethodName (
        /*[out,retval]*/ BSTR * txt ) = 0;
      virtual HRESULT __stdcall get_ClassID (
        /*[out,retval]*/ struct IUID * * clsid ) = 0;
};

struct __declspec(uuid("ac6c5899-241b-11d3-9f50-00c04f6bc709"))
IClassifyMinMax : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_Minimum (
        /*[in]*/ double _arg1 ) = 0;
      virtual HRESULT __stdcall put_Maximum (
        /*[in]*/ double _arg1 ) = 0;
};

struct __declspec(uuid("b42e7156-f8a5-415b-abb4-230ca421f4b2"))
IClassifyMinMax2 : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall ClassifyMinMax (
        /*[in]*/ double min,
        /*[in]*/ double max,
        /*[in,out]*/ long * numClasses ) = 0;
};

struct __declspec(uuid("62144be6-e05e-11d1-aaae-00c04fa334b3"))
IIntervalRange : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_IntervalRange (
        /*[in]*/ double _arg1 ) = 0;
      virtual HRESULT __stdcall get_Default (
        /*[out,retval]*/ double * range ) = 0;
};

struct __declspec(uuid("29697055-d00b-45ab-91bf-1543d4438086"))
IIntervalRange2 : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_IntervalRange (
        /*[in]*/ double _arg1 ) = 0;
      virtual HRESULT __stdcall get_Default (
        VARIANT values,
        VARIANT frequencies,
        /*[out,retval]*/ double * range ) = 0;
};

struct __declspec(uuid("62144be7-e05e-11d1-aaae-00c04fa334b3"))
IDeviationInterval : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_DeviationInterval (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_DeviationInterval (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_Mean (
        /*[in]*/ double _arg1 ) = 0;
      virtual HRESULT __stdcall put_StandardDev (
        /*[in]*/ double _arg1 ) = 0;
};

struct __declspec(uuid("62144be1-e05e-11d1-aaae-00c04fa334b3"))
EqualInterval;
    // [ default ] interface IUnknown
    // interface IClassifyGEN
    // interface IClassify
    // interface IClassifyMinMax
    // interface IClassifyMinMax2

struct __declspec(uuid("62144be9-e05e-11d1-aaae-00c04fa334b3"))
Quantile;
    // [ default ] interface IUnknown
    // interface IClassifyGEN
    // interface IClassify

struct __declspec(uuid("62144be8-e05e-11d1-aaae-00c04fa334b3"))
DefinedInterval;
    // [ default ] interface IUnknown
    // interface IClassifyGEN
    // interface IClassify
    // interface IClassifyMinMax
    // interface IClassifyMinMax2
    // interface IIntervalRange
    // interface IIntervalRange2

struct __declspec(uuid("62144bea-e05e-11d1-aaae-00c04fa334b3"))
NaturalBreaks;
    // [ default ] interface IUnknown
    // interface IClassifyGEN
    // interface IClassify

struct __declspec(uuid("dc6d8015-49c2-11d2-aaff-00c04fa334b3"))
StandardDeviation;
    // [ default ] interface IUnknown
    // interface IClassifyGEN
    // interface IClassify
    // interface IDeviationInterval

struct __declspec(uuid("c79eb120-e98e-4af9-903d-70273e0c140e"))
GeometricalInterval;
    // [ default ] interface IUnknown
    // interface IClassifyGEN
    // interface IClassify

enum __declspec(uuid("7e4f470e-8e54-11d2-aad8-000000000000"))
esriRoundingOptionEnum
{
    esriRoundNumberOfDecimals = 0,
    esriRoundNumberOfSignificantDigits = 1
};

enum __declspec(uuid("7e4f470f-8e54-11d2-aad8-000000000000"))
esriNumericAlignmentEnum
{
    esriAlignRight = 0,
    esriAlignLeft = 1
};

enum __declspec(uuid("361541fc-cc89-43f1-ba19-f2c652b38c04"))
esriDirectionFormatEnum
{
    esriDFDegreesMinutesSeconds = 0,
    esriDFQuadrantBearing = 1
};

struct __declspec(uuid("7e4f4710-8e54-11d2-aad8-000000000000"))
INumericFormat : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_RoundingOption (
        /*[in]*/ enum esriRoundingOptionEnum pption ) = 0;
      virtual HRESULT __stdcall get_RoundingOption (
        /*[out,retval]*/ enum esriRoundingOptionEnum * pption ) = 0;
      virtual HRESULT __stdcall put_RoundingValue (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_RoundingValue (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_AlignmentOption (
        /*[in]*/ enum esriNumericAlignmentEnum option ) = 0;
      virtual HRESULT __stdcall get_AlignmentOption (
        /*[out,retval]*/ enum esriNumericAlignmentEnum * option ) = 0;
      virtual HRESULT __stdcall put_AlignmentWidth (
        /*[in]*/ long width ) = 0;
      virtual HRESULT __stdcall get_AlignmentWidth (
        /*[out,retval]*/ long * width ) = 0;
      virtual HRESULT __stdcall put_UseSeparator (
        /*[in]*/ VARIANT_BOOL sep ) = 0;
      virtual HRESULT __stdcall get_UseSeparator (
        /*[out,retval]*/ VARIANT_BOOL * sep ) = 0;
      virtual HRESULT __stdcall put_ZeroPad (
        /*[in]*/ VARIANT_BOOL pad ) = 0;
      virtual HRESULT __stdcall get_ZeroPad (
        /*[out,retval]*/ VARIANT_BOOL * pad ) = 0;
      virtual HRESULT __stdcall put_ShowPlusSign (
        /*[in]*/ VARIANT_BOOL Show ) = 0;
      virtual HRESULT __stdcall get_ShowPlusSign (
        /*[out,retval]*/ VARIANT_BOOL * Show ) = 0;
};

struct __declspec(uuid("7e4f4711-8e54-11d2-aad8-000000000000"))
IPercentageFormat : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_AdjustPercentage (
        /*[in]*/ VARIANT_BOOL adjust ) = 0;
      virtual HRESULT __stdcall get_AdjustPercentage (
        /*[out,retval]*/ VARIANT_BOOL * adjust ) = 0;
};

enum __declspec(uuid("7e4f4712-8e54-11d2-aad8-000000000000"))
esriFractionOptionEnum
{
    esriSpecifyFractionDigits = 0,
    esriSpecifyFractionDenominator = 1
};

struct __declspec(uuid("7e4f4713-8e54-11d2-aad8-000000000000"))
IFractionFormat : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_FractionOption (
        /*[in]*/ enum esriFractionOptionEnum option ) = 0;
      virtual HRESULT __stdcall get_FractionOption (
        /*[out,retval]*/ enum esriFractionOptionEnum * option ) = 0;
      virtual HRESULT __stdcall put_FractionFactor (
        /*[in]*/ long factor ) = 0;
      virtual HRESULT __stdcall get_FractionFactor (
        /*[out,retval]*/ long * factor ) = 0;
};

struct __declspec(uuid("7e4f4714-8e54-11d2-aad8-000000000000"))
ILatLonFormat : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_ShowDirections (
        /*[in]*/ VARIANT_BOOL Show ) = 0;
      virtual HRESULT __stdcall get_ShowDirections (
        /*[out,retval]*/ VARIANT_BOOL * Show ) = 0;
      virtual HRESULT __stdcall put_IsLatitude (
        /*[in]*/ VARIANT_BOOL _arg1 ) = 0;
      virtual HRESULT __stdcall GetDMS (
        /*[in]*/ double Value,
        /*[out]*/ long * degrees,
        /*[out]*/ long * Minutes,
        /*[out]*/ double * Seconds ) = 0;
      virtual HRESULT __stdcall put_ShowZeroMinutes (
        /*[in]*/ VARIANT_BOOL Show ) = 0;
      virtual HRESULT __stdcall get_ShowZeroMinutes (
        /*[out,retval]*/ VARIANT_BOOL * Show ) = 0;
      virtual HRESULT __stdcall put_ShowZeroSeconds (
        /*[in]*/ VARIANT_BOOL Show ) = 0;
      virtual HRESULT __stdcall get_ShowZeroSeconds (
        /*[out,retval]*/ VARIANT_BOOL * Show ) = 0;
};

struct __declspec(uuid("127b0952-e8b4-428c-ac39-58de4d1f17de"))
ILatLonFormat2 : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_ShowDirections (
        /*[in]*/ VARIANT_BOOL Show ) = 0;
      virtual HRESULT __stdcall get_ShowDirections (
        /*[out,retval]*/ VARIANT_BOOL * Show ) = 0;
      virtual HRESULT __stdcall put_IsLatitude (
        /*[in]*/ VARIANT_BOOL isLat ) = 0;
      virtual HRESULT __stdcall GetDMS (
        /*[in]*/ double Value,
        /*[out]*/ long * degrees,
        /*[out]*/ long * Minutes,
        /*[out]*/ double * Seconds ) = 0;
      virtual HRESULT __stdcall put_ShowZeroMinutes (
        /*[in]*/ VARIANT_BOOL Show ) = 0;
      virtual HRESULT __stdcall get_ShowZeroMinutes (
        /*[out,retval]*/ VARIANT_BOOL * Show ) = 0;
      virtual HRESULT __stdcall put_ShowZeroSeconds (
        /*[in]*/ VARIANT_BOOL Show ) = 0;
      virtual HRESULT __stdcall get_ShowZeroSeconds (
        /*[out,retval]*/ VARIANT_BOOL * Show ) = 0;
      virtual HRESULT __stdcall get_IsLatitude (
        /*[out,retval]*/ VARIANT_BOOL * isLat ) = 0;
};

struct __declspec(uuid("7e4f4716-8e54-11d2-aad8-000000000000"))
IAngleFormat : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_AngleInDegrees (
        /*[in]*/ VARIANT_BOOL deg ) = 0;
      virtual HRESULT __stdcall get_AngleInDegrees (
        /*[out,retval]*/ VARIANT_BOOL * deg ) = 0;
      virtual HRESULT __stdcall put_DisplayDegrees (
        /*[in]*/ VARIANT_BOOL deg ) = 0;
      virtual HRESULT __stdcall get_DisplayDegrees (
        /*[out,retval]*/ VARIANT_BOOL * deg ) = 0;
};

struct __declspec(uuid("11d7b4c8-dbdf-4b98-ac6d-8c419efd2c24"))
IDirectionFormat : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_DirectionUnits (
        /*[in]*/ enum esriDirectionUnits unit ) = 0;
      virtual HRESULT __stdcall get_DirectionUnits (
        /*[out,retval]*/ enum esriDirectionUnits * unit ) = 0;
      virtual HRESULT __stdcall put_DirectionType (
        /*[in]*/ enum esriDirectionType direction ) = 0;
      virtual HRESULT __stdcall get_DirectionType (
        /*[out,retval]*/ enum esriDirectionType * direction ) = 0;
      virtual HRESULT __stdcall put_DisplayFormat (
        /*[in]*/ enum esriDirectionFormatEnum DirectionFormat ) = 0;
      virtual HRESULT __stdcall get_DisplayFormat (
        /*[out,retval]*/ enum esriDirectionFormatEnum * DirectionFormat ) = 0;
      virtual HRESULT __stdcall put_DecimalPlaces (
        /*[in]*/ long num ) = 0;
      virtual HRESULT __stdcall get_DecimalPlaces (
        /*[out,retval]*/ long * num ) = 0;
};

struct __declspec(uuid("7e4f4717-8e54-11d2-aad8-000000000000"))
IRateFormat : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_RateFactor (
        /*[in]*/ double factor ) = 0;
      virtual HRESULT __stdcall get_RateFactor (
        /*[out,retval]*/ double * factor ) = 0;
      virtual HRESULT __stdcall put_RateString (
        /*[in]*/ BSTR str ) = 0;
      virtual HRESULT __stdcall get_RateString (
        /*[out,retval]*/ BSTR * str ) = 0;
};

struct __declspec(uuid("7e4f4718-8e54-11d2-aad8-000000000000"))
ICustomNumberFormat : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_FormatString (
        /*[in]*/ BSTR str ) = 0;
      virtual HRESULT __stdcall get_FormatString (
        /*[out,retval]*/ BSTR * str ) = 0;
};

struct __declspec(uuid("d4f5c355-76b8-11d3-9fc3-00c04f6bc78e"))
IScientificNumberFormat : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_DecimalPlaces (
        /*[in]*/ long num ) = 0;
      virtual HRESULT __stdcall get_DecimalPlaces (
        /*[out,retval]*/ long * num ) = 0;
};

struct __declspec(uuid("5ef43b7e-3bc1-4b25-a5c0-08218c75be06"))
INumberFormatOperations : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Increment (
        /*[in]*/ double Value,
        /*[out,retval]*/ double * Result ) = 0;
};

struct __declspec(uuid("7e4f4719-8e54-11d2-aad8-000000000000"))
NumericFormat;
    // [ default ] interface IUnknown
    // interface INumberFormat
    // interface INumericFormat
    // interface INumberFormatOperations
    // interface IClone
    // interface IPersist
    // interface IPersistStream
    // interface IXMLSerialize

struct __declspec(uuid("7e4f471a-8e54-11d2-aad8-000000000000"))
CurrencyFormat;
    // [ default ] interface IUnknown
    // interface INumberFormat
    // interface INumberFormatOperations
    // interface IClone
    // interface IPersist
    // interface IPersistStream

struct __declspec(uuid("7e4f471b-8e54-11d2-aad8-000000000000"))
PercentageFormat;
    // [ default ] interface IUnknown
    // interface INumberFormat
    // interface INumericFormat
    // interface IPercentageFormat
    // interface INumberFormatOperations
    // interface IClone
    // interface IPersist
    // interface IPersistStream

struct __declspec(uuid("7e4f471c-8e54-11d2-aad8-000000000000"))
FractionFormat;
    // [ default ] interface IUnknown
    // interface INumberFormat
    // interface INumberFormatOperations
    // interface IFractionFormat
    // interface IClone
    // interface IPersist
    // interface IPersistStream

struct __declspec(uuid("7e4f471d-8e54-11d2-aad8-000000000000"))
LatLonFormat;
    // [ default ] interface IUnknown
    // interface INumberFormat
    // interface INumericFormat
    // interface INumberFormatOperations
    // interface ILatLonFormat
    // interface ILatLonFormat2
    // interface IClone
    // interface IPersist
    // interface IPersistStream

struct __declspec(uuid("7e4f471e-8e54-11d2-aad8-000000000000"))
AngleFormat;
    // [ default ] interface IUnknown
    // interface INumberFormat
    // interface INumericFormat
    // interface INumberFormatOperations
    // interface IAngleFormat
    // interface IClone
    // interface IPersist
    // interface IPersistStream
    // interface IDocumentVersionSupportGEN

struct __declspec(uuid("36d7e361-b440-4feb-b2ac-fede1a2fd7a7"))
DirectionFormat;
    // [ default ] interface IUnknown
    // interface INumberFormat
    // interface INumberFormatOperations
    // interface IDirectionFormat
    // interface IClone
    // interface IPersist
    // interface IPersistStream

struct __declspec(uuid("7e4f471f-8e54-11d2-aad8-000000000000"))
ScientificFormat;
    // [ default ] interface IUnknown
    // interface INumberFormat
    // interface INumberFormatOperations
    // interface IScientificNumberFormat
    // interface IClone
    // interface IPersist
    // interface IPersistStream

struct __declspec(uuid("7e4f4721-8e54-11d2-aad8-000000000000"))
RateFormat;
    // [ default ] interface IUnknown
    // interface INumberFormat
    // interface INumericFormat
    // interface INumberFormatOperations
    // interface IRateFormat
    // interface IClone
    // interface IPersist
    // interface IPersistStream

struct __declspec(uuid("7e4f4722-8e54-11d2-aad8-000000000000"))
CustomNumberFormat;
    // [ default ] interface IUnknown
    // interface INumberFormat
    // interface ICustomNumberFormat
    // interface INumberFormatOperations
    // interface IClone
    // interface IPersist
    // interface IPersistStream

struct __declspec(uuid("a9a5de92-e3c9-4940-b0f4-6d93cdf2602b"))
IXMLTypeMapper : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall ToObject (
        /*[in]*/ BSTR NamespaceURI,
        /*[in]*/ BSTR TypeName,
        /*[out,retval]*/ IUnknown * * Value ) = 0;
      virtual HRESULT __stdcall ToInteger (
        /*[in]*/ BSTR Text,
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall ToBoolean (
        /*[in]*/ BSTR Text,
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall ToShort (
        /*[in]*/ BSTR Text,
        /*[out,retval]*/ short * Value ) = 0;
      virtual HRESULT __stdcall ToByte (
        /*[in]*/ BSTR Text,
        /*[out,retval]*/ unsigned char * Value ) = 0;
      virtual HRESULT __stdcall ToFloat (
        /*[in]*/ BSTR Text,
        /*[out,retval]*/ float * Value ) = 0;
      virtual HRESULT __stdcall ToDouble (
        /*[in]*/ BSTR Text,
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall ToDate (
        /*[in]*/ BSTR Text,
        /*[out,retval]*/ DATE * Value ) = 0;
      virtual HRESULT __stdcall ToBinary (
        /*[in]*/ BSTR Text,
        /*[out,retval]*/ SAFEARRAY * * Value ) = 0;
      virtual HRESULT __stdcall FromInteger (
        /*[in]*/ long Value,
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall FromBoolean (
        /*[in]*/ VARIANT_BOOL Value,
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall FromShort (
        /*[in]*/ short Value,
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall FromByte (
        /*[in]*/ unsigned char Value,
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall FromFloat (
        /*[in]*/ float Value,
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall FromDouble (
        /*[in]*/ double Value,
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall FromDate (
        /*[in]*/ DATE Value,
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall FromBinary (
        /*[in]*/ SAFEARRAY * * Value,
        /*[out,retval]*/ BSTR * Text ) = 0;
};

struct __declspec(uuid("3e23a49e-9f66-42d5-9982-5e3e5c0821e0"))
IXMLAttributes : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AddAttribute (
        /*[in]*/ BSTR LocalName,
        /*[in]*/ BSTR NamespaceURI,
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall DeleteAttribute (
        /*[in]*/ BSTR LocalName,
        /*[in]*/ BSTR NamespaceURI ) = 0;
      virtual HRESULT __stdcall FindAttribute (
        /*[in]*/ BSTR LocalName,
        /*[in]*/ BSTR NamespaceURI,
        /*[out,retval]*/ long * index ) = 0;
      virtual HRESULT __stdcall get_AttributeCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_LocalName (
        /*[in]*/ long index,
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_NamespaceURI (
        /*[in]*/ long index,
        /*[out,retval]*/ BSTR * uri ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[in]*/ long index,
        /*[out,retval]*/ BSTR * Value ) = 0;
};

struct __declspec(uuid("032b72dc-e0fb-4bb1-8626-1797e25a72a0"))
IXMLNamespaces : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AddNamespace (
        /*[in]*/ BSTR Prefix,
        /*[in]*/ BSTR uri ) = 0;
      virtual HRESULT __stdcall DeleteNamespace (
        /*[in]*/ BSTR uri ) = 0;
      virtual HRESULT __stdcall get_NamespaceCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Prefix (
        /*[in]*/ long index,
        /*[out,retval]*/ BSTR * Prefix ) = 0;
      virtual HRESULT __stdcall get_NamespaceURI (
        /*[in]*/ long index,
        /*[out,retval]*/ BSTR * uri ) = 0;
};

struct __declspec(uuid("d405f844-8057-4df4-b2da-df25dedebf4c"))
IXMLReader : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall ReadFrom (
        /*[in]*/ struct IStream * inputStream ) = 0;
      virtual HRESULT __stdcall get_LocalName (
        /*[out,retval]*/ BSTR * LocalName ) = 0;
      virtual HRESULT __stdcall get_NamespaceURI (
        /*[out,retval]*/ BSTR * uri ) = 0;
      virtual HRESULT __stdcall get_NamespacePrefix (
        /*[out,retval]*/ BSTR * Prefix ) = 0;
      virtual HRESULT __stdcall get_NamespaceDeclarations (
        /*[out,retval]*/ struct IXMLNamespaces * * namespaces ) = 0;
      virtual HRESULT __stdcall get_Attributes (
        /*[out,retval]*/ struct IXMLAttributes * * Attributes ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall get_HasElementChildren (
        /*[out,retval]*/ VARIANT_BOOL * hasChildren ) = 0;
      virtual HRESULT __stdcall get_IsLastChild (
        /*[out,retval]*/ VARIANT_BOOL * isLast ) = 0;
      virtual HRESULT __stdcall NextElement ( ) = 0;
      virtual HRESULT __stdcall OpenElement ( ) = 0;
      virtual HRESULT __stdcall CloseElement ( ) = 0;
      virtual HRESULT __stdcall LookupPrefix (
        /*[in]*/ BSTR Prefix,
        /*[out,retval]*/ BSTR * uri ) = 0;
      virtual HRESULT __stdcall ReadBoolean (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall ReadByte (
        /*[out,retval]*/ unsigned char * Value ) = 0;
      virtual HRESULT __stdcall ReadShort (
        /*[out,retval]*/ short * Value ) = 0;
      virtual HRESULT __stdcall ReadInteger (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall ReadFloat (
        /*[out,retval]*/ float * Value ) = 0;
      virtual HRESULT __stdcall ReadDouble (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall ReadDate (
        /*[out,retval]*/ DATE * Value ) = 0;
      virtual HRESULT __stdcall ReadBinary (
        /*[out,retval]*/ SAFEARRAY * * Value ) = 0;
      virtual HRESULT __stdcall ReadVariant (
        /*[out,retval]*/ VARIANT * Value ) = 0;
};

struct __declspec(uuid("5f50e520-1278-4c7a-937c-ae5874548431"))
IXMLWriter : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall WriteTo (
        /*[in]*/ struct IStream * outputStream ) = 0;
      virtual HRESULT __stdcall WriteStartTag (
        /*[in]*/ BSTR LocalName,
        /*[in]*/ BSTR uri,
        /*[in]*/ struct IXMLAttributes * Attributes,
        /*[in]*/ struct IXMLNamespaces * namespaces,
        /*[in]*/ VARIANT_BOOL isEmpty ) = 0;
      virtual HRESULT __stdcall WriteText (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall WriteCData (
        /*[in]*/ BSTR cdata ) = 0;
      virtual HRESULT __stdcall WriteEndTag ( ) = 0;
      virtual HRESULT __stdcall WriteBoolean (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall WriteByte (
        /*[in]*/ unsigned char Value ) = 0;
      virtual HRESULT __stdcall WriteShort (
        /*[in]*/ short Value ) = 0;
      virtual HRESULT __stdcall WriteInteger (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall WriteFloat (
        /*[in]*/ float Value ) = 0;
      virtual HRESULT __stdcall WriteDouble (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall WriteDate (
        /*[in]*/ DATE Value ) = 0;
      virtual HRESULT __stdcall WriteBinary (
        /*[in]*/ SAFEARRAY * * Value ) = 0;
      virtual HRESULT __stdcall WriteVariant (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall WriteXML (
        /*[in]*/ BSTR XML ) = 0;
      virtual HRESULT __stdcall WriteXMLDeclaration ( ) = 0;
      virtual HRESULT __stdcall WriteNewLine ( ) = 0;
      virtual HRESULT __stdcall WriteTab ( ) = 0;
      virtual HRESULT __stdcall LookupNamespace (
        /*[in]*/ BSTR uri,
        /*[out,retval]*/ BSTR * Prefix ) = 0;
};

struct __declspec(uuid("647f4c09-3699-4868-a74c-108122a968dc"))
IXMLFlags : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall SetFlag (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT_BOOL FlagValue ) = 0;
      virtual HRESULT __stdcall GetFlag (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * FlagValue ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_FlagName (
        /*[in]*/ long index,
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_FlagValue (
        /*[in]*/ long index,
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
};

struct __declspec(uuid("dea199d0-371c-4955-844c-b67705e1edb2"))
IXMLSerializer : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall WriteObject (
        /*[in]*/ struct IXMLWriter * pWriter,
        /*[in]*/ struct IPropertySet * environment,
        /*[in]*/ struct IXMLFlags * flags,
        /*[in]*/ BSTR elementName,
        /*[in]*/ BSTR elementNamespaceURI,
        /*[in]*/ IUnknown * obj ) = 0;
      virtual HRESULT __stdcall ReadObject (
        /*[in]*/ struct IXMLReader * pReader,
        /*[in]*/ struct IPropertySet * environment,
        /*[in]*/ struct IXMLFlags * flags,
        /*[out,retval]*/ IUnknown * * obj ) = 0;
      virtual HRESULT __stdcall LoadFromString (
        /*[in]*/ BSTR XML,
        /*[in]*/ struct IPropertySet * environment,
        /*[in]*/ struct IXMLFlags * flags,
        /*[out,retval]*/ IUnknown * * obj ) = 0;
      virtual HRESULT __stdcall SaveToString (
        /*[in]*/ IUnknown * obj,
        /*[in]*/ struct IPropertySet * environment,
        /*[in]*/ struct IXMLFlags * flags,
        /*[out,retval]*/ BSTR * XML ) = 0;
      virtual HRESULT __stdcall ReadObjectByType (
        /*[in]*/ struct IXMLReader * pReader,
        /*[in]*/ struct IPropertySet * environment,
        /*[in]*/ struct IXMLFlags * flags,
        /*[in]*/ BSTR typeNamespace,
        /*[in]*/ BSTR TypeName,
        /*[out,retval]*/ IUnknown * * obj ) = 0;
};

struct __declspec(uuid("4deb2c9d-2162-4443-908e-25b6cb7fb6df"))
IXMLSerializerAlt : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall LoadFromString (
        /*[in]*/ BSTR XML,
        /*[in]*/ BSTR TypeName,
        /*[in]*/ BSTR TypeNamespaceURI,
        /*[out,retval]*/ IUnknown * * obj ) = 0;
};

struct __declspec(uuid("77d57dda-e1e3-459a-91d1-192126bc344a"))
IXMLObjectElement : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall WriteXML (
        /*[in]*/ struct IXMLWriter * pWriter,
        /*[in]*/ struct IPropertySet * environment,
        /*[in]*/ struct IXMLFlags * flags,
        /*[in]*/ BSTR elementName,
        /*[in]*/ BSTR elementNamespaceURI ) = 0;
      virtual HRESULT __stdcall ReadXML (
        /*[in]*/ struct IXMLReader * pReader,
        /*[in]*/ struct IPropertySet * environment,
        /*[in]*/ struct IXMLFlags * flags ) = 0;
};

struct __declspec(uuid("498a5f91-65d1-4a25-ad2b-462e7df8b358"))
IXMLStream : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall LoadFromString (
        /*[in]*/ BSTR XML ) = 0;
      virtual HRESULT __stdcall LoadFromFile (
        /*[in]*/ BSTR filePath ) = 0;
      virtual HRESULT __stdcall LoadFromBytes (
        /*[in]*/ SAFEARRAY * * bytes ) = 0;
      virtual HRESULT __stdcall SaveToString (
        /*[out,retval]*/ BSTR * XML ) = 0;
      virtual HRESULT __stdcall SaveToFile (
        /*[in]*/ BSTR filePath ) = 0;
      virtual HRESULT __stdcall SaveToBytes (
        /*[out,retval]*/ SAFEARRAY * * bytes ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
};

struct __declspec(uuid("db2cde6f-a264-4129-a4ce-99f9a47f1830"))
XMLStream;
    // [ default ] interface IUnknown
    // interface IXMLStream
    // interface IStream

struct __declspec(uuid("b853965e-fd52-4ed2-80c2-f0e27a2c6e8a"))
XMLReader;
    // [ default ] interface IUnknown
    // interface IXMLReader
    // interface ISupportErrorInfo

struct __declspec(uuid("105a5345-85f8-4b27-a1d2-5d2262c6d27e"))
XMLWriter;
    // [ default ] interface IUnknown
    // interface IXMLWriter
    // interface ISupportErrorInfo

struct __declspec(uuid("176edc78-13ad-474c-9f42-083d86ffba33"))
XMLAttributes;
    // [ default ] interface IUnknown
    // interface IXMLAttributes

struct __declspec(uuid("95547dd2-8871-498b-918b-cf10eaf50f63"))
XMLNamespaces;
    // [ default ] interface IUnknown
    // interface IXMLNamespaces

struct __declspec(uuid("dcb0f748-2d17-40b5-90c2-7d0b39660405"))
XMLTypeMapper;
    // [ default ] interface IUnknown
    // interface IXMLTypeMapper
    // interface ISupportErrorInfo

struct __declspec(uuid("4fe5c28e-35e6-403f-8431-e16b1f99ae4e"))
XMLSerializer;
    // [ default ] interface IUnknown
    // interface IXMLSerializer
    // interface ISupportErrorInfo

struct __declspec(uuid("364eef73-3c3c-493c-b99a-76dbe62f6fc6"))
XMLSerializerAlt;
    // [ default ] interface IUnknown
    // interface IXMLSerializerAlt
    // interface ISupportErrorInfo

struct __declspec(uuid("23d488e6-6c77-47e8-948b-cceee3589ca2"))
XMLFlags;
    // [ default ] interface IUnknown
    // interface IXMLFlags

struct __declspec(uuid("408cd30c-b7a6-4793-a07c-4181035c66e7"))
IJSONWriter : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall WriteTo (
        /*[in]*/ struct IStream * outputStream ) = 0;
      virtual HRESULT __stdcall WriteToString ( ) = 0;
      virtual HRESULT __stdcall GetStringBuffer (
        /*[out,retval]*/ SAFEARRAY * * buf ) = 0;
      virtual HRESULT __stdcall get_Stream (
        /*[out,retval]*/ struct IStream * * ppStream ) = 0;
      virtual HRESULT __stdcall SetFormatted (
        VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall SetIndent (
        long Value ) = 0;
      virtual HRESULT __stdcall StartObject (
        BSTR Name ) = 0;
      virtual HRESULT __stdcall EndObject ( ) = 0;
      virtual HRESULT __stdcall StartArray (
        BSTR Name ) = 0;
      virtual HRESULT __stdcall EndArray ( ) = 0;
      virtual HRESULT __stdcall WriteVariant (
        BSTR Name,
        VARIANT Value ) = 0;
      virtual HRESULT __stdcall WriteString (
        BSTR Name,
        BSTR Value ) = 0;
      virtual HRESULT __stdcall WriteBoolean (
        BSTR Name,
        VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall WriteByte (
        BSTR Name,
        unsigned char Value ) = 0;
      virtual HRESULT __stdcall WriteShort (
        BSTR Name,
        short Value ) = 0;
      virtual HRESULT __stdcall WriteInteger (
        BSTR Name,
        long Value ) = 0;
      virtual HRESULT __stdcall WriteFloat (
        BSTR Name,
        float Value ) = 0;
      virtual HRESULT __stdcall WriteDouble (
        BSTR Name,
        double Value ) = 0;
      virtual HRESULT __stdcall WriteDate (
        BSTR Name,
        DATE Value,
        VARIANT_BOOL asString ) = 0;
      virtual HRESULT __stdcall WriteBinary (
        /*[in]*/ BSTR Name,
        /*[in]*/ SAFEARRAY * * Value ) = 0;
      virtual HRESULT __stdcall WriteNull (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall WriteVariantVal (
        VARIANT Value ) = 0;
      virtual HRESULT __stdcall WriteStringVal (
        BSTR Value ) = 0;
      virtual HRESULT __stdcall WriteBooleanVal (
        VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall WriteByteVal (
        unsigned char Value ) = 0;
      virtual HRESULT __stdcall WriteShortVal (
        short Value ) = 0;
      virtual HRESULT __stdcall WriteIntegerVal (
        long Value ) = 0;
      virtual HRESULT __stdcall WriteFloatVal (
        float Value ) = 0;
      virtual HRESULT __stdcall WriteDoubleVal (
        double Value ) = 0;
      virtual HRESULT __stdcall WriteDateVal (
        DATE Value,
        VARIANT_BOOL asString ) = 0;
      virtual HRESULT __stdcall WriteBinaryVal (
        /*[in]*/ SAFEARRAY * * Value ) = 0;
      virtual HRESULT __stdcall WriteNullVal ( ) = 0;
};

struct __declspec(uuid("e760e960-f144-4b30-930b-5f8056e4e305"))
IExternalSerializer : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall WriteObject (
        /*[in]*/ IUnknown * pUnk,
        /*[in]*/ struct IPropertySet * pProps ) = 0;
};

struct __declspec(uuid("09134de8-4147-4564-82bd-6cc18414c389"))
IExternalDeserializer : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall ReadObject (
        /*[in]*/ GUID riid,
        /*[in]*/ struct IPropertySet * pProps,
        /*[out,retval]*/ IUnknown * * ppUnk ) = 0;
};

struct __declspec(uuid("ab718cdf-0c06-4d18-9aa4-a6c54b2bc28c"))
IJSONSerializer : IExternalSerializer
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Writer (
        /*[out,retval]*/ struct IJSONWriter * * ppWriter ) = 0;
      virtual HRESULT __stdcall InitSerializer (
        /*[in]*/ struct IJSONWriter * pWriter,
        /*[in]*/ struct IPropertySet * pProps ) = 0;
};

struct __declspec(uuid("3eb8c519-d125-48d4-aeb6-608074316ad4"))
IAMFWriter : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall WriteTo (
        /*[in]*/ struct IStream * outputStream ) = 0;
      virtual HRESULT __stdcall get_Stream (
        /*[out,retval]*/ struct IStream * * ppStream ) = 0;
      virtual HRESULT __stdcall WriteAMF3Undefined ( ) = 0;
      virtual HRESULT __stdcall WriteAMF3Null ( ) = 0;
      virtual HRESULT __stdcall WriteAMF3Bool (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall WriteAMF3Int (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall WriteAMF3Double (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall WriteAMF3String (
        /*[in]*/ BSTR Value,
        /*[out]*/ long * string_ref ) = 0;
      virtual HRESULT __stdcall WriteAMF3StringRef (
        /*[in]*/ long string_ref ) = 0;
      virtual HRESULT __stdcall WriteAMF3XmlDoc (
        /*[in]*/ BSTR Value,
        /*[out]*/ long * obj_ref ) = 0;
      virtual HRESULT __stdcall WriteAMF3XmlDocRef (
        /*[in]*/ long obj_ref ) = 0;
      virtual HRESULT __stdcall WriteAMF3Xml (
        /*[in]*/ BSTR Value,
        /*[out]*/ long * obj_ref ) = 0;
      virtual HRESULT __stdcall WriteAMF3XmlRef (
        /*[in]*/ long obj_ref ) = 0;
      virtual HRESULT __stdcall WriteAMF3Date (
        /*[in]*/ DATE Value,
        /*[in]*/ VARIANT_BOOL asJsonNumber,
        /*[out]*/ long * obj_ref ) = 0;
      virtual HRESULT __stdcall WriteAMF3DateRef (
        /*[in]*/ long obj_ref ) = 0;
      virtual HRESULT __stdcall WriteAMF3ByteArray (
        /*[in]*/ SAFEARRAY * * ppArray,
        /*[out]*/ long * obj_ref ) = 0;
      virtual HRESULT __stdcall WriteAMF3ByteArrayRef (
        /*[in]*/ long obj_ref ) = 0;
      virtual HRESULT __stdcall WriteAMF3Variant (
        /*[in]*/ VARIANT Value,
        /*[out]*/ long * value_ref ) = 0;
      virtual HRESULT __stdcall StartAMF3Array (
        /*[in]*/ long denseCount,
        /*[out]*/ long * obj_ref ) = 0;
      virtual HRESULT __stdcall WriteAMF3ArrayDenseMarker ( ) = 0;
      virtual HRESULT __stdcall EndAMF3Array ( ) = 0;
      virtual HRESULT __stdcall WriteAMF3ArrayRef (
        /*[in]*/ long obj_ref ) = 0;
      virtual HRESULT __stdcall StartAMF3CustomObject (
        /*[in]*/ BSTR classname,
        /*[out]*/ long * obj_ref ) = 0;
      virtual HRESULT __stdcall StartAMF3Object (
        /*[in]*/ long traits_ref,
        /*[out]*/ long * obj_ref ) = 0;
      virtual HRESULT __stdcall StartAMF3ObjectWithTraits (
        /*[in]*/ BSTR classname,
        /*[in]*/ long MemberCount,
        /*[in]*/ VARIANT_BOOL dynamic,
        /*[out]*/ long * traits_ref,
        /*[out]*/ long * obj_ref ) = 0;
      virtual HRESULT __stdcall EndAMF3ObjectTraits ( ) = 0;
      virtual HRESULT __stdcall EndAMF3Object ( ) = 0;
      virtual HRESULT __stdcall WriteAMF3ObjectRef (
        /*[in]*/ long obj_ref ) = 0;
      virtual HRESULT __stdcall WriteAMF3_UTF8 (
        /*[in]*/ BSTR Value,
        /*[out]*/ long * string_ref ) = 0;
      virtual HRESULT __stdcall WriteAMF3_UTF8Ref (
        /*[in]*/ long string_ref ) = 0;
      virtual HRESULT __stdcall WriteU8 (
        /*[in]*/ unsigned char b ) = 0;
      virtual HRESULT __stdcall WriteU16 (
        /*[in]*/ short b ) = 0;
      virtual HRESULT __stdcall WriteU32 (
        /*[in]*/ long b ) = 0;
      virtual HRESULT __stdcall WriteUTF8 (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall GetCopy (
        /*[out]*/ struct IAMFWriter * * ppOutWriter ) = 0;
};

struct __declspec(uuid("8f6f56fc-a942-44f5-af7d-5312fdf0c0c6"))
IAMFSerializer : IExternalSerializer
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Writer (
        /*[out,retval]*/ struct IAMFWriter * * ppWriter ) = 0;
      virtual HRESULT __stdcall InitSerializer (
        /*[in]*/ struct IAMFWriter * pWriter,
        /*[in]*/ struct IPropertySet * pProps ) = 0;
      virtual HRESULT __stdcall WriteAMF0MessageVersion (
        /*[in]*/ short sVersion ) = 0;
      virtual HRESULT __stdcall WriteAMF0HeaderCount (
        /*[in]*/ short headerCount ) = 0;
      virtual HRESULT __stdcall WriteAMF0Header (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT_BOOL mustUnderstand,
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall WriteAMF0MessageCount (
        /*[in]*/ short messageCount ) = 0;
      virtual HRESULT __stdcall WriteAMF0MessageHeader (
        /*[in]*/ BSTR targetURI,
        /*[in]*/ BSTR respURI,
        /*[in]*/ long length ) = 0;
};

enum JSONTokenType
{
    JSONUndefined = -1,
    JSONString = 1,
    JSONNumber = 2,
    JSONBoolean = 3,
    JSONNull = 4,
    JSONStartOfObject = 5,
    JSONEndOfObject = 6,
    JSONStartOfArray = 7,
    JSONEndOfArray = 8,
    JSONPropertyValueDelimiter = 9,
    JSONValueDelimiter = 10
};

struct __declspec(uuid("48105a80-e0dc-4d69-bb61-3df74cafa52c"))
IJSONReader : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall ReadFrom (
        /*[in]*/ struct IStream * inputStream ) = 0;
      virtual HRESULT __stdcall ReadFromString (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall get_Stream (
        /*[out,retval]*/ struct IStream * * ppStream ) = 0;
      virtual HRESULT __stdcall Read ( ) = 0;
      virtual HRESULT __stdcall get_CurrentTokenType (
        /*[out,retval]*/ enum JSONTokenType * pVal ) = 0;
      virtual HRESULT __stdcall IsStartOfObject (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall IsEndOfObject (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall IsStartOfArray (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall IsEndOfArray (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall IsString (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall IsNumber (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall IsBoolean (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall IsNull (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall ReadValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall ReadPropertyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall ReadValueAsString (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall ReadValueAsLong (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall ReadValueAsDouble (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall ReadValueAsBoolean (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall ReadValueAsDate (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall FindProperty (
        /*[in]*/ BSTR propname,
        /*[out,retval]*/ VARIANT_BOOL * found ) = 0;
      virtual HRESULT __stdcall FindProperties (
        /*[in]*/ struct IStringArray * propnames,
        /*[out,retval]*/ long * index ) = 0;
      virtual HRESULT __stdcall SkipUntilObjectEnds ( ) = 0;
      virtual HRESULT __stdcall SkipUntilArrayEnds ( ) = 0;
};

struct __declspec(uuid("1e6dc0eb-5c8a-4401-a8af-bb5602ddfb7e"))
IJSONDeserializer : IExternalDeserializer
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Reader (
        /*[out,retval]*/ struct IJSONReader * * ppReader ) = 0;
      virtual HRESULT __stdcall InitDeserializer (
        /*[in]*/ struct IJSONReader * pReader,
        /*[in]*/ struct IPropertySet * pProps ) = 0;
};

struct __declspec(uuid("677fcbb1-c272-4616-b476-2ca3dce8d292"))
IJSONWriter2 : IJSONWriter
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall WriteRawString (
        BSTR Name,
        BSTR Value ) = 0;
      virtual HRESULT __stdcall WriteRawStringVal (
        BSTR Value ) = 0;
      virtual HRESULT __stdcall WriteDoubleValEx (
        double Value,
        long precision ) = 0;
      virtual HRESULT __stdcall WriteDoubleEx (
        BSTR Name,
        double Value,
        long precision ) = 0;
};

struct __declspec(uuid("2c573605-c449-47e3-a483-f441192840fa"))
IJSONReader2 : IJSONReader
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall ParseJSONString (
        /*[in]*/ BSTR json,
        /*[out,retval]*/ IUnknown * * root ) = 0;
      virtual HRESULT __stdcall SetBookmark (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall ReturnToBookmark (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall RemoveBookmark (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall RemoveAllBookmarks ( ) = 0;
      virtual HRESULT __stdcall ReadValueEx (
        /*[out]*/ VARIANT * pVal,
        /*[out]*/ long * precision ) = 0;
};

struct __declspec(uuid("7f763998-814e-45bd-9ebd-28cda2a10fc6"))
JSONArray;
    // [ default ] interface IUnknown
    // interface IJSONArray
    // interface ISupportErrorInfo

struct __declspec(uuid("db25e387-8d9f-4d79-b1df-8f65694465f0"))
JSONObject;
    // [ default ] interface IUnknown
    // interface IJSONObject
    // interface ISupportErrorInfo

struct __declspec(uuid("bec303dc-37ae-4eb3-92f5-397e5b6e7509"))
JSONWriter;
    // [ default ] interface IUnknown
    // interface IJSONWriter
    // interface IJSONWriter2
    // interface ISupportErrorInfo

struct __declspec(uuid("e312a49e-4a72-4766-9e5b-4b3fe8ca2eec"))
AMFWriter;
    // [ default ] interface IUnknown
    // interface IAMFWriter
    // interface ISupportErrorInfo

struct __declspec(uuid("b4578901-05de-4bda-aaeb-849ec52102b1"))
JSONReader;
    // [ default ] interface IUnknown
    // interface IJSONReader
    // interface IJSONReader2
    // interface ISupportErrorInfo

enum __declspec(uuid("744a77f7-4fc8-432a-ba26-581ada4eaf5a"))
xmlSerializeError
{
    XML_SERIALIZE_E_UNKNOWN = -2147209115,
    XML_SERIALIZE_E_INVALIDENUMVALUE = -2147209114,
    XML_SERIALIZE_E_CONVFAILED = -2147209113,
    XML_SERIALIZE_E_CANT_MAP_XMLTYPE_TO_CLASS = -2147209112
};

struct __declspec(uuid("2cbfdcb1-c991-4f68-b5b1-919b1b1e6a25"))
ITimeZoneRule : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Year (
        /*[out,retval]*/ long * Year ) = 0;
      virtual HRESULT __stdcall put_Year (
        /*[in]*/ long Year ) = 0;
      virtual HRESULT __stdcall get_BiasFromUTC (
        /*[out,retval]*/ long * BiasFromUTC ) = 0;
      virtual HRESULT __stdcall put_BiasFromUTC (
        /*[in]*/ long BiasFromUTC ) = 0;
      virtual HRESULT __stdcall get_DaylightTimeTransitionTime (
        /*[out,retval]*/ TimeZoneTransitionTime * DaylightTimeTransitionTime ) = 0;
      virtual HRESULT __stdcall put_DaylightTimeTransitionTime (
        /*[in]*/ TimeZoneTransitionTime * DaylightTimeTransitionTime ) = 0;
      virtual HRESULT __stdcall get_DaylightTimeBias (
        /*[out,retval]*/ long * DaylightTimeBias ) = 0;
      virtual HRESULT __stdcall put_DaylightTimeBias (
        /*[in]*/ long DaylightTimeBias ) = 0;
      virtual HRESULT __stdcall get_StandardTimeTransitionTime (
        /*[out,retval]*/ TimeZoneTransitionTime * StandardTimeTransitionTime ) = 0;
      virtual HRESULT __stdcall put_StandardTimeTransitionTime (
        /*[in]*/ TimeZoneTransitionTime * StandardTimeTransitionTime ) = 0;
      virtual HRESULT __stdcall get_StandardTimeBias (
        /*[out,retval]*/ long * StandardTimeBias ) = 0;
      virtual HRESULT __stdcall put_StandardTimeBias (
        /*[in]*/ long StandardTimeBias ) = 0;
};

struct __declspec(uuid("0f8fd6ab-ce6d-4bb2-a5ef-2f6035e304c5"))
ITimeZoneInfo : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_WindowsID (
        /*[out,retval]*/ BSTR * WindowsID ) = 0;
      virtual HRESULT __stdcall put_WindowsID (
        /*[in]*/ BSTR WindowsID ) = 0;
      virtual HRESULT __stdcall get_DisplayName (
        /*[out,retval]*/ BSTR * DisplayName ) = 0;
      virtual HRESULT __stdcall put_DisplayName (
        /*[in]*/ BSTR DisplayName ) = 0;
      virtual HRESULT __stdcall get_CustomDescription (
        /*[out,retval]*/ BSTR * DisplayName ) = 0;
      virtual HRESULT __stdcall put_CustomDescription (
        /*[in]*/ BSTR DisplayName ) = 0;
      virtual HRESULT __stdcall get_DaylightTimeName (
        /*[out,retval]*/ BSTR * DaylightTimeName ) = 0;
      virtual HRESULT __stdcall put_DaylightTimeName (
        /*[in]*/ BSTR DaylightTimeName ) = 0;
      virtual HRESULT __stdcall get_StandardTimeName (
        /*[out,retval]*/ BSTR * StandardTimeName ) = 0;
      virtual HRESULT __stdcall put_StandardTimeName (
        /*[in]*/ BSTR StandardTimeName ) = 0;
      virtual HRESULT __stdcall get_DefaultRule (
        /*[out,retval]*/ struct ITimeZoneRule * * defaultTimeZoneRule ) = 0;
      virtual HRESULT __stdcall put_DefaultRule (
        /*[in]*/ struct ITimeZoneRule * defaultTimeZoneRule ) = 0;
      virtual HRESULT __stdcall get_DynamicRulesCount (
        /*[out,retval]*/ long * DynamicRulesCount ) = 0;
      virtual HRESULT __stdcall get_FirstDynamicRuleYear (
        /*[out,retval]*/ long * FirstDynamicRuleYear ) = 0;
      virtual HRESULT __stdcall get_LastDynamicRuleYear (
        /*[out,retval]*/ long * LastDynamicRuleYear ) = 0;
      virtual HRESULT __stdcall get_NextDynamicRuleYear (
        /*[in]*/ long currentDynamicRuleYear,
        /*[out,retval]*/ long * NextDynamicRuleYear ) = 0;
      virtual HRESULT __stdcall get_DynamicRule (
        /*[in]*/ long Year,
        /*[out,retval]*/ struct ITimeZoneRule * * DynamicRule ) = 0;
      virtual HRESULT __stdcall AddDynamicRule (
        /*[in]*/ struct ITimeZoneRule * DynamicRule ) = 0;
};

#pragma pack(push, 2)

struct _TimeZoneTransitionTime
{
    short Year;
    short Month;
    short DayOfWeek;
    short DayOccurrence;
    short Hour;
    short Minute;
    short Second;
    short Milliseconds;
};

#pragma pack(pop)

struct __declspec(uuid("953dc994-aa0d-4193-9c1f-469b60d61711"))
ITimeDuration : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Days (
        /*[out,retval]*/ long * Days ) = 0;
      virtual HRESULT __stdcall put_Days (
        /*[in]*/ long Days ) = 0;
      virtual HRESULT __stdcall get_Hours (
        /*[out,retval]*/ long * Hours ) = 0;
      virtual HRESULT __stdcall put_Hours (
        /*[in]*/ long Hours ) = 0;
      virtual HRESULT __stdcall get_Minutes (
        /*[out,retval]*/ long * Minutes ) = 0;
      virtual HRESULT __stdcall put_Minutes (
        /*[in]*/ long Minutes ) = 0;
      virtual HRESULT __stdcall get_Seconds (
        /*[out,retval]*/ long * Seconds ) = 0;
      virtual HRESULT __stdcall put_Seconds (
        /*[in]*/ long Seconds ) = 0;
      virtual HRESULT __stdcall get_Nanoseconds (
        /*[out,retval]*/ long * Nanoseconds ) = 0;
      virtual HRESULT __stdcall put_Nanoseconds (
        /*[in]*/ long Nanoseconds ) = 0;
      virtual HRESULT __stdcall get_Positive (
        /*[out,retval]*/ VARIANT_BOOL * Positive ) = 0;
      virtual HRESULT __stdcall put_Positive (
        /*[in]*/ VARIANT_BOOL Positive ) = 0;
      virtual HRESULT __stdcall QueryWKSTimeDuration (
        /*[out,retval]*/ WKSTimeDuration * TimeDuration ) = 0;
      virtual HRESULT __stdcall SetFromWKSTimeDuration (
        /*[in]*/ WKSTimeDuration * TimeDuration ) = 0;
      virtual HRESULT __stdcall QueryXMLTimeDurationString (
        /*[out,retval]*/ BSTR * xmlTimeDurationString ) = 0;
      virtual HRESULT __stdcall SetFromXMLTimeDurationString (
        /*[in]*/ BSTR xmlTimeDurationString ) = 0;
      virtual HRESULT __stdcall AddWeeks (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall AddDays (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall AddHours (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall AddMinutes (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall AddSeconds (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall AddMilliseconds (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall AddNanoseconds (
        /*[in]*/ __int64 Value ) = 0;
      virtual HRESULT __stdcall QueryTotalDays (
        /*[out,retval]*/ double * totalDays ) = 0;
      virtual HRESULT __stdcall QueryTotalHours (
        /*[out,retval]*/ double * totalHours ) = 0;
      virtual HRESULT __stdcall QueryTotalMinutes (
        /*[out,retval]*/ double * totalMinutes ) = 0;
      virtual HRESULT __stdcall QueryTotalSeconds (
        /*[out,retval]*/ double * totalSeconds ) = 0;
      virtual HRESULT __stdcall QueryDayFraction (
        /*[out,retval]*/ double * dayFraction ) = 0;
      virtual HRESULT __stdcall SetDayFraction (
        /*[in]*/ double dayFraction ) = 0;
      virtual HRESULT __stdcall QueryDayFractionNanoseconds (
        /*[out,retval]*/ __int64 * dayFractionNanoseconds ) = 0;
      virtual HRESULT __stdcall SetDayFractionNanoseconds (
        /*[in]*/ __int64 dayFractionNanoseconds ) = 0;
      virtual HRESULT __stdcall QueryTicks (
        /*[out,retval]*/ __int64 * ticks ) = 0;
      virtual HRESULT __stdcall SetFromTicks (
        /*[in]*/ __int64 ticks ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Scale (
        /*[in]*/ double scaleFactor ) = 0;
      virtual HRESULT __stdcall AddDuration (
        /*[in]*/ struct ITimeDuration * TimeDuration ) = 0;
      virtual HRESULT __stdcall SubtractDuration (
        /*[in]*/ struct ITimeDuration * TimeDuration ) = 0;
      virtual HRESULT __stdcall IsZero (
        /*[out,retval]*/ VARIANT_BOOL * IsZero ) = 0;
      virtual HRESULT __stdcall Compare (
        /*[in]*/ struct ITimeDuration * otherDuration,
        /*[out,retval]*/ int * Result ) = 0;
};

#pragma pack(push, 4)

struct _WKSTimeDuration
{
    VARIANT_BOOL Positive;
    long Days;
    long Hours;
    long Minutes;
    long Seconds;
    long Nanoseconds;
};

#pragma pack(pop)

enum __declspec(uuid("85f977f2-1af5-4a2e-bfea-f27fb793f2df"))
esriTimeStringFormat
{
    esriTSFYearThruSubSecondWithSlash = 0,
    esriTSFYearThruSecondWithSlash = 1,
    esriTSFYearThruMinuteWithSlash = 2,
    esriTSFYearThruHourWithSlash = 3,
    esriTSFYearThruDayWithSlash = 4,
    esriTSFYearThruMonthWithSlash = 5,
    esriTSFYearThruSubSecondWithDash = 6,
    esriTSFYearThruSecondWithDash = 7,
    esriTSFYearThruMinuteWithDash = 8,
    esriTSFYearThruHourWithDash = 9,
    esriTSFYearThruDayWithDash = 10,
    esriTSFYearThruMonthWithDash = 11,
    esriTSFYearThruSubSecond = 12,
    esriTSFYearThruSecond = 13,
    esriTSFYearThruMinute = 14,
    esriTSFYearThruHour = 15,
    esriTSFYearThruDay = 16,
    esriTSFYearThruMonth = 17,
    esriTSFYearOnly = 18
};

enum __declspec(uuid("b455848e-735d-479e-9434-9f3768d8d5b5"))
esriTimeLocaleFormat
{
    esriTLFDefaultDateTime = 0,
    esriTLFLongDate = 1,
    esriTLFShortDate = 2,
    esriTLFLongTime = 3,
    esriTLFShortTime = 4
};

enum __declspec(uuid("291e6e6e-07ff-4952-9a1b-a0d33f88094a"))
esriIntegerTimeFormat
{
    esriITFYearThruSecond = 0,
    esriITFYearThruMinute = 1,
    esriITFYearThruHour = 2,
    esriITFYearThruDay = 3,
    esriITFYearThruMonth = 4,
    esriITFYearOnly = 5
};

#pragma pack(push, 4)

struct _WKSDateTime
{
    short Year;
    short Month;
    short Day;
    short Hour;
    short Minute;
    short Second;
    long Nanoseconds;
};

#pragma pack(pop)

enum __declspec(uuid("93e5d6f9-568b-4c30-ae70-037503447808"))
esriTimeUnits
{
    esriTimeUnitsUnknown = 0,
    esriTimeUnitsMilliseconds = 1,
    esriTimeUnitsSeconds = 2,
    esriTimeUnitsMinutes = 3,
    esriTimeUnitsHours = 4,
    esriTimeUnitsDays = 5,
    esriTimeUnitsWeeks = 6,
    esriTimeUnitsMonths = 7,
    esriTimeUnitsYears = 8,
    esriTimeUnitsDecades = 9,
    esriTimeUnitsCenturies = 10
};

enum __declspec(uuid("afd6f889-8336-4ba6-acdc-d3cca5a63f95"))
esriTimeRelation
{
    esriTimeRelationOverlaps = 0,
    esriTimeRelationOverlapsStartWithinEnd = 1,
    esriTimeRelationAfterStartOverlapsEnd = 2
};

struct __declspec(uuid("53325bda-65fa-4de0-901e-2b23fffb8764"))
ILocaleInfo : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_LocaleID (
        /*[out,retval]*/ long * LocaleID ) = 0;
      virtual HRESULT __stdcall put_LocaleID (
        /*[in]*/ long LocaleID ) = 0;
      virtual HRESULT __stdcall get_LanguageID (
        /*[out,retval]*/ long * LanguageID ) = 0;
      virtual HRESULT __stdcall put_LanguageID (
        /*[in]*/ long LanguageID ) = 0;
      virtual HRESULT __stdcall get_CountryID (
        /*[out,retval]*/ long * CountryID ) = 0;
      virtual HRESULT __stdcall put_CountryID (
        /*[in]*/ long CountryID ) = 0;
      virtual HRESULT __stdcall get_LanguageName (
        /*[out,retval]*/ BSTR * Language ) = 0;
      virtual HRESULT __stdcall put_LanguageName (
        /*[in]*/ BSTR Language ) = 0;
      virtual HRESULT __stdcall get_CountryName (
        /*[out,retval]*/ BSTR * country ) = 0;
      virtual HRESULT __stdcall put_CountryName (
        /*[in]*/ BSTR country ) = 0;
      virtual HRESULT __stdcall get_DisplayName (
        /*[out,retval]*/ BSTR * DisplayName ) = 0;
      virtual HRESULT __stdcall put_DisplayName (
        /*[in]*/ BSTR DisplayName ) = 0;
      virtual HRESULT __stdcall get_LocalizedLanguageName (
        /*[out,retval]*/ BSTR * Language ) = 0;
      virtual HRESULT __stdcall put_LocalizedLanguageName (
        /*[in]*/ BSTR Language ) = 0;
      virtual HRESULT __stdcall get_LocalizedCountryName (
        /*[out,retval]*/ BSTR * country ) = 0;
      virtual HRESULT __stdcall put_LocalizedCountryName (
        /*[in]*/ BSTR country ) = 0;
      virtual HRESULT __stdcall get_LocalizedDisplayName (
        /*[out,retval]*/ BSTR * DisplayName ) = 0;
      virtual HRESULT __stdcall put_LocalizedDisplayName (
        /*[in]*/ BSTR DisplayName ) = 0;
      virtual HRESULT __stdcall get_NativeLanguageName (
        /*[out,retval]*/ BSTR * Language ) = 0;
      virtual HRESULT __stdcall put_NativeLanguageName (
        /*[in]*/ BSTR Language ) = 0;
      virtual HRESULT __stdcall get_NativeCountryName (
        /*[out,retval]*/ BSTR * country ) = 0;
      virtual HRESULT __stdcall put_NativeCountryName (
        /*[in]*/ BSTR country ) = 0;
};

struct __declspec(uuid("7cbbb8ea-7708-464a-a6c8-96db06521b3a"))
ITimeOffsetOperator : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AddDuration (
        /*[in]*/ struct ITimeDuration * TimeDuration ) = 0;
      virtual HRESULT __stdcall SubtractDuration (
        /*[in]*/ struct ITimeDuration * TimeDuration ) = 0;
      virtual HRESULT __stdcall AddYears (
        /*[in]*/ double Value,
        /*[in]*/ VARIANT_BOOL preserveEndOfMonth,
        /*[in]*/ VARIANT_BOOL goForwardOnInvalidDate,
        /*[out,retval]*/ VARIANT_BOOL * dateWasAdjusted ) = 0;
      virtual HRESULT __stdcall AddMonths (
        /*[in]*/ double Value,
        /*[in]*/ VARIANT_BOOL preserveEndOfMonth,
        /*[in]*/ VARIANT_BOOL goForwardOnInvalidDate,
        /*[out,retval]*/ VARIANT_BOOL * dateWasAdjusted ) = 0;
      virtual HRESULT __stdcall AddWeeks (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall AddDays (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall AddHours (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall AddMinutes (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall AddSeconds (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall AddMilliseconds (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall AddNanoseconds (
        /*[in]*/ __int64 Value ) = 0;
};

struct __declspec(uuid("e1721810-8210-45b1-8590-fc4c911fba20"))
Time;
    // [ default ] interface IUnknown
    // interface ITime
    // interface ITime2
    // interface ITimeOffsetOperator
    // interface IXMLSerialize
    // interface IXMLVersionSupport
    // interface IClone
    // interface IPersistStream
    // interface IDocumentVersionSupportGEN

struct __declspec(uuid("09692c1c-21fa-4fe2-8efa-6c4acb59a323"))
TimeDuration;
    // [ default ] interface IUnknown
    // interface ITimeDuration
    // interface IXMLSerialize
    // interface IXMLVersionSupport
    // interface IClone
    // interface IPersistStream
    // interface IDocumentVersionSupportGEN

struct __declspec(uuid("06bd7287-0785-4294-bd72-f2933b7fd00d"))
TimeInstant;
    // [ default ] interface IUnknown
    // interface ITimeInstant
    // interface ITimeValue
    // interface ITimeRelationalOperator
    // interface ITimeOffsetOperator
    // interface IXMLSerialize
    // interface IXMLVersionSupport
    // interface IClone
    // interface IPersistStream
    // interface IDocumentVersionSupportGEN

struct __declspec(uuid("5dc783de-283a-4963-ab53-25a05c5d76cc"))
TimeExtent;
    // [ default ] interface IUnknown
    // interface ITimeExtent
    // interface ITimeValue
    // interface ITimeRelationalOperator
    // interface ITimeOffsetOperator
    // interface IXMLSerialize
    // interface IXMLVersionSupport
    // interface IClone
    // interface IPersistStream
    // interface IDocumentVersionSupportGEN

struct __declspec(uuid("1897b0ef-94da-4037-8156-145d63cd480d"))
TimeZoneRule;
    // [ default ] interface IUnknown
    // interface ITimeZoneRule
    // interface IXMLSerialize
    // interface IXMLVersionSupport
    // interface IClone
    // interface IPersistStream
    // interface IDocumentVersionSupportGEN

struct __declspec(uuid("78fad5f1-60fa-458a-8d93-630da920448d"))
TimeZoneInfo;
    // [ default ] interface IUnknown
    // interface ITimeZoneInfo
    // interface IXMLSerialize
    // interface IXMLVersionSupport
    // interface IClone
    // interface IPersistStream
    // interface IDocumentVersionSupportGEN

struct __declspec(uuid("1cb5f59d-fd41-4695-9f48-fae4675dbf3c"))
LocaleInfo;
    // [ default ] interface IUnknown
    // interface ILocaleInfo
    // interface IXMLSerialize
    // interface IXMLVersionSupport
    // interface IClone
    // interface IPersistStream
    // interface IDocumentVersionSupportGEN

struct __declspec(uuid("efb2e7db-78f4-4e24-b01f-4f9c7ab800c5"))
TimeReference;
    // [ default ] interface IUnknown
    // interface ITimeReference
    // interface IXMLSerialize
    // interface IXMLVersionSupport
    // interface IClone
    // interface IPersistStream
    // interface IDocumentVersionSupportGEN

struct __declspec(uuid("c559680f-9fae-4967-938a-33548bc5eba0"))
TimeZoneFactory;
    // [ default ] interface IUnknown
    // interface ITimeZoneFactory
    // interface ITimeZoneFactory2

enum __declspec(uuid("2116edb7-6fa8-4d0b-800f-3050b5245654"))
messageSupportError
{
    MESSAGESUPPORT_E_BAD_REQUEST = -2147220991,
    MESSAGESUPPORT_E_UNAUTHORIZED = -2147220990,
    MESSAGESUPPORT_E_FORBIDDEN = -2147220989,
    MESSAGESUPPORT_E_NOT_FOUND = -2147220988,
    MESSAGESUPPORT_E_METHOD_NOT_ALLOWED = -2147220987,
    MESSAGESUPPORT_E_PROXY_AUTHENTICATION_REQUIRED = -2147220986,
    MESSAGESUPPORT_E_REQUEST_TIMEOUT = -2147220985,
    MESSAGESUPPORT_E_INTERNAL_SERVER_ERROR = -2147220984,
    MESSAGESUPPORT_E_NOT_IMPLEMENTED = -2147220983,
    MESSAGESUPPORT_E_BAD_GATEWAY = -2147220982,
    MESSAGESUPPORT_E_SERVICE_NOT_AVAILABLE = -2147220981,
    MESSAGESUPPORT_E_UNSUPPORTED_PROTOCOL = -2147220980,
    MESSAGESUPPORT_E_URL_MALFORMAT = -2147220979,
    MESSAGESUPPORT_E_COULDNT_RESOLVE_PROXY = -2147220978,
    MESSAGESUPPORT_E_COULDNT_RESOLVE_HOST = -2147220977,
    MESSAGESUPPORT_E_COULDNT_CONNECT = -2147220976,
    MESSAGESUPPORT_E_REQUEST_TOLARGE = -2147220975,
    MESSAGESUPPORT_E_NO_CONTENT = -2147220974,
    MESSAGESUPPORT_E_SSL_CACERT = -2147220973,
    MESSAGESUPPORT_E_SSL_CONNECT_ERROR = -2147220972,
    MESSAGESUPPORT_E_SSL_PEER_CERTIFICATE = -2147220971,
    MESSAGESUPPORT_E_INVALID_GET_FILE = -2147220970,
    MESSAGESUPPORT_E_OPERATION_TIMEDOUT = -2147220969,
    MESSAGESUPPORT_E_MEM_ALLOC_FAILED = -2147220968,
    MESSAGESUPPORT_E_AUTH_TOKEN_FAILURE = -2147220967,
    MESSAGESUPPORT_E_AUTH_TOKEN_REQUIRED = -2147220966,
    MESSAGESUPPORT_E_GET_TOKEN_FAILED = -2147220965,
    MESSAGESUPPORT_E_PROXY_GATEWAY_ERROR = -2147220964,
    MESSAGESUPPORT_E_NOT_ACCEPTABLE = -2147220963
};

enum __declspec(uuid("b200e14a-3090-4625-a266-11692ff5fe37"))
esriAGSInternetMessageFormat
{
    esriAGSInternetMessageFormatSoap = 1,
    esriAGSInternetMessageFormatBin = 2
};

enum __declspec(uuid("f4d567b4-5477-4098-ad11-f77b02258fb4"))
esriTransportType
{
    esriTransportTypeEmbedded = 1,
    esriTransportTypeUrl = 2
};

struct __declspec(uuid("46a0e2ea-3b64-4a46-bd78-88a1660f35bb"))
IRequestHandler : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall HandleBinaryRequest (
        /*[in]*/ SAFEARRAY * * request,
        /*[out,retval]*/ SAFEARRAY * * response ) = 0;
      virtual HRESULT __stdcall HandleStringRequest (
        /*[in]*/ BSTR Capabilities,
        /*[in]*/ BSTR request,
        /*[out,retval]*/ BSTR * response ) = 0;
};

struct __declspec(uuid("8319e7d0-8ad1-48ed-aa99-03f9d0c93ba8"))
IRequestHandler2 : IRequestHandler
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall HandleBinaryRequest2 (
        /*[in]*/ BSTR Capabilities,
        /*[in]*/ SAFEARRAY * * request,
        /*[out,retval]*/ SAFEARRAY * * response ) = 0;
};

enum __declspec(uuid("8a3a69d2-417b-4857-96a3-6d61c5e7ee17"))
esriHttpMethod
{
    esriHttpMethodPost = 0,
    esriHttpMethodGet = 1,
    esriHttpMethodPut = 2,
    esriHttpMethodDelete = 3,
    esriHttpMethodHead = 4,
    esriHttpMethodTrace = 5,
    esriHttpMethodOptions = 6
};

enum __declspec(uuid("40c6d9a1-8700-469a-a0b5-0c63acfd58ae"))
esriWebResponseDataType
{
    esriWRDTPayload = 0,
    esriWRDTFileToReturn = 1
};

struct __declspec(uuid("d1da21f3-9ec1-40bc-b8a2-cd29a1ebed8d"))
IWebRequestHandler : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall HandleStringWebRequest (
        /*[in]*/ enum esriHttpMethod httpMethod,
        /*[in]*/ BSTR requestURL,
        /*[in]*/ BSTR queryString,
        /*[in]*/ BSTR Capabilities,
        /*[in]*/ BSTR requestData,
        /*[out]*/ BSTR * responseContentType,
        /*[out]*/ enum esriWebResponseDataType * respDataType,
        /*[out,retval]*/ SAFEARRAY * * responseData ) = 0;
};

struct __declspec(uuid("9d66a418-d54a-48ed-88bd-043a25fa9c83"))
IRESTRequestHandler : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall HandleRESTRequest (
        /*[in]*/ BSTR Capabilities,
        /*[in]*/ BSTR resourceName,
        /*[in]*/ BSTR operationName,
        /*[in]*/ BSTR operationInput,
        /*[in]*/ BSTR outputFormat,
        /*[in]*/ BSTR requestProperties,
        /*[out]*/ BSTR * responseProperties,
        /*[out,retval]*/ SAFEARRAY * * responseData ) = 0;
      virtual HRESULT __stdcall GetSchema (
        /*[out,retval]*/ BSTR * schema ) = 0;
};

struct __declspec(uuid("c5f365f0-9ac8-4872-afd0-e9383aff0f2e"))
CoRESTResource;
    // [ default ] interface IUnknown
    // interface IRESTResource

struct __declspec(uuid("fda271d6-59e0-40ec-97f2-0ce6a392f12c"))
CoRESTOperation;
    // [ default ] interface IUnknown
    // interface IRESTOperation

struct __declspec(uuid("0d52fcd9-6647-432c-b15b-b141ab0a349f"))
CoRESTDispatcher;
    // [ default ] interface IUnknown
    // interface IRESTDispatcher

struct __declspec(uuid("fc221ff0-1240-43a0-8d76-3e917d029ce6"))
IProxyServerInfo : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UserName (
        /*[out,retval]*/ BSTR * UserName ) = 0;
      virtual HRESULT __stdcall put_UserName (
        /*[in]*/ BSTR UserName ) = 0;
      virtual HRESULT __stdcall get_Password (
        /*[out,retval]*/ BSTR * Password ) = 0;
      virtual HRESULT __stdcall put_Password (
        /*[in]*/ BSTR Password ) = 0;
      virtual HRESULT __stdcall get_ProxyServer (
        /*[out,retval]*/ BSTR * ProxyServer ) = 0;
      virtual HRESULT __stdcall put_ProxyServer (
        /*[in]*/ BSTR ProxyServer ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall ReadProxyServerInfo ( ) = 0;
      virtual HRESULT __stdcall WriteProxyServerInfo ( ) = 0;
};

struct __declspec(uuid("e724e8b4-f2fb-40ea-bf7e-eb296db6acda"))
IProxyServerInfo2 : IProxyServerInfo
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CredentialsCancelled (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_CredentialsCancelled (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall CacheProxyCredentials ( ) = 0;
};

struct __declspec(uuid("0dbcfafe-4724-416c-a4cd-c0eed8ca7d87"))
ISSLInfo : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_VerifyPeer (
        /*[out,retval]*/ VARIANT_BOOL * bVerifyPeer ) = 0;
      virtual HRESULT __stdcall put_VerifyPeer (
        /*[in]*/ VARIANT_BOOL bVerifyPeer ) = 0;
      virtual HRESULT __stdcall get_CertPath (
        /*[out,retval]*/ BSTR * CertPath ) = 0;
      virtual HRESULT __stdcall put_CertPath (
        /*[in]*/ BSTR CertPath ) = 0;
      virtual HRESULT __stdcall ReadSSLInfo ( ) = 0;
      virtual HRESULT __stdcall WriteSSLInfo ( ) = 0;
};

struct __declspec(uuid("e4e5591d-c47e-4a2d-856e-8a1847547a97"))
IMessage : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * messageName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR messageName ) = 0;
      virtual HRESULT __stdcall get_NamespaceURI (
        /*[out,retval]*/ BSTR * uri ) = 0;
      virtual HRESULT __stdcall put_NamespaceURI (
        /*[in]*/ BSTR uri ) = 0;
      virtual HRESULT __stdcall get_Parameters (
        /*[out,retval]*/ struct IXMLSerializeData * * data ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ struct IPropertySet * * props ) = 0;
      virtual HRESULT __stdcall putref_Properties (
        /*[in]*/ struct IPropertySet * props ) = 0;
      virtual HRESULT __stdcall get_Result (
        /*[out,retval]*/ long * hresult ) = 0;
      virtual HRESULT __stdcall get_ErrorInfo (
        /*[out,retval]*/ struct IErrorInfo * * ErrorInfo ) = 0;
      virtual HRESULT __stdcall SetError (
        /*[in]*/ long hresult,
        /*[in]*/ struct IErrorInfo * pErrorInfo ) = 0;
      virtual HRESULT __stdcall ReadXML (
        /*[in]*/ struct IStream * Stream ) = 0;
      virtual HRESULT __stdcall WriteXML (
        /*[in]*/ struct IStream * Stream ) = 0;
};

struct __declspec(uuid("f36507f2-7ef4-4119-a449-81998de36ad1"))
ProxyServerInfo;
    // [ default ] interface IUnknown
    // interface IProxyServerInfo
    // interface IProxyServerInfo2

struct __declspec(uuid("d5853dc9-d6a6-467a-9577-3357cccd786a"))
SSLInfo;
    // [ default ] interface IUnknown
    // interface ISSLInfo

struct __declspec(uuid("5fac2741-5ef9-47d8-afb5-5ee5e679143c"))
Message;
    // [ default ] interface IUnknown
    // interface IMessage
    // interface ISupportErrorInfo

enum __declspec(uuid("3697db32-1bc5-4968-a80d-ad15b9f5f7d1"))
esriTextureCompressionType
{
    esriTextureCompressionNever = 1,
    esriTextureCompressionNone = 2,
    esriTextureCompressionJPEG = 3,
    esriTextureCompressionJPEGPlus = 4
};

struct __declspec(uuid("55df03ae-b4f8-4387-b8b5-6fb22b15ddac"))
IZipArchive : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall OpenArchive (
        /*[in]*/ BSTR archiveName ) = 0;
      virtual HRESULT __stdcall CreateArchive (
        /*[in]*/ BSTR archiveName ) = 0;
      virtual HRESULT __stdcall CloseArchive ( ) = 0;
      virtual HRESULT __stdcall AddFile (
        /*[in]*/ BSTR inputFile ) = 0;
      virtual HRESULT __stdcall GetFileNames (
        /*[out,retval]*/ struct IEnumBSTR * * FileNames ) = 0;
      virtual HRESULT __stdcall ExtractFile (
        /*[in]*/ BSTR file,
        /*[in]*/ BSTR outputDir ) = 0;
      virtual HRESULT __stdcall Extract (
        /*[in]*/ BSTR outputDir ) = 0;
};

struct __declspec(uuid("f088433d-0167-4866-a846-55cab2fb76b0"))
IZipArchiveEx : IZipArchive
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AddFileEx (
        /*[in]*/ BSTR inputFile,
        /*[in]*/ BSTR rootFolder ) = 0;
      virtual HRESULT __stdcall AddFolder (
        /*[in]*/ BSTR inputFolder,
        /*[in]*/ VARIANT_BOOL recursive ) = 0;
};

struct __declspec(uuid("3c1841db-3625-464f-b216-41811a7e8a6c"))
ZipArchive;
    // [ default ] interface IUnknown
    // interface IZipArchive

struct __declspec(uuid("fee4d81c-25d9-4389-a20c-16821ec90719"))
IZlibCompression : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_BufferSize (
        /*[in]*/ long Size,
        /*[out,retval]*/ long * pSize ) = 0;
      virtual HRESULT __stdcall Compress (
        /*[in]*/ long inSize,
        /*[in]*/ unsigned char * pInBuff,
        /*[in,out]*/ long * pOutSize,
        /*[in,out]*/ unsigned char * pOutBuff ) = 0;
      virtual HRESULT __stdcall CompressByLevel (
        /*[in]*/ long inSize,
        /*[in]*/ unsigned char * pInBuff,
        /*[in]*/ long level,
        /*[in,out]*/ long * pOutSize,
        /*[in,out]*/ unsigned char * pOutBuff ) = 0;
      virtual HRESULT __stdcall UnCompress (
        /*[in]*/ long inSize,
        /*[in]*/ unsigned char * pInBuff,
        /*[in,out]*/ long * pOutSize,
        /*[in,out]*/ unsigned char * pOutBuff ) = 0;
};

struct __declspec(uuid("b5f3860a-fce1-4e71-8f12-bc5c6bb0f280"))
ITextureCompression : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall CompressTexture (
        /*[in]*/ enum esriTextureCompressionType type,
        /*[in]*/ long width,
        /*[in]*/ long height,
        /*[in]*/ long channels,
        /*[in]*/ unsigned char * pInData,
        /*[out]*/ long * pByteCount,
        /*[out]*/ unsigned char * * ppOutBuff ) = 0;
      virtual HRESULT __stdcall UnCompressTexture (
        /*[in]*/ enum esriTextureCompressionType type,
        /*[in]*/ long width,
        /*[in]*/ long height,
        /*[in]*/ long channels,
        /*[in]*/ long Size,
        /*[in]*/ unsigned char * pInData,
        /*[out]*/ unsigned char * pOutBuff ) = 0;
      virtual HRESULT __stdcall put_CompressionQuality (
        /*[in]*/ long quality ) = 0;
      virtual HRESULT __stdcall get_CompressionQuality (
        /*[out,retval]*/ long * quality ) = 0;
      virtual HRESULT __stdcall FreeCompressData (
        /*[in]*/ unsigned char * pInData ) = 0;
      virtual HRESULT __stdcall get_BSQ (
        /*[out,retval]*/ VARIANT_BOOL * pBSQ ) = 0;
      virtual HRESULT __stdcall put_BSQ (
        /*[in]*/ VARIANT_BOOL pBSQ ) = 0;
};

struct __declspec(uuid("650fc137-7869-4414-a511-f7e176d3301e"))
IGlobeCompression : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall InitGlobeCompression ( ) = 0;
      virtual HRESULT __stdcall EndGlobeCompression ( ) = 0;
      virtual HRESULT __stdcall GlobeToJPEG (
        /*[in]*/ long inputSize,
        /*[in]*/ unsigned char * pSrcData,
        /*[in]*/ long quality,
        /*[out]*/ long * pOutputSize,
        /*[out]*/ unsigned char * pDestData ) = 0;
      virtual HRESULT __stdcall GlobeFromJPEG (
        /*[in]*/ long inputSize,
        /*[in]*/ unsigned char * pSrcData,
        /*[in]*/ VARIANT_BOOL use5551,
        /*[out]*/ long * pOutputSize,
        /*[out]*/ unsigned char * pDestData ) = 0;
};

struct __declspec(uuid("c24f654b-b929-443b-9fa1-a2a83bbce14b"))
IJobDefinition : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RequestFormat (
        /*[out,retval]*/ enum esriAGSInternetMessageFormat * pVal ) = 0;
      virtual HRESULT __stdcall get_StringRequest (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_StringRequest (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_BinaryRequest (
        /*[out,retval]*/ SAFEARRAY * * ppVal ) = 0;
      virtual HRESULT __stdcall put_BinaryRequest (
        /*[in]*/ SAFEARRAY * ppVal ) = 0;
      virtual HRESULT __stdcall get_Capabilities (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Capabilities (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_IsRESTFormat (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall GetRESTRequest (
        /*[out]*/ BSTR * pResourceName,
        /*[out]*/ BSTR * pRperationName,
        /*[out]*/ BSTR * pRperationInput,
        /*[out]*/ BSTR * pOutputFormat,
        /*[out]*/ BSTR * pRequestProperties ) = 0;
      virtual HRESULT __stdcall SetRESTRequest (
        /*[in]*/ BSTR resourceName,
        /*[in]*/ BSTR operationName,
        /*[in]*/ BSTR operationInput,
        /*[in]*/ BSTR outputFormat,
        /*[in]*/ BSTR requestProperties ) = 0;
};

struct __declspec(uuid("4d919e2d-f6c1-47ba-ba1f-6f2c29a86e22"))
IJobResults : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ResultsFormat (
        /*[out,retval]*/ enum esriAGSInternetMessageFormat * pVal ) = 0;
      virtual HRESULT __stdcall get_StringResults (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_StringResults (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_BinaryResults (
        /*[out,retval]*/ SAFEARRAY * * ppVal ) = 0;
      virtual HRESULT __stdcall put_BinaryResults (
        /*[in]*/ SAFEARRAY * ppVal ) = 0;
      virtual HRESULT __stdcall get_IsRESTFormat (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall GetRESTResults (
        /*[out]*/ BSTR * pVal,
        /*[out]*/ SAFEARRAY * * ppVal ) = 0;
      virtual HRESULT __stdcall SetRESTResults (
        /*[in]*/ BSTR Val,
        /*[in]*/ SAFEARRAY * pVal ) = 0;
};

struct __declspec(uuid("08125e66-7bf8-4618-87f2-77d9e364f35a"))
IJobMessages : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Element (
        /*[in]*/ long index,
        /*[out,retval]*/ struct IJobMessage * * ppMsg ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ struct IJobMessage * pMsg ) = 0;
      virtual HRESULT __stdcall Insert (
        /*[in]*/ long index,
        /*[in]*/ struct IJobMessage * pMsg ) = 0;
      virtual HRESULT __stdcall Remove (
        /*[in]*/ long index ) = 0;
      virtual HRESULT __stdcall RemoveAll ( ) = 0;
};

struct __declspec(uuid("4a106e7e-d1e7-420f-aecf-cbc867a7ff17"))
IJobInfo : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * desc ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR desc ) = 0;
      virtual HRESULT __stdcall get_SubmittedBy (
        /*[out,retval]*/ BSTR * UserName ) = 0;
      virtual HRESULT __stdcall put_SubmittedBy (
        /*[in]*/ BSTR UserName ) = 0;
      virtual HRESULT __stdcall get_SubmittingTime (
        /*[out,retval]*/ DATE * Time ) = 0;
      virtual HRESULT __stdcall put_SubmittingTime (
        /*[in]*/ DATE Time ) = 0;
      virtual HRESULT __stdcall get_StartingTime (
        /*[out,retval]*/ DATE * Time ) = 0;
      virtual HRESULT __stdcall put_StartingTime (
        /*[in]*/ DATE Time ) = 0;
      virtual HRESULT __stdcall get_EndingTime (
        /*[out,retval]*/ DATE * Time ) = 0;
      virtual HRESULT __stdcall put_EndingTime (
        /*[in]*/ DATE Time ) = 0;
};

enum __declspec(uuid("e0a02db1-34d2-4438-b1ae-3bb46ba6287f"))
esriJobStatus
{
    esriJobNew = 0,
    esriJobSubmitted = 1,
    esriJobWaiting = 2,
    esriJobExecuting = 3,
    esriJobSucceeded = 4,
    esriJobFailed = 5,
    esriJobTimedOut = 6,
    esriJobCancelling = 7,
    esriJobCancelled = 8,
    esriJobDeleting = 9,
    esriJobDeleted = 10
};

struct __declspec(uuid("72ad9072-face-4ec8-a7fd-23b41e58e2b7"))
IJob : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_JobID (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_JobDefinition (
        /*[out,retval]*/ struct IJobDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall put_JobDefinition (
        /*[in]*/ struct IJobDefinition * ppVal ) = 0;
      virtual HRESULT __stdcall get_JobInfo (
        /*[out,retval]*/ struct IJobInfo * * ppVal ) = 0;
      virtual HRESULT __stdcall put_JobInfo (
        /*[in]*/ struct IJobInfo * ppVal ) = 0;
      virtual HRESULT __stdcall get_JobResults (
        /*[out,retval]*/ struct IJobResults * * ppVal ) = 0;
      virtual HRESULT __stdcall put_JobResults (
        /*[in]*/ struct IJobResults * ppVal ) = 0;
      virtual HRESULT __stdcall get_JobMessages (
        /*[out,retval]*/ struct IJobMessages * * ppVal ) = 0;
      virtual HRESULT __stdcall put_JobMessages (
        /*[in]*/ struct IJobMessages * ppVal ) = 0;
      virtual HRESULT __stdcall get_JobStatus (
        /*[out,retval]*/ enum esriJobStatus * pVal ) = 0;
      virtual HRESULT __stdcall put_JobStatus (
        /*[in]*/ enum esriJobStatus pVal ) = 0;
      virtual HRESULT __stdcall get_JobDirectory (
        /*[out,retval]*/ BSTR * pVal ) = 0;
};

struct __declspec(uuid("e65c015e-e176-4419-96bf-4c0e45b3db7d"))
IJobRegistry : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Init (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall RegisterJob (
        /*[in]*/ BSTR JobID,
        /*[in]*/ BSTR jobDir ) = 0;
      virtual HRESULT __stdcall UnregisterJob (
        /*[in]*/ BSTR JobID ) = 0;
      virtual HRESULT __stdcall GetJobDirectory (
        /*[in]*/ BSTR JobID,
        /*[out,retval]*/ BSTR * Path ) = 0;
};

struct __declspec(uuid("2c2d291a-51fd-4bfd-99a5-db889fcee9f2"))
IJobFilter : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_JobStatuses (
        /*[out,retval]*/ struct ILongArray * * ppStatusArray ) = 0;
      virtual HRESULT __stdcall putref_JobStatuses (
        /*[in]*/ struct ILongArray * ppStatusArray ) = 0;
};

struct __declspec(uuid("5c395aac-ebbc-4ffd-bb1e-c99858e168e0"))
IJobCatalog : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Init (
        /*[in]*/ BSTR root,
        /*[in]*/ BSTR JobProcessorName,
        /*[in]*/ BSTR JobProcessorType ) = 0;
      virtual HRESULT __stdcall put_JobRegistry (
        /*[in]*/ struct IJobRegistry * _arg1 ) = 0;
      virtual HRESULT __stdcall CreateJob (
        /*[out,retval]*/ struct IJob * * ppJob ) = 0;
      virtual HRESULT __stdcall CreateJobFilter (
        /*[out,retval]*/ struct IJobFilter * * ppFilter ) = 0;
      virtual HRESULT __stdcall GetJob (
        /*[in]*/ BSTR JobID,
        /*[in]*/ VARIANT_BOOL bLock,
        /*[out,retval]*/ struct IJob * * ppJob ) = 0;
      virtual HRESULT __stdcall RemoveJob (
        /*[in]*/ BSTR JobID ) = 0;
      virtual HRESULT __stdcall GetJobIDs (
        /*[in]*/ struct IJobFilter * pFilter,
        /*[out,retval]*/ struct IEnumBSTR * * ppJobIDs ) = 0;
};

struct __declspec(uuid("512e6a8a-3c50-4dec-b681-7254fede4109"))
JobMessage;
    // [ default ] interface IUnknown
    // interface IJobMessage
    // interface IXMLSerialize
    // interface IPersistStream

struct __declspec(uuid("f3a6825c-9780-4265-89a1-ae35f7a3bb56"))
JobMessages;
    // [ default ] interface IUnknown
    // interface IJobMessages
    // interface IXMLSerialize
    // interface IPersistStream

struct __declspec(uuid("52b13a57-aa06-49be-a4d0-3cddac943ebe"))
IESRIScriptEngine : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Language (
        /*[out,retval]*/ BSTR * pLanguage ) = 0;
      virtual HRESULT __stdcall put_Language (
        /*[in]*/ BSTR pLanguage ) = 0;
      virtual HRESULT __stdcall get_AllowUI (
        /*[out,retval]*/ VARIANT_BOOL * pAllowUI ) = 0;
      virtual HRESULT __stdcall put_AllowUI (
        /*[in]*/ VARIANT_BOOL pAllowUI ) = 0;
      virtual HRESULT __stdcall AddCode (
        /*[in]*/ BSTR scriptCode ) = 0;
      virtual HRESULT __stdcall Run (
        /*[in]*/ BSTR procedureName,
        /*[in]*/ SAFEARRAY * * pParameters,
        /*[out,retval]*/ VARIANT * pResult ) = 0;
      virtual HRESULT __stdcall get_Error (
        /*[in]*/ long * pLineNumber,
        /*[in]*/ long * pCharacterPosition,
        /*[in]*/ BSTR * pErrorSourceCode,
        /*[in]*/ BSTR * pErrorDescription ) = 0;
};

enum __declspec(uuid("2e66cb37-79fa-4599-a4dc-842bf50557e5"))
scriptEngineError
{
    SCRIPTENGINE_E_CANNOT_COCREATE_VBSCRIPT_CONTROL = -2147219711,
    SCRIPTENGINE_E_CANNOT_COCREATE_JSCRIPT_CONTROL = -2147219710
};

struct __declspec(uuid("8c82d73f-a962-43f7-a377-26557c3143df"))
ESRIScriptEngine;
    // [ default ] interface IUnknown
    // interface IESRIScriptEngine

struct __declspec(uuid("eea70515-fa6b-4dee-ab79-d7935bf3a838"))
IJSONObject : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall ParseString (
        /*[in]*/ BSTR json ) = 0;
      virtual HRESULT __stdcall ParseJSON (
        /*[in]*/ struct IJSONReader * pReader ) = 0;
      virtual HRESULT __stdcall get_CaseSensitiveNames (
        /*[out,retval]*/ VARIANT_BOOL * case_sensitive ) = 0;
      virtual HRESULT __stdcall put_CaseSensitiveNames (
        /*[in]*/ VARIANT_BOOL case_sensitive ) = 0;
      virtual HRESULT __stdcall MemberExists (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * exists ) = 0;
      virtual HRESULT __stdcall IsValueNull (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsNull ) = 0;
      virtual HRESULT __stdcall get_MemberCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetMemberAt (
        /*[in]*/ long index,
        /*[out]*/ BSTR * Name,
        /*[out]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall TryGetValue (
        /*[in]*/ BSTR Name,
        /*[out]*/ VARIANT * Value,
        /*[out,retval]*/ VARIANT_BOOL * success ) = 0;
      virtual HRESULT __stdcall TryGetValueAsDate (
        /*[in]*/ BSTR Name,
        /*[out]*/ DATE * Value,
        /*[out,retval]*/ VARIANT_BOOL * success ) = 0;
      virtual HRESULT __stdcall TryGetValueAsBoolean (
        /*[in]*/ BSTR Name,
        /*[out]*/ VARIANT_BOOL * Value,
        /*[out,retval]*/ VARIANT_BOOL * success ) = 0;
      virtual HRESULT __stdcall TryGetValueAsLong (
        /*[in]*/ BSTR Name,
        /*[out]*/ long * Value,
        /*[out,retval]*/ VARIANT_BOOL * success ) = 0;
      virtual HRESULT __stdcall TryGetValueAsDouble (
        /*[in]*/ BSTR Name,
        /*[out]*/ double * Value,
        /*[out,retval]*/ VARIANT_BOOL * success ) = 0;
      virtual HRESULT __stdcall TryGetValueAsString (
        /*[in]*/ BSTR Name,
        /*[out]*/ BSTR * Value,
        /*[out,retval]*/ VARIANT_BOOL * success ) = 0;
      virtual HRESULT __stdcall TryGetValueAsObject (
        /*[in]*/ BSTR Name,
        /*[out]*/ struct IJSONObject * * Value,
        /*[out,retval]*/ VARIANT_BOOL * success ) = 0;
      virtual HRESULT __stdcall TryGetValueAsArray (
        /*[in]*/ BSTR Name,
        /*[out]*/ struct IJSONArray * * Value,
        /*[out,retval]*/ VARIANT_BOOL * success ) = 0;
      virtual HRESULT __stdcall AddDate (
        /*[in]*/ BSTR Name,
        /*[in]*/ DATE Value ) = 0;
      virtual HRESULT __stdcall AddBoolean (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall AddLong (
        /*[in]*/ BSTR Name,
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall AddDouble (
        /*[in]*/ BSTR Name,
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall AddString (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall AddNull (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall AddJSONObject (
        /*[in]*/ BSTR Name,
        /*[in]*/ struct IJSONObject * Value ) = 0;
      virtual HRESULT __stdcall AddJSONArray (
        /*[in]*/ BSTR Name,
        /*[in]*/ struct IJSONArray * Value ) = 0;
      virtual HRESULT __stdcall CreateMemberObject (
        /*[in]*/ BSTR Name,
        /*[out]*/ struct IJSONObject * * Value ) = 0;
      virtual HRESULT __stdcall CreateMemberArray (
        /*[in]*/ BSTR Name,
        /*[out]*/ struct IJSONArray * * Value ) = 0;
      virtual HRESULT __stdcall MakeValueNull (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall ToJSONString (
        /*[in]*/ struct IPropertySet * props,
        /*[out,retval]*/ BSTR * outStr ) = 0;
      virtual HRESULT __stdcall ToJSON (
        /*[in]*/ BSTR objectName,
        /*[in]*/ struct IJSONWriter * pWriter ) = 0;
      virtual HRESULT __stdcall RemoveMember (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall ClearAll ( ) = 0;
      virtual HRESULT __stdcall AddDoubleEx (
        /*[in]*/ BSTR Name,
        /*[in]*/ double Value,
        /*[in]*/ long precision ) = 0;
};

struct __declspec(uuid("4abe3bc0-6d3c-4fba-9c55-c9ac7c32d9b1"))
IJSONArray : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall ParseString (
        /*[in]*/ BSTR json ) = 0;
      virtual HRESULT __stdcall ParseJSON (
        /*[in]*/ struct IJSONReader * pReader ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[in]*/ long index,
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall IsValueNull (
        /*[in]*/ long index,
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall TryGetValueAsDate (
        /*[in]*/ long index,
        /*[out]*/ DATE * Value,
        /*[out,retval]*/ VARIANT_BOOL * success ) = 0;
      virtual HRESULT __stdcall TryGetValueAsBoolean (
        /*[in]*/ long index,
        /*[out]*/ VARIANT_BOOL * Value,
        /*[out,retval]*/ VARIANT_BOOL * success ) = 0;
      virtual HRESULT __stdcall TryGetValueAsLong (
        /*[in]*/ long index,
        /*[out]*/ long * Value,
        /*[out,retval]*/ VARIANT_BOOL * success ) = 0;
      virtual HRESULT __stdcall TryGetValueAsDouble (
        /*[in]*/ long index,
        /*[out]*/ double * Value,
        /*[out,retval]*/ VARIANT_BOOL * success ) = 0;
      virtual HRESULT __stdcall TryGetValueAsString (
        /*[in]*/ long index,
        /*[out]*/ BSTR * Value,
        /*[out,retval]*/ VARIANT_BOOL * success ) = 0;
      virtual HRESULT __stdcall TryGetValueAsObject (
        /*[in]*/ long index,
        /*[out]*/ struct IJSONObject * * Value,
        /*[out,retval]*/ VARIANT_BOOL * success ) = 0;
      virtual HRESULT __stdcall TryGetValueAsArray (
        /*[in]*/ long index,
        /*[out]*/ struct IJSONArray * * Value,
        /*[out,retval]*/ VARIANT_BOOL * success ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall AddDate (
        /*[in]*/ DATE Value ) = 0;
      virtual HRESULT __stdcall AddBoolean (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall AddLong (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall AddDouble (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall AddString (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall AddNull ( ) = 0;
      virtual HRESULT __stdcall AddJSONObject (
        /*[in]*/ struct IJSONObject * Value ) = 0;
      virtual HRESULT __stdcall AddJSONArray (
        /*[in]*/ struct IJSONArray * Value ) = 0;
      virtual HRESULT __stdcall CreateMemberObject (
        /*[out]*/ struct IJSONObject * * Value ) = 0;
      virtual HRESULT __stdcall CreateMemberArray (
        /*[out]*/ struct IJSONArray * * Value ) = 0;
      virtual HRESULT __stdcall ToJSONString (
        /*[in]*/ struct IPropertySet * props,
        /*[out,retval]*/ BSTR * outStr ) = 0;
      virtual HRESULT __stdcall ToJSON (
        /*[in]*/ BSTR objectName,
        /*[in]*/ struct IJSONWriter * pWriter ) = 0;
      virtual HRESULT __stdcall RemoveValue (
        /*[in]*/ long index ) = 0;
      virtual HRESULT __stdcall ClearAll ( ) = 0;
      virtual HRESULT __stdcall AddDoubleEx (
        /*[in]*/ double Value,
        /*[in]*/ long precision ) = 0;
};

struct __declspec(uuid("2853ca57-ae88-4b5d-ada3-4cf6f938a0e0"))
IRESTOperation : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Parameters (
        /*[out,retval]*/ BSTR * Parameters ) = 0;
      virtual HRESULT __stdcall get_OutputFormats (
        /*[out,retval]*/ BSTR * OutputFormats ) = 0;
      virtual HRESULT __stdcall get_RequiredCapability (
        /*[out,retval]*/ BSTR * capability ) = 0;
      virtual HRESULT __stdcall get_PostOnly (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall ToJSONObject (
        /*[out,retval]*/ struct IJSONObject * * pObj ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall put_Parameters (
        /*[in]*/ BSTR Parameters ) = 0;
      virtual HRESULT __stdcall put_OutputFormats (
        /*[in]*/ BSTR OutputFormats ) = 0;
      virtual HRESULT __stdcall put_RequiredCapability (
        /*[in]*/ BSTR capability ) = 0;
      virtual HRESULT __stdcall put_PostOnly (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("daf01fbe-a62e-4924-86b3-e257006a92ed"))
IEnumRESTOperation : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Next (
        /*[out,retval]*/ struct IRESTOperation * * ppOp ) = 0;
};

struct __declspec(uuid("5d203d0e-d444-4201-ba8f-4f60fe0e4998"))
IRESTCallback : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall HandleResource (
        /*[in]*/ BSTR Capabilities,
        /*[in]*/ BSTR resourceName,
        /*[in]*/ struct IPropertySet * boundVariables,
        /*[in]*/ BSTR inputJSON,
        /*[in]*/ BSTR outputFormat,
        /*[in]*/ struct IJSONObject * requestProps,
        /*[out]*/ struct IJSONObject * * responseProps,
        /*[out]*/ VARIANT * outputData ) = 0;
      virtual HRESULT __stdcall HandleOperation (
        /*[in]*/ BSTR Capabilities,
        /*[in]*/ BSTR resourceName,
        /*[in]*/ BSTR operationName,
        /*[in]*/ struct IPropertySet * boundVariables,
        /*[in]*/ BSTR inputJSON,
        /*[in]*/ BSTR outputFormat,
        /*[in]*/ struct IJSONObject * requestProps,
        /*[out]*/ struct IJSONObject * * responseProps,
        /*[out]*/ VARIANT * outputData ) = 0;
};

struct __declspec(uuid("f6cba4a3-bc48-47bc-9f15-2a561b9e6c71"))
ITimeReference : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TimeZoneInfo (
        /*[out,retval]*/ struct ITimeZoneInfo * * timeZone ) = 0;
      virtual HRESULT __stdcall putref_TimeZoneInfo (
        /*[in]*/ struct ITimeZoneInfo * timeZone ) = 0;
      virtual HRESULT __stdcall get_RespectsDaylightSavingTime (
        /*[out,retval]*/ VARIANT_BOOL * RespectsDaylightSavingTime ) = 0;
      virtual HRESULT __stdcall put_RespectsDaylightSavingTime (
        /*[in]*/ VARIANT_BOOL RespectsDaylightSavingTime ) = 0;
      virtual HRESULT __stdcall get_RespectsDynamicAdjustmentRules (
        /*[out,retval]*/ VARIANT_BOOL * RespectsDynamicAdjustmentRules ) = 0;
      virtual HRESULT __stdcall put_RespectsDynamicAdjustmentRules (
        /*[in]*/ VARIANT_BOOL RespectsDynamicAdjustmentRules ) = 0;
      virtual HRESULT __stdcall Project (
        /*[in]*/ struct ITime * Time,
        /*[in]*/ struct ITimeReference * otherTimeReference ) = 0;
      virtual HRESULT __stdcall ProjectToUTC (
        /*[in]*/ struct ITime * Time ) = 0;
      virtual HRESULT __stdcall ProjectFromUTC (
        /*[in]*/ struct ITime * Time ) = 0;
};

struct __declspec(uuid("66810d21-8de0-44ee-b26e-465ac09f161f"))
ITime : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Year (
        /*[out,retval]*/ short * Year ) = 0;
      virtual HRESULT __stdcall put_Year (
        /*[in]*/ short Year ) = 0;
      virtual HRESULT __stdcall get_Month (
        /*[out,retval]*/ short * Month ) = 0;
      virtual HRESULT __stdcall put_Month (
        /*[in]*/ short Month ) = 0;
      virtual HRESULT __stdcall get_Day (
        /*[out,retval]*/ short * Day ) = 0;
      virtual HRESULT __stdcall put_Day (
        /*[in]*/ short Day ) = 0;
      virtual HRESULT __stdcall get_Hour (
        /*[out,retval]*/ short * Hour ) = 0;
      virtual HRESULT __stdcall put_Hour (
        /*[in]*/ short Hour ) = 0;
      virtual HRESULT __stdcall get_Minute (
        /*[out,retval]*/ short * Minute ) = 0;
      virtual HRESULT __stdcall put_Minute (
        /*[in]*/ short Minute ) = 0;
      virtual HRESULT __stdcall get_Second (
        /*[out,retval]*/ short * Second ) = 0;
      virtual HRESULT __stdcall put_Second (
        /*[in]*/ short Second ) = 0;
      virtual HRESULT __stdcall get_Nanoseconds (
        /*[out,retval]*/ long * Nanoseconds ) = 0;
      virtual HRESULT __stdcall put_Nanoseconds (
        /*[in]*/ long Nanoseconds ) = 0;
      virtual HRESULT __stdcall QueryJulianDayNumber (
        /*[out,retval]*/ long * julianDayNumber ) = 0;
      virtual HRESULT __stdcall SetJulianDayNumber (
        /*[in]*/ long julianDayNumber ) = 0;
      virtual HRESULT __stdcall QueryDayFraction (
        /*[out,retval]*/ double * dayFraction ) = 0;
      virtual HRESULT __stdcall SetDayFraction (
        /*[in]*/ double dayFraction ) = 0;
      virtual HRESULT __stdcall QueryNanosecondsSinceMidnight (
        /*[out,retval]*/ __int64 * nanosecondsSinceMidnight ) = 0;
      virtual HRESULT __stdcall SetNanosecondsSinceMidnight (
        /*[in]*/ __int64 nanosecondsSinceMidnight ) = 0;
      virtual HRESULT __stdcall SubtractTime (
        /*[in]*/ struct ITime * Time,
        /*[out,retval]*/ struct ITimeDuration * * TimeDuration ) = 0;
      virtual HRESULT __stdcall SnapToEndOfMonth ( ) = 0;
      virtual HRESULT __stdcall ToUTC ( ) = 0;
      virtual HRESULT __stdcall ToLocal ( ) = 0;
      virtual HRESULT __stdcall QueryTimeString (
        /*[in]*/ enum esriTimeStringFormat timeStringFormat,
        /*[out,retval]*/ BSTR * timeString ) = 0;
      virtual HRESULT __stdcall SetFromTimeString (
        /*[in]*/ enum esriTimeStringFormat timeStringFormat,
        /*[in]*/ BSTR timeString ) = 0;
      virtual HRESULT __stdcall QueryTimeStringCurrentLocale (
        /*[in]*/ enum esriTimeLocaleFormat timeLocaleFormat,
        /*[out,retval]*/ BSTR * timeString ) = 0;
      virtual HRESULT __stdcall SetFromTimeStringCurrentLocale (
        /*[in]*/ enum esriTimeLocaleFormat timeLocaleFormat,
        /*[in]*/ BSTR timeString ) = 0;
      virtual HRESULT __stdcall QueryTimeStringCustom (
        /*[in]*/ BSTR timeStringFormat,
        /*[in]*/ long LocaleID,
        /*[in]*/ BSTR amSymbol,
        /*[in]*/ BSTR pmSymbol,
        /*[out,retval]*/ BSTR * timeString ) = 0;
      virtual HRESULT __stdcall SetFromTimeStringCustom (
        /*[in]*/ BSTR timeStringFormat,
        /*[in]*/ long LocaleID,
        /*[in]*/ BSTR amSymbol,
        /*[in]*/ BSTR pmSymbol,
        /*[in]*/ BSTR timeString ) = 0;
      virtual HRESULT __stdcall QueryXMLTimeString (
        /*[in]*/ struct ITimeReference * TimeReference,
        /*[out,retval]*/ BSTR * xmlTimeString ) = 0;
      virtual HRESULT __stdcall SetFromXMLTimeString (
        /*[in]*/ BSTR xmlTimeString,
        /*[out,retval]*/ long * timeZoneBiasFromUTC ) = 0;
      virtual HRESULT __stdcall QueryIntegerTime (
        /*[in]*/ enum esriIntegerTimeFormat integerTimeFormat,
        /*[out,retval]*/ __int64 * integerTime ) = 0;
      virtual HRESULT __stdcall SetFromIntegerTime (
        /*[in]*/ enum esriIntegerTimeFormat integerTimeFormat,
        /*[in]*/ __int64 integerTime ) = 0;
      virtual HRESULT __stdcall SetFromObject (
        /*[in]*/ VARIANT Object ) = 0;
      virtual HRESULT __stdcall QueryOleTime (
        /*[out,retval]*/ DATE * oleTime ) = 0;
      virtual HRESULT __stdcall SetFromOleTime (
        /*[in]*/ DATE oleTime ) = 0;
      virtual HRESULT __stdcall QueryGregorianTime (
        /*[out,retval]*/ WKSDateTime * gregorianTime ) = 0;
      virtual HRESULT __stdcall SetFromGregorianTime (
        /*[in]*/ WKSDateTime * gregorianTime ) = 0;
      virtual HRESULT __stdcall QueryTicks (
        /*[out,retval]*/ __int64 * ticks ) = 0;
      virtual HRESULT __stdcall SetFromTicks (
        /*[in]*/ __int64 ticks ) = 0;
      virtual HRESULT __stdcall SetFromCurrentLocalTime ( ) = 0;
      virtual HRESULT __stdcall SetFromCurrentUtcTime ( ) = 0;
      virtual HRESULT __stdcall Compare (
        /*[in]*/ struct ITime * otherTime,
        /*[out,retval]*/ int * Result ) = 0;
};

struct __declspec(uuid("30eae8e1-26b2-4e57-a3f2-8ae7c7db2455"))
ITime2 : ITime
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DayOfWeek (
        /*[out,retval]*/ short * dayNumber ) = 0;
      virtual HRESULT __stdcall get_DayOfYear (
        /*[out,retval]*/ short * dayNumber ) = 0;
      virtual HRESULT __stdcall get_WeekOfMonth (
        /*[in]*/ short startDayOfWeek,
        /*[out,retval]*/ short * weekNumber ) = 0;
      virtual HRESULT __stdcall get_WeekOfYear (
        /*[in]*/ short startDayOfWeek,
        /*[out,retval]*/ short * weekNumber ) = 0;
};

struct __declspec(uuid("4ce86e17-e819-4c72-bd98-e55ae59b0317"))
ITimeValue : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TimeReference (
        /*[out,retval]*/ struct ITimeReference * * TimeReference ) = 0;
      virtual HRESULT __stdcall putref_TimeReference (
        /*[in]*/ struct ITimeReference * TimeReference ) = 0;
      virtual HRESULT __stdcall Project (
        /*[in]*/ struct ITimeReference * TimeReference ) = 0;
      virtual HRESULT __stdcall ProjectToUTC ( ) = 0;
      virtual HRESULT __stdcall ProjectFromUTC ( ) = 0;
};

struct __declspec(uuid("bd724b95-018f-4367-9883-9560d92293a7"))
ITimeExtent : ITimeValue
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_StartTime (
        /*[out,retval]*/ struct ITime * * StartTime ) = 0;
      virtual HRESULT __stdcall put_StartTime (
        /*[in]*/ struct ITime * StartTime ) = 0;
      virtual HRESULT __stdcall get_EndTime (
        /*[out,retval]*/ struct ITime * * EndTime ) = 0;
      virtual HRESULT __stdcall put_EndTime (
        /*[in]*/ struct ITime * EndTime ) = 0;
      virtual HRESULT __stdcall get_Empty (
        /*[out,retval]*/ VARIANT_BOOL * Empty ) = 0;
      virtual HRESULT __stdcall put_Empty (
        /*[in]*/ VARIANT_BOOL Empty ) = 0;
      virtual HRESULT __stdcall SetExtent (
        /*[in]*/ struct ITime * StartTime,
        /*[in]*/ struct ITime * EndTime ) = 0;
      virtual HRESULT __stdcall QueryTimeDuration (
        /*[out,retval]*/ struct ITimeDuration * * TimeDuration ) = 0;
      virtual HRESULT __stdcall Union (
        /*[in]*/ struct ITimeValue * otherTimeValue ) = 0;
      virtual HRESULT __stdcall Intersect (
        /*[in]*/ struct ITimeValue * otherTimeValue ) = 0;
};

struct __declspec(uuid("81899ee9-2e12-4e6c-94f1-2ba31d3cdbc5"))
ITimeInstant : ITimeValue
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Time (
        /*[out,retval]*/ struct ITime * * Time ) = 0;
      virtual HRESULT __stdcall put_Time (
        /*[in]*/ struct ITime * Time ) = 0;
};

struct __declspec(uuid("1b4768dd-508e-4946-ab04-e042dfceb29f"))
ITimeZoneFactory : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall CreateTimeZoneInfoFromWindowsID (
        /*[in]*/ BSTR WindowsID,
        /*[out,retval]*/ struct ITimeZoneInfo * * TimeZoneInfo ) = 0;
      virtual HRESULT __stdcall CreateTimeReferenceFromWindowsID (
        /*[in]*/ BSTR WindowsID,
        /*[out,retval]*/ struct ITimeReference * * TimeReference ) = 0;
      virtual HRESULT __stdcall QueryTimeZoneWindowsIDFromOlsonID (
        /*[in]*/ BSTR olsonID,
        /*[out,retval]*/ BSTR * WindowsID ) = 0;
      virtual HRESULT __stdcall QueryTimeZoneOlsonIDsFromWindowsID (
        /*[in]*/ BSTR WindowsID,
        /*[out,retval]*/ SAFEARRAY * * olsonIDs ) = 0;
      virtual HRESULT __stdcall QueryLocalTimeZoneWindowsID (
        /*[out,retval]*/ BSTR * localTimeZoneWindowsID ) = 0;
      virtual HRESULT __stdcall get_FirstTimeZoneWindowsID (
        /*[out,retval]*/ BSTR * FirstTimeZoneWindowsID ) = 0;
      virtual HRESULT __stdcall get_NextTimeZoneWindowsID (
        /*[in]*/ BSTR currentTimeZoneWindowsID,
        /*[out,retval]*/ BSTR * NextTimeZoneWindowsID ) = 0;
      virtual HRESULT __stdcall get_FirstLocaleID (
        /*[out,retval]*/ long * FirstLocaleID ) = 0;
      virtual HRESULT __stdcall get_NextLocaleID (
        /*[in]*/ long currenteLocaleID,
        /*[out,retval]*/ long * NextLocaleID ) = 0;
      virtual HRESULT __stdcall CreateLocaleInfoFromLocaleID (
        /*[in]*/ long LocaleID,
        /*[out,retval]*/ struct ILocaleInfo * * LocaleInfo ) = 0;
      virtual HRESULT __stdcall IsValidTimeZoneWindowsID (
        /*[in]*/ BSTR WindowsID,
        /*[out,retval]*/ VARIANT_BOOL * isValid ) = 0;
      virtual HRESULT __stdcall IsValidLocaleID (
        /*[in]*/ long LocaleID,
        /*[out,retval]*/ VARIANT_BOOL * isValid ) = 0;
};

struct __declspec(uuid("4caa06be-7199-40b3-adb6-78bae35d5227"))
ITimeZoneFactory2 : ITimeZoneFactory
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall QueryLocalTimeReference (
        /*[in]*/ VARIANT_BOOL exactMatch,
        /*[out,retval]*/ struct ITimeReference * * localTimeReference ) = 0;
      virtual HRESULT __stdcall ReloadTimeZones (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall SaveTimeZones (
        /*[in]*/ BSTR FileName ) = 0;
};

struct __declspec(uuid("7cffa76a-6552-4516-8599-98225065249e"))
ITimeRelationalOperator : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Equals (
        /*[in]*/ struct ITimeValue * otherTimeValue,
        /*[out,retval]*/ VARIANT_BOOL * Equals ) = 0;
      virtual HRESULT __stdcall Disjoint (
        /*[in]*/ struct ITimeValue * otherTimeValue,
        /*[out,retval]*/ VARIANT_BOOL * Disjoint ) = 0;
      virtual HRESULT __stdcall Touches (
        /*[in]*/ struct ITimeValue * otherTimeValue,
        /*[out,retval]*/ VARIANT_BOOL * Touches ) = 0;
      virtual HRESULT __stdcall Within (
        /*[in]*/ struct ITimeValue * otherTimeValue,
        /*[out,retval]*/ VARIANT_BOOL * Within ) = 0;
      virtual HRESULT __stdcall Contains (
        /*[in]*/ struct ITimeValue * otherTimeValue,
        /*[out,retval]*/ VARIANT_BOOL * Contains ) = 0;
};

struct __declspec(uuid("b5561ea3-2950-4e21-9e4f-b1003b2a1baf"))
IRESTResource : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_IsCollection (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall get_IsDefaultCollection (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall get_IsStatic (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall get_SupportsETag (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall get_RequiredCapability (
        /*[out,retval]*/ BSTR * capability ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall put_IsCollection (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall put_IsDefaultCollection (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall put_IsStatic (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall put_SupportsETag (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall put_RequiredCapability (
        /*[in]*/ BSTR capability ) = 0;
      virtual HRESULT __stdcall ToJSONObject (
        /*[out,retval]*/ struct IJSONObject * * pObj ) = 0;
      virtual HRESULT __stdcall AddResource (
        /*[in]*/ struct IRESTResource * r ) = 0;
      virtual HRESULT __stdcall AddOperation (
        /*[in]*/ struct IRESTOperation * o ) = 0;
      virtual HRESULT __stdcall FindChildResource (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IRESTResource * * ppObj ) = 0;
      virtual HRESULT __stdcall FindChildOperation (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IRESTOperation * * ppObj ) = 0;
      virtual HRESULT __stdcall GetResources (
        /*[out,retval]*/ struct IEnumRESTResource * * ppEnum ) = 0;
      virtual HRESULT __stdcall GetOperations (
        /*[out,retval]*/ struct IEnumRESTOperation * * ppEnum ) = 0;
};

struct __declspec(uuid("7502c3ec-249d-4616-babb-da81f7b5c71e"))
IEnumRESTResource : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Next (
        /*[out,retval]*/ struct IRESTResource * * ppRes ) = 0;
};

struct __declspec(uuid("1538e2dc-8192-412e-a801-2b8655492aae"))
IRESTDispatcher : IRESTRequestHandler
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Init (
        /*[in]*/ struct IRESTResource * root,
        struct IRESTCallback * handler ) = 0;
};

//
// Named GUID constants initializations
//

extern "C" const GUID __declspec(selectany) LIBID_esriSystem =
    {0x5e1f7bc3,0x67c5,0x4aee,{0x8e,0xc6,0xc4,0xb7,0x3a,0xac,0x42,0xed}};
extern "C" const GUID __declspec(selectany) IID_IUID =
    {0x1714d59b,0xfb22,0x11d1,{0x94,0xa2,0x08,0x00,0x09,0xee,0xbe,0xcb}};
extern "C" const GUID __declspec(selectany) IID_IClassifyGEN =
    {0xcba26148,0xcd2c,0x44ac,{0xbb,0xf5,0xb2,0x28,0xb5,0x5a,0x19,0x8d}};
extern "C" const GUID __declspec(selectany) IID_IByteSwapStreamIO =
    {0xe718734d,0xd494,0x4e44,{0x92,0xc8,0xe2,0x21,0x2b,0x4a,0x2f,0x8d}};
extern "C" const GUID __declspec(selectany) IID_IProductInstalled =
    {0x673b47dc,0x3cdf,0x4131,{0xba,0x1b,0x52,0x61,0xcd,0x17,0x1e,0xf7}};
extern "C" const GUID __declspec(selectany) IID_IAoInitialize =
    {0x9ab6a638,0xaca8,0x4820,{0x83,0x0c,0x46,0x3e,0xa1,0x1c,0x87,0x22}};
extern "C" const GUID __declspec(selectany) IID_IAuthorizeLicense =
    {0x46ebbb64,0x19b8,0x437a,{0x8d,0xf4,0x43,0x78,0xd8,0x8f,0x67,0x31}};
extern "C" const GUID __declspec(selectany) IID_ILicenseInfoEnum =
    {0xa681b61d,0xd891,0x474c,{0x9e,0x45,0x9b,0x24,0xc6,0x67,0x7d,0xb6}};
extern "C" const GUID __declspec(selectany) IID_ILicenseInformation =
    {0xebe6bd5b,0x2f03,0x48f0,{0xb6,0x8b,0x6d,0xe8,0xc4,0xbd,0xef,0x32}};
extern "C" const GUID __declspec(selectany) IID_IVariantStreamIO =
    {0x76be2722,0xb1f7,0x4fe4,{0xb3,0x58,0xbf,0xd2,0x19,0x8c,0xda,0x62}};
extern "C" const GUID __declspec(selectany) IID_IVariantStream =
    {0x67a4d650,0x69e0,0x11d2,{0x85,0x00,0x00,0x00,0xf8,0x75,0xb9,0xc6}};
extern "C" const GUID __declspec(selectany) IID_IPersistVariant =
    {0x67a4d651,0x69e0,0x11d2,{0x85,0x00,0x00,0x00,0xf8,0x75,0xb9,0xc6}};
extern "C" const GUID __declspec(selectany) IID_IDocumentVersionSupportGEN =
    {0xbb75da81,0x8dfe,0x4122,{0xa9,0xc2,0x86,0xf0,0x7c,0x53,0x9a,0xd5}};
extern "C" const GUID __declspec(selectany) IID_ISet =
    {0x33848e02,0x983b,0x11d1,{0x84,0x63,0x00,0x00,0xf8,0x75,0xb9,0xc6}};
extern "C" const GUID __declspec(selectany) IID_IArray =
    {0xaafb54d9,0xaaf8,0x11d2,{0x87,0xf3,0x00,0x00,0xf8,0x75,0x17,0x20}};
extern "C" const GUID __declspec(selectany) IID_IClone =
    {0x9bff8aeb,0xe415,0x11d0,{0x94,0x3c,0x08,0x00,0x09,0xee,0xbe,0xcb}};
extern "C" const GUID __declspec(selectany) IID_IPropertySupport =
    {0x8a11ad55,0x2f4f,0x11d3,{0x9f,0xa0,0x00,0xc0,0x4f,0x6b,0xc6,0xa5}};
extern "C" const GUID __declspec(selectany) IID_IEnumBSTR =
    {0x18a45ba8,0x1266,0x11d1,{0x86,0xad,0x00,0x00,0xf8,0x75,0x17,0x20}};
extern "C" const GUID __declspec(selectany) IID_IEnumNamedID =
    {0x51959a4b,0xd4a5,0x11d1,{0x87,0x71,0x00,0x00,0xf8,0x75,0x17,0x20}};
extern "C" const GUID __declspec(selectany) IID_IEnumVariantSimple =
    {0x0f0a3d86,0x8690,0x4d41,{0x9d,0xf7,0xef,0xef,0xe9,0x9c,0x4e,0xc5}};
extern "C" const GUID __declspec(selectany) IID_IProgressor =
    {0x3141f2f1,0x38e2,0x11d1,{0x88,0x09,0x08,0x00,0x09,0xec,0x73,0x2a}};
extern "C" const GUID __declspec(selectany) IID_IErrorCollection =
    {0x66353c17,0xdf5d,0x11d3,{0x9f,0xa0,0x00,0xc0,0x4f,0x6b,0xdf,0x0c}};
extern "C" const GUID __declspec(selectany) IID_IStepProgressor =
    {0xccdad2c7,0x8ebc,0x11d1,{0x87,0x32,0x00,0x00,0xf8,0x75,0x17,0x20}};
extern "C" const GUID __declspec(selectany) IID_IAnimationProgressor =
    {0x80cb7e35,0x85e4,0x11d1,{0x87,0x2c,0x00,0x00,0xf8,0x75,0x17,0x20}};
extern "C" const GUID __declspec(selectany) IID_IStatusBar =
    {0x828100c1,0xcc80,0x11d0,{0x83,0x80,0x08,0x00,0x09,0xb9,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) IID_ITrackCancel =
    {0x34c20005,0x4d3c,0x11d0,{0x92,0xd8,0x00,0x80,0x5f,0x7c,0x28,0xb0}};
extern "C" const GUID __declspec(selectany) IID_ITrackCancel2 =
    {0x73f93cba,0x5d93,0x4d2d,{0xb2,0x7e,0x30,0xee,0xb4,0xca,0x3b,0x64}};
extern "C" const GUID __declspec(selectany) IID_ICheckProgressor =
    {0xbde22c32,0x1113,0x11d2,{0xa2,0x72,0x08,0x00,0x09,0xb6,0xf2,0x2b}};
extern "C" const GUID __declspec(selectany) IID_IFileNames =
    {0xf6ed3377,0x94f5,0x11d1,{0x9a,0xb0,0x08,0x00,0x09,0xec,0x73,0x4b}};
extern "C" const GUID __declspec(selectany) IID_IFileNames2 =
    {0x1f1197e3,0xb3bb,0x4d9c,{0xb5,0x30,0x92,0x3e,0x39,0xef,0xce,0x11}};
extern "C" const GUID __declspec(selectany) IID_IComponentCategoryManager =
    {0xd9b58741,0x322d,0x11d2,{0xa2,0x9a,0x08,0x00,0x09,0xb6,0xf2,0x2b}};
extern "C" const GUID __declspec(selectany) IID_IEnumUID =
    {0xcd5f0f7d,0x38ee,0x4de5,{0x8e,0xfd,0x41,0xfd,0xb5,0x42,0xb5,0x01}};
extern "C" const GUID __declspec(selectany) IID_IComponentCategoryInfo =
    {0xc5185fd4,0x557c,0x4e07,{0x9a,0x75,0xab,0xf0,0x60,0xf2,0xef,0x41}};
extern "C" const GUID __declspec(selectany) IID_ICategoryFactory =
    {0xa8253eb0,0x9381,0x11d2,{0x85,0x21,0x00,0x00,0xf8,0x75,0xb9,0xc6}};
extern "C" const GUID __declspec(selectany) IID_IUnitConverter =
    {0x1f3fbca9,0x6611,0x4567,{0x88,0xe4,0xe0,0xfa,0x8b,0x6f,0xb2,0x6d}};
extern "C" const GUID __declspec(selectany) IID_IAngularConverter =
    {0x1b64b6b4,0x1434,0x4172,{0x86,0x66,0xbb,0xf8,0x3e,0x5c,0x46,0x7b}};
extern "C" const GUID __declspec(selectany) IID_IAngularConverter2 =
    {0x95674ba9,0x3cd5,0x429d,{0xa5,0xac,0x9d,0x10,0x5a,0x09,0x9c,0xf7}};
extern "C" const GUID __declspec(selectany) IID_INumberFormat =
    {0x7e4f470d,0x8e54,0x11d2,{0xaa,0xd8,0x00,0x00,0x00,0x00,0x00,0x00}};
extern "C" const GUID __declspec(selectany) IID_IScaleFormat =
    {0xae9eda31,0xa9f0,0x4687,{0xb3,0xa5,0x8c,0x06,0x1c,0x92,0xd3,0xeb}};
extern "C" const GUID __declspec(selectany) IID_IGenerateStatistics =
    {0xb9c43589,0x78b8,0x11d2,{0xae,0x60,0x08,0x00,0x09,0xec,0x73,0x2a}};
extern "C" const GUID __declspec(selectany) IID_IStatisticsResults =
    {0xb9c4358a,0x78b8,0x11d2,{0xae,0x60,0x08,0x00,0x09,0xec,0x73,0x2a}};
extern "C" const GUID __declspec(selectany) IID_IFrequencyStatistics =
    {0xb9c4358b,0x78b8,0x11d2,{0xae,0x60,0x08,0x00,0x09,0xec,0x73,0x2a}};
extern "C" const GUID __declspec(selectany) IID_IFile =
    {0x381d1aa2,0xc06f,0x11d2,{0x9f,0x82,0x00,0xc0,0x4f,0x8e,0xd2,0x11}};
extern "C" const GUID __declspec(selectany) IID_IESRILicenseInfo =
    {0xfcf1e388,0x5c7e,0x4bf3,{0xaf,0x4b,0x15,0x5d,0x93,0xf8,0x29,0x7f}};
extern "C" const GUID __declspec(selectany) IID_IName =
    {0x4ba33331,0xd55f,0x11d1,{0x88,0x82,0x00,0x00,0xf8,0x77,0x76,0x2d}};
extern "C" const GUID __declspec(selectany) IID_IEnumName =
    {0xef237a51,0xcb69,0x11d2,{0x9f,0x26,0x00,0xc0,0x4f,0x6b,0xc6,0x9e}};
extern "C" const GUID __declspec(selectany) IID_IEnumNameEdit =
    {0xfdafad91,0x67fe,0x11d4,{0x81,0x55,0x00,0xc0,0x4f,0x68,0x62,0x38}};
extern "C" const GUID __declspec(selectany) IID_INameFactory =
    {0x51ad0a33,0xc607,0x11d2,{0x9f,0x23,0x00,0xc0,0x4f,0x6b,0xc6,0x9e}};
extern "C" const GUID __declspec(selectany) IID_IParseNameString =
    {0xdb1eccbf,0xc6c6,0x11d2,{0x9f,0x24,0x00,0xc0,0x4f,0x6b,0xc6,0x9e}};
extern "C" const GUID __declspec(selectany) IID_IFileName =
    {0x53da75e0,0xd01a,0x11d2,{0x9f,0x27,0x00,0xc0,0x4f,0x6b,0xc6,0x9e}};
extern "C" const GUID __declspec(selectany) IID_IExtension =
    {0x7f657ec9,0xdbf1,0x11d2,{0x9f,0x2f,0x00,0xc0,0x4f,0x6b,0xc6,0x9e}};
extern "C" const GUID __declspec(selectany) IID_IExtensionAccelerators =
    {0x35d9879a,0xdb68,0x4a2f,{0x87,0xcc,0x72,0x06,0xf0,0x06,0x0b,0x71}};
extern "C" const GUID __declspec(selectany) IID_IExtensionConfig =
    {0x12a4c258,0xcc9d,0x4ca7,{0x9f,0x29,0x79,0xde,0xd8,0x8d,0xd4,0x5f}};
extern "C" const GUID __declspec(selectany) IID_IParentExtension =
    {0xd3ae4638,0x5c68,0x4f1b,{0xaa,0xdf,0x8b,0xec,0x8d,0xeb,0x4f,0x8b}};
extern "C" const GUID __declspec(selectany) IID_IChildExtension =
    {0x1d45017c,0x2a13,0x4cdf,{0xaf,0xc7,0x59,0xf9,0xd0,0xc1,0x7c,0x71}};
extern "C" const GUID __declspec(selectany) IID_IParentLicenseExtension =
    {0x8a1a05f8,0x1521,0x435c,{0x9b,0x0e,0x1f,0x2b,0x14,0x8e,0x0a,0xe4}};
extern "C" const GUID __declspec(selectany) IID_IAutoExtension =
    {0xa5009874,0xe58f,0x42df,{0xbe,0x62,0x87,0x3a,0x76,0x61,0xec,0xdf}};
extern "C" const GUID __declspec(selectany) IID_IExtensionManager =
    {0x05c71634,0xd9d5,0x4d6f,{0xb6,0x8e,0xd7,0x66,0x11,0x42,0xfa,0x06}};
extern "C" const GUID __declspec(selectany) IID_IExtensionManagerAdmin =
    {0x262c00f9,0x114d,0x45f8,{0xbc,0x9d,0xa0,0xdd,0x20,0x8d,0xc9,0xe1}};
extern "C" const GUID __declspec(selectany) IID_IArray2 =
    {0xc4b2bfc5,0xeb46,0x4909,{0x80,0x1c,0xc3,0x2a,0x6e,0xde,0x12,0x0d}};
extern "C" const GUID __declspec(selectany) IID_IPropertySet =
    {0xf0ba6abc,0x8e9f,0x11d0,{0xb4,0xab,0x00,0x00,0xf8,0x03,0x73,0x68}};
extern "C" const GUID __declspec(selectany) IID_IPropertySet2 =
    {0x613c41d5,0x3325,0x11d4,{0x81,0x41,0x00,0xc0,0x4f,0x68,0x62,0x38}};
extern "C" const GUID __declspec(selectany) IID_IMemoryBlobStreamVariant =
    {0x68f0ab65,0xe2b7,0x40d8,{0xaa,0x3b,0x3b,0x77,0x64,0x60,0x7d,0xd3}};
extern "C" const GUID __declspec(selectany) IID_ILongArray =
    {0x54f9ffb6,0xe91f,0x11d2,{0x9f,0x81,0x00,0xc0,0x4f,0x8e,0xce,0x27}};
extern "C" const GUID __declspec(selectany) IID_IDoubleArray =
    {0x60c06ca6,0xe09e,0x11d2,{0x9f,0x7b,0x00,0xc0,0x4f,0x8e,0xce,0x27}};
extern "C" const GUID __declspec(selectany) IID_IStringArray =
    {0x206216c9,0x7253,0x4a4d,{0x92,0xdd,0x60,0x32,0x9f,0xd9,0xd7,0x92}};
extern "C" const GUID __declspec(selectany) IID_IVariantArray =
    {0x3a10189d,0x0377,0x4ddf,{0x8c,0x05,0xa2,0x67,0x2a,0xf6,0xa4,0x03}};
extern "C" const GUID __declspec(selectany) IID_IPropertySetArray =
    {0x93fc737f,0x8c92,0x4c92,{0xb0,0xd7,0x75,0xe7,0x1f,0xd7,0x53,0xc9}};
extern "C" const GUID __declspec(selectany) IID_IObjectConstruct =
    {0x30fa4757,0xa2f3,0x4d11,{0xb9,0x44,0x05,0x9a,0xad,0x5c,0x39,0x91}};
extern "C" const GUID __declspec(selectany) IID_IObjectValidate =
    {0x55446beb,0x10ca,0x40a4,{0x9f,0x40,0x26,0x1c,0xa4,0xa7,0xf3,0x5a}};
extern "C" const GUID __declspec(selectany) IID_IObjectActivate =
    {0xe3b78022,0x143e,0x4e61,{0x90,0x99,0xed,0x31,0x9e,0xc0,0x61,0xe7}};
extern "C" const GUID __declspec(selectany) IID_IObjectUpdate =
    {0xd641f414,0x1004,0x4e73,{0x93,0x86,0xf6,0xea,0x54,0x3e,0x2d,0x95}};
extern "C" const GUID __declspec(selectany) IID_ILog =
    {0x6f39c621,0x470b,0x4e6d,{0x90,0x33,0xa8,0x59,0x8e,0x28,0x6c,0xab}};
extern "C" const GUID __declspec(selectany) IID_ILog2 =
    {0x44f1fe1d,0xccc4,0x4a5f,{0x97,0x7a,0x23,0x3c,0x25,0xa4,0x56,0x25}};
extern "C" const GUID __declspec(selectany) IID_IJobMessage =
    {0xb611d33a,0x01a3,0x47e3,{0xae,0x7d,0x44,0x07,0x6c,0x72,0x7a,0xbc}};
extern "C" const GUID __declspec(selectany) IID_IJobTracker =
    {0xe95e6c90,0x0029,0x47e6,{0xb0,0xea,0x5c,0x6a,0xa6,0x64,0x29,0x68}};
extern "C" const GUID __declspec(selectany) IID_IEnvironmentManager =
    {0x3551eb0b,0xae83,0x40a3,{0xa0,0x48,0x02,0xab,0x9f,0xfb,0xee,0x0d}};
extern "C" const GUID __declspec(selectany) IID_IServerEnvironment =
    {0x32d4c328,0xe473,0x4615,{0x92,0x2c,0x63,0xc1,0x08,0xf5,0x5e,0x60}};
extern "C" const GUID __declspec(selectany) IID_IServerUserInfo =
    {0xdcee6bd6,0x395a,0x49ab,{0xae,0x32,0x05,0x59,0x12,0x5c,0x1d,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IServerEnvironment2 =
    {0x8037ee78,0x6197,0x4b8e,{0x8f,0x8b,0x52,0xc7,0x44,0xe4,0x2a,0x31}};
extern "C" const GUID __declspec(selectany) IID_IServerEnvironment3 =
    {0x9940e0cd,0xd279,0x468a,{0xb0,0xea,0xc5,0x46,0xda,0x5c,0x3d,0x0c}};
extern "C" const GUID __declspec(selectany) IID_ILogSupport =
    {0x4f6ee3e2,0x25d7,0x4957,{0xb0,0x08,0x3a,0x5e,0x9c,0xe2,0x81,0x80}};
extern "C" const GUID __declspec(selectany) IID_IObjectCopy =
    {0x9c3673ea,0xbc0a,0x11d5,{0xa9,0xdf,0x00,0x10,0x4b,0xb6,0xfc,0x1c}};
extern "C" const GUID __declspec(selectany) IID_IXMLPersistedObject =
    {0xe2015546,0x27b9,0x4ac4,{0xbb,0x8b,0x64,0xb4,0x29,0x51,0x3d,0x44}};
extern "C" const GUID __declspec(selectany) IID_IJITExtensionManager =
    {0x0e3b4663,0x4ca5,0x4638,{0xaa,0x4a,0x7d,0x89,0x87,0x82,0x09,0xe5}};
extern "C" const GUID __declspec(selectany) IID_ISystemBridge =
    {0x848e0e84,0xe280,0x4883,{0xba,0x8c,0x32,0x08,0x64,0xc3,0xd4,0x2e}};
extern "C" const GUID __declspec(selectany) IID_ITestConnection =
    {0x6b61d022,0xcae6,0x41a9,{0xbd,0x13,0x6d,0xac,0x82,0xcf,0xfe,0xfd}};
extern "C" const GUID __declspec(selectany) IID_IRectHolder =
    {0x1074568c,0xcc5f,0x48b4,{0x93,0x16,0x01,0x5c,0xad,0x47,0x33,0x59}};
extern "C" const GUID __declspec(selectany) IID_IShortcutName =
    {0xe29b3c76,0xe7b2,0x458e,{0x87,0x32,0xe9,0x29,0x39,0x1d,0xa2,0x34}};
extern "C" const GUID __declspec(selectany) IID_IArcGISLocale =
    {0x69467533,0xf25b,0x4ef3,{0xb6,0x80,0x22,0x9b,0x4d,0xc6,0x08,0x7b}};
extern "C" const GUID __declspec(selectany) IID_IInputDeviceManager =
    {0x52620d38,0xe275,0x4725,{0xa9,0x76,0x65,0xbc,0xdd,0x2c,0x93,0xfd}};
extern "C" const GUID __declspec(selectany) CLSID_InputDeviceManager =
    {0x71d66954,0xd2bf,0x4fdd,{0x86,0xc6,0x68,0xb0,0x62,0x40,0x27,0x80}};
extern "C" const GUID __declspec(selectany) CLSID_Set =
    {0x33848e03,0x983b,0x11d1,{0x84,0x63,0x00,0x00,0xf8,0x75,0xb9,0xc6}};
extern "C" const GUID __declspec(selectany) CLSID_Array =
    {0x8f2b6061,0xab00,0x11d2,{0x87,0xf4,0x00,0x00,0xf8,0x75,0x17,0x20}};
extern "C" const GUID __declspec(selectany) IID_IXMLSerializeData =
    {0x5bb4a18d,0x43bc,0x41c5,{0x98,0x7a,0x22,0x06,0xfd,0x15,0x48,0x8f}};
extern "C" const GUID __declspec(selectany) IID_IXMLSerialize =
    {0xc8545045,0x6615,0x48e3,{0xaf,0x27,0x52,0xa0,0xe5,0xfc,0x35,0xe2}};
extern "C" const GUID __declspec(selectany) CLSID_ObjectStream =
    {0x043731d0,0xa7cf,0x11d1,{0x8b,0xd1,0x08,0x00,0x09,0xee,0x4e,0x41}};
extern "C" const GUID __declspec(selectany) IID_IObjectStream =
    {0x18a45ba7,0x1266,0x11d1,{0x86,0xad,0x00,0x00,0xf8,0x75,0x17,0x20}};
extern "C" const GUID __declspec(selectany) IID_IDocumentVersion =
    {0xecc43c55,0x0148,0x4ec1,{0xbf,0x87,0xb9,0xa1,0x83,0xc5,0xdc,0x98}};
extern "C" const GUID __declspec(selectany) CLSID_ByteSwapStreamIO =
    {0x74d3b3a0,0xe54f,0x46d2,{0xb9,0xe8,0x41,0x67,0xa0,0xb2,0x1f,0x87}};
extern "C" const GUID __declspec(selectany) CLSID_VariantStreamIO =
    {0x12dadd0e,0x4d96,0x4599,{0xb4,0xba,0xf9,0x24,0x6a,0x8a,0xd3,0x12}};
extern "C" const GUID __declspec(selectany) CLSID_UID =
    {0x78ff7fa1,0xfb2f,0x11d1,{0x94,0xa2,0x08,0x00,0x09,0xee,0xbe,0xcb}};
extern "C" const GUID __declspec(selectany) CLSID_ComponentCategoryManager =
    {0xd9b58742,0x322d,0x11d2,{0xa2,0x9a,0x08,0x00,0x09,0xb6,0xf2,0x2b}};
extern "C" const GUID __declspec(selectany) CLSID_CategoryFactory =
    {0xa8253eb1,0x9381,0x11d2,{0x85,0x21,0x00,0x00,0xf8,0x75,0xb9,0xc6}};
extern "C" const GUID __declspec(selectany) CLSID_BaseStatistics =
    {0xb9c4358c,0x78b8,0x11d2,{0xae,0x60,0x08,0x00,0x09,0xec,0x73,0x2a}};
extern "C" const GUID __declspec(selectany) CLSID_FileStream =
    {0x381d1aa1,0xc06f,0x11d2,{0x9f,0x82,0x00,0xc0,0x4f,0x8e,0xd2,0x11}};
extern "C" const GUID __declspec(selectany) IID_IBlobStream =
    {0xbc92995e,0xe736,0x11d0,{0x9a,0x93,0x08,0x00,0x09,0xec,0x73,0x4b}};
extern "C" const GUID __declspec(selectany) CLSID_NameFactory =
    {0xdb1eccc0,0xc6c6,0x11d2,{0x9f,0x24,0x00,0xc0,0x4f,0x6b,0xc6,0x9e}};
extern "C" const GUID __declspec(selectany) CLSID_FileName =
    {0x53da75df,0xd01a,0x11d2,{0x9f,0x27,0x00,0xc0,0x4f,0x6b,0xc6,0x9e}};
extern "C" const GUID __declspec(selectany) CLSID_MemoryBlobStream =
    {0xbc929960,0xe736,0x11d0,{0x9a,0x93,0x08,0x00,0x09,0xec,0x73,0x4b}};
extern "C" const GUID __declspec(selectany) IID_IMemoryBlobStream =
    {0xbc92995f,0xe736,0x11d0,{0x9a,0x93,0x08,0x00,0x09,0xec,0x73,0x4b}};
extern "C" const GUID __declspec(selectany) IID_IMemoryBlobStream2 =
    {0x5ce09f2c,0x9c93,0x4a3b,{0x83,0xad,0xe1,0x2f,0xb6,0xa6,0x7a,0xd4}};
extern "C" const GUID __declspec(selectany) CLSID_ESRILicenseInfo =
    {0x2cca83e3,0xefe4,0x4cba,{0x98,0x52,0x6c,0x0c,0x75,0x21,0xad,0x8e}};
extern "C" const GUID __declspec(selectany) CLSID_ExtensionManager =
    {0x6120bc0a,0x3d90,0x4274,{0x97,0xca,0x71,0x3c,0x41,0xf1,0xfa,0xff}};
extern "C" const GUID __declspec(selectany) CLSID_FileNames =
    {0xa3dcea3a,0xebd5,0x11d4,{0xa6,0x56,0x00,0x08,0xc7,0x11,0xc8,0xc1}};
extern "C" const GUID __declspec(selectany) CLSID_PropertySet =
    {0x588e5a11,0xd09b,0x11d1,{0xaa,0x7c,0x00,0xc0,0x4f,0xa3,0x3a,0x15}};
extern "C" const GUID __declspec(selectany) CLSID_EnvironmentManager =
    {0x8a626d49,0x5f5e,0x47d9,{0x94,0x63,0x0b,0x80,0x2e,0x9c,0x41,0x67}};
extern "C" const GUID __declspec(selectany) CLSID_DoubleArray =
    {0x60c06ca7,0xe09e,0x11d2,{0x9f,0x7b,0x00,0xc0,0x4f,0x8e,0xce,0x27}};
extern "C" const GUID __declspec(selectany) CLSID_LongArray =
    {0x98bfb808,0xe91f,0x11d2,{0x9f,0x81,0x00,0xc0,0x4f,0x8e,0xce,0x27}};
extern "C" const GUID __declspec(selectany) CLSID_StrArray =
    {0xa7f92065,0x36ce,0x47b6,{0xa4,0x63,0x47,0x63,0xda,0x94,0x7c,0xc2}};
extern "C" const GUID __declspec(selectany) CLSID_VarArray =
    {0x762f0474,0xeca2,0x475b,{0x99,0xf4,0x26,0x67,0x8d,0x79,0x43,0x6e}};
extern "C" const GUID __declspec(selectany) CLSID_PropertySetArray =
    {0xc94bbd8a,0xec33,0x4921,{0x8e,0xc3,0x6a,0xd4,0xb3,0x32,0x32,0xc3}};
extern "C" const GUID __declspec(selectany) IID_IXMLVersionSupport =
    {0x72ca65b9,0x13de,0x48b7,{0x84,0x43,0x71,0x7b,0x69,0xb7,0x2a,0x99}};
extern "C" const GUID __declspec(selectany) CLSID_UnitConverter =
    {0x2f65c2f2,0x701b,0x4e11,{0x91,0x57,0xfc,0x4a,0x3d,0x0b,0x60,0x69}};
extern "C" const GUID __declspec(selectany) CLSID_AngularConverter =
    {0x4d380153,0x9b16,0x41ac,{0x8f,0x9f,0xa2,0x3d,0x9c,0x2d,0xdf,0xe4}};
extern "C" const GUID __declspec(selectany) CLSID_ScaleFormat =
    {0x7b759b6d,0xdf88,0x4aed,{0xad,0xd7,0x6f,0x53,0x10,0x5b,0x47,0xa4}};
extern "C" const GUID __declspec(selectany) CLSID_AoInitialize =
    {0xe01be902,0xcc85,0x4b13,{0xa8,0x28,0x02,0xe7,0x89,0xe0,0xdd,0xa9}};
extern "C" const GUID __declspec(selectany) CLSID_ProductInstalled =
    {0x872135d9,0x837d,0x48d6,{0x8d,0x25,0x81,0xe8,0x74,0xd8,0xae,0x82}};
extern "C" const GUID __declspec(selectany) CLSID_LicenseInfoEnum =
    {0xe495e958,0x5244,0x4f9b,{0xbf,0x02,0x42,0xc2,0x76,0x96,0x49,0x53}};
extern "C" const GUID __declspec(selectany) CLSID_AoAuthorizeLicense =
    {0x6dbe8bf8,0x6000,0x4734,{0xb1,0xa8,0xc8,0x1c,0x69,0x65,0x1c,0x06}};
extern "C" const GUID __declspec(selectany) CLSID_ObjectCopy =
    {0x9c3673eb,0xbc0a,0x11d5,{0xa9,0xdf,0x00,0x10,0x4b,0xb6,0xfc,0x1c}};
extern "C" const GUID __declspec(selectany) CLSID_XMLPersistedObject =
    {0xc0d4ad6b,0xadb3,0x4b98,{0x89,0x27,0x1f,0x0e,0xc0,0x39,0xbb,0x5e}};
extern "C" const GUID __declspec(selectany) CLSID_SystemHelper =
    {0xbe49d696,0x3c46,0x4b81,{0x96,0x0b,0xf6,0x7d,0x1b,0xbd,0x23,0x8d}};
extern "C" const GUID __declspec(selectany) CLSID_ShortcutName =
    {0x3beb09e4,0x3941,0x4a07,{0x9d,0x1a,0xec,0x2b,0x43,0xba,0x7d,0x50}};
extern "C" const GUID __declspec(selectany) CLSID_ArcGISLocale =
    {0x495ec746,0x46d4,0x4a6e,{0xbd,0x06,0x3a,0x08,0xc3,0x84,0x65,0xca}};
extern "C" const GUID __declspec(selectany) IID_IClassID =
    {0x9f9650f1,0x5f49,0x4041,{0xba,0x0f,0xd1,0x0b,0xaf,0xf1,0xd7,0xbc}};
extern "C" const GUID __declspec(selectany) IID_IClassify =
    {0xd5c7a525,0xdfb8,0x11d1,{0xaa,0xad,0x00,0xc0,0x4f,0xa3,0x34,0xb3}};
extern "C" const GUID __declspec(selectany) IID_IClassifyMinMax =
    {0xac6c5899,0x241b,0x11d3,{0x9f,0x50,0x00,0xc0,0x4f,0x6b,0xc7,0x09}};
extern "C" const GUID __declspec(selectany) IID_IClassifyMinMax2 =
    {0xb42e7156,0xf8a5,0x415b,{0xab,0xb4,0x23,0x0c,0xa4,0x21,0xf4,0xb2}};
extern "C" const GUID __declspec(selectany) IID_IIntervalRange =
    {0x62144be6,0xe05e,0x11d1,{0xaa,0xae,0x00,0xc0,0x4f,0xa3,0x34,0xb3}};
extern "C" const GUID __declspec(selectany) IID_IIntervalRange2 =
    {0x29697055,0xd00b,0x45ab,{0x91,0xbf,0x15,0x43,0xd4,0x43,0x80,0x86}};
extern "C" const GUID __declspec(selectany) IID_IDeviationInterval =
    {0x62144be7,0xe05e,0x11d1,{0xaa,0xae,0x00,0xc0,0x4f,0xa3,0x34,0xb3}};
extern "C" const GUID __declspec(selectany) CLSID_EqualInterval =
    {0x62144be1,0xe05e,0x11d1,{0xaa,0xae,0x00,0xc0,0x4f,0xa3,0x34,0xb3}};
extern "C" const GUID __declspec(selectany) CLSID_Quantile =
    {0x62144be9,0xe05e,0x11d1,{0xaa,0xae,0x00,0xc0,0x4f,0xa3,0x34,0xb3}};
extern "C" const GUID __declspec(selectany) CLSID_DefinedInterval =
    {0x62144be8,0xe05e,0x11d1,{0xaa,0xae,0x00,0xc0,0x4f,0xa3,0x34,0xb3}};
extern "C" const GUID __declspec(selectany) CLSID_NaturalBreaks =
    {0x62144bea,0xe05e,0x11d1,{0xaa,0xae,0x00,0xc0,0x4f,0xa3,0x34,0xb3}};
extern "C" const GUID __declspec(selectany) CLSID_StandardDeviation =
    {0xdc6d8015,0x49c2,0x11d2,{0xaa,0xff,0x00,0xc0,0x4f,0xa3,0x34,0xb3}};
extern "C" const GUID __declspec(selectany) CLSID_GeometricalInterval =
    {0xc79eb120,0xe98e,0x4af9,{0x90,0x3d,0x70,0x27,0x3e,0x0c,0x14,0x0e}};
extern "C" const GUID __declspec(selectany) IID_INumericFormat =
    {0x7e4f4710,0x8e54,0x11d2,{0xaa,0xd8,0x00,0x00,0x00,0x00,0x00,0x00}};
extern "C" const GUID __declspec(selectany) IID_IPercentageFormat =
    {0x7e4f4711,0x8e54,0x11d2,{0xaa,0xd8,0x00,0x00,0x00,0x00,0x00,0x00}};
extern "C" const GUID __declspec(selectany) IID_IFractionFormat =
    {0x7e4f4713,0x8e54,0x11d2,{0xaa,0xd8,0x00,0x00,0x00,0x00,0x00,0x00}};
extern "C" const GUID __declspec(selectany) IID_ILatLonFormat =
    {0x7e4f4714,0x8e54,0x11d2,{0xaa,0xd8,0x00,0x00,0x00,0x00,0x00,0x00}};
extern "C" const GUID __declspec(selectany) IID_ILatLonFormat2 =
    {0x127b0952,0xe8b4,0x428c,{0xac,0x39,0x58,0xde,0x4d,0x1f,0x17,0xde}};
extern "C" const GUID __declspec(selectany) IID_IAngleFormat =
    {0x7e4f4716,0x8e54,0x11d2,{0xaa,0xd8,0x00,0x00,0x00,0x00,0x00,0x00}};
extern "C" const GUID __declspec(selectany) IID_IDirectionFormat =
    {0x11d7b4c8,0xdbdf,0x4b98,{0xac,0x6d,0x8c,0x41,0x9e,0xfd,0x2c,0x24}};
extern "C" const GUID __declspec(selectany) IID_IRateFormat =
    {0x7e4f4717,0x8e54,0x11d2,{0xaa,0xd8,0x00,0x00,0x00,0x00,0x00,0x00}};
extern "C" const GUID __declspec(selectany) IID_ICustomNumberFormat =
    {0x7e4f4718,0x8e54,0x11d2,{0xaa,0xd8,0x00,0x00,0x00,0x00,0x00,0x00}};
extern "C" const GUID __declspec(selectany) IID_IScientificNumberFormat =
    {0xd4f5c355,0x76b8,0x11d3,{0x9f,0xc3,0x00,0xc0,0x4f,0x6b,0xc7,0x8e}};
extern "C" const GUID __declspec(selectany) IID_INumberFormatOperations =
    {0x5ef43b7e,0x3bc1,0x4b25,{0xa5,0xc0,0x08,0x21,0x8c,0x75,0xbe,0x06}};
extern "C" const GUID __declspec(selectany) CLSID_NumericFormat =
    {0x7e4f4719,0x8e54,0x11d2,{0xaa,0xd8,0x00,0x00,0x00,0x00,0x00,0x00}};
extern "C" const GUID __declspec(selectany) CLSID_CurrencyFormat =
    {0x7e4f471a,0x8e54,0x11d2,{0xaa,0xd8,0x00,0x00,0x00,0x00,0x00,0x00}};
extern "C" const GUID __declspec(selectany) CLSID_PercentageFormat =
    {0x7e4f471b,0x8e54,0x11d2,{0xaa,0xd8,0x00,0x00,0x00,0x00,0x00,0x00}};
extern "C" const GUID __declspec(selectany) CLSID_FractionFormat =
    {0x7e4f471c,0x8e54,0x11d2,{0xaa,0xd8,0x00,0x00,0x00,0x00,0x00,0x00}};
extern "C" const GUID __declspec(selectany) CLSID_LatLonFormat =
    {0x7e4f471d,0x8e54,0x11d2,{0xaa,0xd8,0x00,0x00,0x00,0x00,0x00,0x00}};
extern "C" const GUID __declspec(selectany) CLSID_AngleFormat =
    {0x7e4f471e,0x8e54,0x11d2,{0xaa,0xd8,0x00,0x00,0x00,0x00,0x00,0x00}};
extern "C" const GUID __declspec(selectany) CLSID_DirectionFormat =
    {0x36d7e361,0xb440,0x4feb,{0xb2,0xac,0xfe,0xde,0x1a,0x2f,0xd7,0xa7}};
extern "C" const GUID __declspec(selectany) CLSID_ScientificFormat =
    {0x7e4f471f,0x8e54,0x11d2,{0xaa,0xd8,0x00,0x00,0x00,0x00,0x00,0x00}};
extern "C" const GUID __declspec(selectany) CLSID_RateFormat =
    {0x7e4f4721,0x8e54,0x11d2,{0xaa,0xd8,0x00,0x00,0x00,0x00,0x00,0x00}};
extern "C" const GUID __declspec(selectany) CLSID_CustomNumberFormat =
    {0x7e4f4722,0x8e54,0x11d2,{0xaa,0xd8,0x00,0x00,0x00,0x00,0x00,0x00}};
extern "C" const GUID __declspec(selectany) IID_IXMLTypeMapper =
    {0xa9a5de92,0xe3c9,0x4940,{0xb0,0xf4,0x6d,0x93,0xcd,0xf2,0x60,0x2b}};
extern "C" const GUID __declspec(selectany) IID_IXMLAttributes =
    {0x3e23a49e,0x9f66,0x42d5,{0x99,0x82,0x5e,0x3e,0x5c,0x08,0x21,0xe0}};
extern "C" const GUID __declspec(selectany) IID_IXMLNamespaces =
    {0x032b72dc,0xe0fb,0x4bb1,{0x86,0x26,0x17,0x97,0xe2,0x5a,0x72,0xa0}};
extern "C" const GUID __declspec(selectany) IID_IXMLReader =
    {0xd405f844,0x8057,0x4df4,{0xb2,0xda,0xdf,0x25,0xde,0xde,0xbf,0x4c}};
extern "C" const GUID __declspec(selectany) IID_IXMLWriter =
    {0x5f50e520,0x1278,0x4c7a,{0x93,0x7c,0xae,0x58,0x74,0x54,0x84,0x31}};
extern "C" const GUID __declspec(selectany) IID_IXMLFlags =
    {0x647f4c09,0x3699,0x4868,{0xa7,0x4c,0x10,0x81,0x22,0xa9,0x68,0xdc}};
extern "C" const GUID __declspec(selectany) IID_IXMLSerializer =
    {0xdea199d0,0x371c,0x4955,{0x84,0x4c,0xb6,0x77,0x05,0xe1,0xed,0xb2}};
extern "C" const GUID __declspec(selectany) IID_IXMLSerializerAlt =
    {0x4deb2c9d,0x2162,0x4443,{0x90,0x8e,0x25,0xb6,0xcb,0x7f,0xb6,0xdf}};
extern "C" const GUID __declspec(selectany) IID_IXMLObjectElement =
    {0x77d57dda,0xe1e3,0x459a,{0x91,0xd1,0x19,0x21,0x26,0xbc,0x34,0x4a}};
extern "C" const GUID __declspec(selectany) IID_IXMLStream =
    {0x498a5f91,0x65d1,0x4a25,{0xad,0x2b,0x46,0x2e,0x7d,0xf8,0xb3,0x58}};
extern "C" const GUID __declspec(selectany) CLSID_XMLStream =
    {0xdb2cde6f,0xa264,0x4129,{0xa4,0xce,0x99,0xf9,0xa4,0x7f,0x18,0x30}};
extern "C" const GUID __declspec(selectany) CLSID_XMLReader =
    {0xb853965e,0xfd52,0x4ed2,{0x80,0xc2,0xf0,0xe2,0x7a,0x2c,0x6e,0x8a}};
extern "C" const GUID __declspec(selectany) CLSID_XMLWriter =
    {0x105a5345,0x85f8,0x4b27,{0xa1,0xd2,0x5d,0x22,0x62,0xc6,0xd2,0x7e}};
extern "C" const GUID __declspec(selectany) CLSID_XMLAttributes =
    {0x176edc78,0x13ad,0x474c,{0x9f,0x42,0x08,0x3d,0x86,0xff,0xba,0x33}};
extern "C" const GUID __declspec(selectany) CLSID_XMLNamespaces =
    {0x95547dd2,0x8871,0x498b,{0x91,0x8b,0xcf,0x10,0xea,0xf5,0x0f,0x63}};
extern "C" const GUID __declspec(selectany) CLSID_XMLTypeMapper =
    {0xdcb0f748,0x2d17,0x40b5,{0x90,0xc2,0x7d,0x0b,0x39,0x66,0x04,0x05}};
extern "C" const GUID __declspec(selectany) CLSID_XMLSerializer =
    {0x4fe5c28e,0x35e6,0x403f,{0x84,0x31,0xe1,0x6b,0x1f,0x99,0xae,0x4e}};
extern "C" const GUID __declspec(selectany) CLSID_XMLSerializerAlt =
    {0x364eef73,0x3c3c,0x493c,{0xb9,0x9a,0x76,0xdb,0xe6,0x2f,0x6f,0xc6}};
extern "C" const GUID __declspec(selectany) CLSID_XMLFlags =
    {0x23d488e6,0x6c77,0x47e8,{0x94,0x8b,0xcc,0xee,0xe3,0x58,0x9c,0xa2}};
extern "C" const GUID __declspec(selectany) IID_IJSONWriter =
    {0x408cd30c,0xb7a6,0x4793,{0xa0,0x7c,0x41,0x81,0x03,0x5c,0x66,0xe7}};
extern "C" const GUID __declspec(selectany) IID_IExternalSerializer =
    {0xe760e960,0xf144,0x4b30,{0x93,0x0b,0x5f,0x80,0x56,0xe4,0xe3,0x05}};
extern "C" const GUID __declspec(selectany) IID_IExternalDeserializer =
    {0x09134de8,0x4147,0x4564,{0x82,0xbd,0x6c,0xc1,0x84,0x14,0xc3,0x89}};
extern "C" const GUID __declspec(selectany) IID_IJSONSerializer =
    {0xab718cdf,0x0c06,0x4d18,{0x9a,0xa4,0xa6,0xc5,0x4b,0x2b,0xc2,0x8c}};
extern "C" const GUID __declspec(selectany) IID_IAMFWriter =
    {0x3eb8c519,0xd125,0x48d4,{0xae,0xb6,0x60,0x80,0x74,0x31,0x6a,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IAMFSerializer =
    {0x8f6f56fc,0xa942,0x44f5,{0xaf,0x7d,0x53,0x12,0xfd,0xf0,0xc0,0xc6}};
extern "C" const GUID __declspec(selectany) IID_IJSONReader =
    {0x48105a80,0xe0dc,0x4d69,{0xbb,0x61,0x3d,0xf7,0x4c,0xaf,0xa5,0x2c}};
extern "C" const GUID __declspec(selectany) IID_IJSONDeserializer =
    {0x1e6dc0eb,0x5c8a,0x4401,{0xa8,0xaf,0xbb,0x56,0x02,0xdd,0xfb,0x7e}};
extern "C" const GUID __declspec(selectany) IID_IJSONWriter2 =
    {0x677fcbb1,0xc272,0x4616,{0xb4,0x76,0x2c,0xa3,0xdc,0xe8,0xd2,0x92}};
extern "C" const GUID __declspec(selectany) IID_IJSONReader2 =
    {0x2c573605,0xc449,0x47e3,{0xa4,0x83,0xf4,0x41,0x19,0x28,0x40,0xfa}};
extern "C" const GUID __declspec(selectany) CLSID_JSONArray =
    {0x7f763998,0x814e,0x45bd,{0x9e,0xbd,0x28,0xcd,0xa2,0xa1,0x0f,0xc6}};
extern "C" const GUID __declspec(selectany) CLSID_JSONObject =
    {0xdb25e387,0x8d9f,0x4d79,{0xb1,0xdf,0x8f,0x65,0x69,0x44,0x65,0xf0}};
extern "C" const GUID __declspec(selectany) CLSID_JSONWriter =
    {0xbec303dc,0x37ae,0x4eb3,{0x92,0xf5,0x39,0x7e,0x5b,0x6e,0x75,0x09}};
extern "C" const GUID __declspec(selectany) CLSID_AMFWriter =
    {0xe312a49e,0x4a72,0x4766,{0x9e,0x5b,0x4b,0x3f,0xe8,0xca,0x2e,0xec}};
extern "C" const GUID __declspec(selectany) CLSID_JSONReader =
    {0xb4578901,0x05de,0x4bda,{0xaa,0xeb,0x84,0x9e,0xc5,0x21,0x02,0xb1}};
extern "C" const GUID __declspec(selectany) IID_ITimeZoneRule =
    {0x2cbfdcb1,0xc991,0x4f68,{0xb5,0xb1,0x91,0x9b,0x1b,0x1e,0x6a,0x25}};
extern "C" const GUID __declspec(selectany) IID_ITimeZoneInfo =
    {0x0f8fd6ab,0xce6d,0x4bb2,{0xa5,0xef,0x2f,0x60,0x35,0xe3,0x04,0xc5}};
extern "C" const GUID __declspec(selectany) IID_ITimeDuration =
    {0x953dc994,0xaa0d,0x4193,{0x9c,0x1f,0x46,0x9b,0x60,0xd6,0x17,0x11}};
extern "C" const GUID __declspec(selectany) IID_ILocaleInfo =
    {0x53325bda,0x65fa,0x4de0,{0x90,0x1e,0x2b,0x23,0xff,0xfb,0x87,0x64}};
extern "C" const GUID __declspec(selectany) IID_ITimeOffsetOperator =
    {0x7cbbb8ea,0x7708,0x464a,{0xa6,0xc8,0x96,0xdb,0x06,0x52,0x1b,0x3a}};
extern "C" const GUID __declspec(selectany) CLSID_Time =
    {0xe1721810,0x8210,0x45b1,{0x85,0x90,0xfc,0x4c,0x91,0x1f,0xba,0x20}};
extern "C" const GUID __declspec(selectany) CLSID_TimeDuration =
    {0x09692c1c,0x21fa,0x4fe2,{0x8e,0xfa,0x6c,0x4a,0xcb,0x59,0xa3,0x23}};
extern "C" const GUID __declspec(selectany) CLSID_TimeInstant =
    {0x06bd7287,0x0785,0x4294,{0xbd,0x72,0xf2,0x93,0x3b,0x7f,0xd0,0x0d}};
extern "C" const GUID __declspec(selectany) CLSID_TimeExtent =
    {0x5dc783de,0x283a,0x4963,{0xab,0x53,0x25,0xa0,0x5c,0x5d,0x76,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_TimeZoneRule =
    {0x1897b0ef,0x94da,0x4037,{0x81,0x56,0x14,0x5d,0x63,0xcd,0x48,0x0d}};
extern "C" const GUID __declspec(selectany) CLSID_TimeZoneInfo =
    {0x78fad5f1,0x60fa,0x458a,{0x8d,0x93,0x63,0x0d,0xa9,0x20,0x44,0x8d}};
extern "C" const GUID __declspec(selectany) CLSID_LocaleInfo =
    {0x1cb5f59d,0xfd41,0x4695,{0x9f,0x48,0xfa,0xe4,0x67,0x5d,0xbf,0x3c}};
extern "C" const GUID __declspec(selectany) CLSID_TimeReference =
    {0xefb2e7db,0x78f4,0x4e24,{0xb0,0x1f,0x4f,0x9c,0x7a,0xb8,0x00,0xc5}};
extern "C" const GUID __declspec(selectany) CLSID_TimeZoneFactory =
    {0xc559680f,0x9fae,0x4967,{0x93,0x8a,0x33,0x54,0x8b,0xc5,0xeb,0xa0}};
extern "C" const GUID __declspec(selectany) IID_IRequestHandler =
    {0x46a0e2ea,0x3b64,0x4a46,{0xbd,0x78,0x88,0xa1,0x66,0x0f,0x35,0xbb}};
extern "C" const GUID __declspec(selectany) IID_IRequestHandler2 =
    {0x8319e7d0,0x8ad1,0x48ed,{0xaa,0x99,0x03,0xf9,0xd0,0xc9,0x3b,0xa8}};
extern "C" const GUID __declspec(selectany) IID_IWebRequestHandler =
    {0xd1da21f3,0x9ec1,0x40bc,{0xb8,0xa2,0xcd,0x29,0xa1,0xeb,0xed,0x8d}};
extern "C" const GUID __declspec(selectany) IID_IRESTRequestHandler =
    {0x9d66a418,0xd54a,0x48ed,{0x88,0xbd,0x04,0x3a,0x25,0xfa,0x9c,0x83}};
extern "C" const GUID __declspec(selectany) CLSID_CoRESTResource =
    {0xc5f365f0,0x9ac8,0x4872,{0xaf,0xd0,0xe9,0x38,0x3a,0xff,0x0f,0x2e}};
extern "C" const GUID __declspec(selectany) CLSID_CoRESTOperation =
    {0xfda271d6,0x59e0,0x40ec,{0x97,0xf2,0x0c,0xe6,0xa3,0x92,0xf1,0x2c}};
extern "C" const GUID __declspec(selectany) CLSID_CoRESTDispatcher =
    {0x0d52fcd9,0x6647,0x432c,{0xb1,0x5b,0xb1,0x41,0xab,0x0a,0x34,0x9f}};
extern "C" const GUID __declspec(selectany) IID_IProxyServerInfo =
    {0xfc221ff0,0x1240,0x43a0,{0x8d,0x76,0x3e,0x91,0x7d,0x02,0x9c,0xe6}};
extern "C" const GUID __declspec(selectany) IID_IProxyServerInfo2 =
    {0xe724e8b4,0xf2fb,0x40ea,{0xbf,0x7e,0xeb,0x29,0x6d,0xb6,0xac,0xda}};
extern "C" const GUID __declspec(selectany) IID_ISSLInfo =
    {0x0dbcfafe,0x4724,0x416c,{0xa4,0xcd,0xc0,0xee,0xd8,0xca,0x7d,0x87}};
extern "C" const GUID __declspec(selectany) IID_IMessage =
    {0xe4e5591d,0xc47e,0x4a2d,{0x85,0x6e,0x8a,0x18,0x47,0x54,0x7a,0x97}};
extern "C" const GUID __declspec(selectany) CLSID_ProxyServerInfo =
    {0xf36507f2,0x7ef4,0x4119,{0xa4,0x49,0x81,0x99,0x8d,0xe3,0x6a,0xd1}};
extern "C" const GUID __declspec(selectany) CLSID_SSLInfo =
    {0xd5853dc9,0xd6a6,0x467a,{0x95,0x77,0x33,0x57,0xcc,0xcd,0x78,0x6a}};
extern "C" const GUID __declspec(selectany) CLSID_Message =
    {0x5fac2741,0x5ef9,0x47d8,{0xaf,0xb5,0x5e,0xe5,0xe6,0x79,0x14,0x3c}};
extern "C" const GUID __declspec(selectany) IID_IZipArchive =
    {0x55df03ae,0xb4f8,0x4387,{0xb8,0xb5,0x6f,0xb2,0x2b,0x15,0xdd,0xac}};
extern "C" const GUID __declspec(selectany) IID_IZipArchiveEx =
    {0xf088433d,0x0167,0x4866,{0xa8,0x46,0x55,0xca,0xb2,0xfb,0x76,0xb0}};
extern "C" const GUID __declspec(selectany) CLSID_ZipArchive =
    {0x3c1841db,0x3625,0x464f,{0xb2,0x16,0x41,0x81,0x1a,0x7e,0x8a,0x6c}};
extern "C" const GUID __declspec(selectany) IID_IZlibCompression =
    {0xfee4d81c,0x25d9,0x4389,{0xa2,0x0c,0x16,0x82,0x1e,0xc9,0x07,0x19}};
extern "C" const GUID __declspec(selectany) IID_ITextureCompression =
    {0xb5f3860a,0xfce1,0x4e71,{0x8f,0x12,0xbc,0x5c,0x6b,0xb0,0xf2,0x80}};
extern "C" const GUID __declspec(selectany) IID_IGlobeCompression =
    {0x650fc137,0x7869,0x4414,{0xa5,0x11,0xf7,0xe1,0x76,0xd3,0x30,0x1e}};
extern "C" const GUID __declspec(selectany) IID_IJobDefinition =
    {0xc24f654b,0xb929,0x443b,{0x9f,0xa1,0xa2,0xa8,0x3b,0xbc,0xe1,0x4b}};
extern "C" const GUID __declspec(selectany) IID_IJobResults =
    {0x4d919e2d,0xf6c1,0x47ba,{0xba,0x1f,0x6f,0x2c,0x29,0xa8,0x6e,0x22}};
extern "C" const GUID __declspec(selectany) IID_IJobMessages =
    {0x08125e66,0x7bf8,0x4618,{0x87,0xf2,0x77,0xd9,0xe3,0x64,0xf3,0x5a}};
extern "C" const GUID __declspec(selectany) IID_IJobInfo =
    {0x4a106e7e,0xd1e7,0x420f,{0xae,0xcf,0xcb,0xc8,0x67,0xa7,0xff,0x17}};
extern "C" const GUID __declspec(selectany) IID_IJob =
    {0x72ad9072,0xface,0x4ec8,{0xa7,0xfd,0x23,0xb4,0x1e,0x58,0xe2,0xb7}};
extern "C" const GUID __declspec(selectany) IID_IJobRegistry =
    {0xe65c015e,0xe176,0x4419,{0x96,0xbf,0x4c,0x0e,0x45,0xb3,0xdb,0x7d}};
extern "C" const GUID __declspec(selectany) IID_IJobFilter =
    {0x2c2d291a,0x51fd,0x4bfd,{0x99,0xa5,0xdb,0x88,0x9f,0xce,0xe9,0xf2}};
extern "C" const GUID __declspec(selectany) IID_IJobCatalog =
    {0x5c395aac,0xebbc,0x4ffd,{0xbb,0x1e,0xc9,0x98,0x58,0xe1,0x68,0xe0}};
extern "C" const GUID __declspec(selectany) CLSID_JobMessage =
    {0x512e6a8a,0x3c50,0x4dec,{0xb6,0x81,0x72,0x54,0xfe,0xde,0x41,0x09}};
extern "C" const GUID __declspec(selectany) CLSID_JobMessages =
    {0xf3a6825c,0x9780,0x4265,{0x89,0xa1,0xae,0x35,0xf7,0xa3,0xbb,0x56}};
extern "C" const GUID __declspec(selectany) IID_IESRIScriptEngine =
    {0x52b13a57,0xaa06,0x49be,{0xa4,0xd0,0x3c,0xdd,0xac,0x94,0x3e,0xbe}};
extern "C" const GUID __declspec(selectany) CLSID_ESRIScriptEngine =
    {0x8c82d73f,0xa962,0x43f7,{0xa3,0x77,0x26,0x55,0x7c,0x31,0x43,0xdf}};
extern "C" const GUID __declspec(selectany) IID_IJSONObject =
    {0xeea70515,0xfa6b,0x4dee,{0xab,0x79,0xd7,0x93,0x5b,0xf3,0xa8,0x38}};
extern "C" const GUID __declspec(selectany) IID_IJSONArray =
    {0x4abe3bc0,0x6d3c,0x4fba,{0x9c,0x55,0xc9,0xac,0x7c,0x32,0xd9,0xb1}};
extern "C" const GUID __declspec(selectany) IID_IRESTOperation =
    {0x2853ca57,0xae88,0x4b5d,{0xad,0xa3,0x4c,0xf6,0xf9,0x38,0xa0,0xe0}};
extern "C" const GUID __declspec(selectany) IID_IEnumRESTOperation =
    {0xdaf01fbe,0xa62e,0x4924,{0x86,0xb3,0xe2,0x57,0x00,0x6a,0x92,0xed}};
extern "C" const GUID __declspec(selectany) IID_IRESTCallback =
    {0x5d203d0e,0xd444,0x4201,{0xba,0x8f,0x4f,0x60,0xfe,0x0e,0x49,0x98}};
extern "C" const GUID __declspec(selectany) IID_ITimeReference =
    {0xf6cba4a3,0xbc48,0x47bc,{0x9f,0x15,0x2a,0x56,0x1b,0x9e,0x6c,0x71}};
extern "C" const GUID __declspec(selectany) IID_ITime =
    {0x66810d21,0x8de0,0x44ee,{0xb2,0x6e,0x46,0x5a,0xc0,0x9f,0x16,0x1f}};
extern "C" const GUID __declspec(selectany) IID_ITime2 =
    {0x30eae8e1,0x26b2,0x4e57,{0xa3,0xf2,0x8a,0xe7,0xc7,0xdb,0x24,0x55}};
extern "C" const GUID __declspec(selectany) IID_ITimeValue =
    {0x4ce86e17,0xe819,0x4c72,{0xbd,0x98,0xe5,0x5a,0xe5,0x9b,0x03,0x17}};
extern "C" const GUID __declspec(selectany) IID_ITimeExtent =
    {0xbd724b95,0x018f,0x4367,{0x98,0x83,0x95,0x60,0xd9,0x22,0x93,0xa7}};
extern "C" const GUID __declspec(selectany) IID_ITimeInstant =
    {0x81899ee9,0x2e12,0x4e6c,{0x94,0xf1,0x2b,0xa3,0x1d,0x3c,0xdb,0xc5}};
extern "C" const GUID __declspec(selectany) IID_ITimeZoneFactory =
    {0x1b4768dd,0x508e,0x4946,{0xab,0x04,0xe0,0x42,0xdf,0xce,0xb2,0x9f}};
extern "C" const GUID __declspec(selectany) IID_ITimeZoneFactory2 =
    {0x4caa06be,0x7199,0x40b3,{0xad,0xb6,0x78,0xba,0xe3,0x5d,0x52,0x27}};
extern "C" const GUID __declspec(selectany) IID_ITimeRelationalOperator =
    {0x7cffa76a,0x6552,0x4516,{0x85,0x99,0x98,0x22,0x50,0x65,0x24,0x9e}};
extern "C" const GUID __declspec(selectany) IID_IRESTResource =
    {0xb5561ea3,0x2950,0x4e21,{0x9e,0x4f,0xb1,0x00,0x3b,0x2a,0x1b,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IEnumRESTResource =
    {0x7502c3ec,0x249d,0x4616,{0xba,0xbb,0xda,0x81,0xf7,0xb5,0xc7,0x1e}};
extern "C" const GUID __declspec(selectany) IID_IRESTDispatcher =
    {0x1538e2dc,0x8192,0x412e,{0xa8,0x01,0x2b,0x86,0x55,0x49,0x2a,0xae}};

#pragma pack(pop)
